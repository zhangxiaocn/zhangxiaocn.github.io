<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZhangXiao&#39;s Blog</title>
  
  <subtitle>清风湿润，茶烟轻扬。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangxiaocn.github.io/"/>
  <updated>2020-02-04T07:07:22.718Z</updated>
  <id>https://zhangxiaocn.github.io/</id>
  
  <author>
    <name>Zhang Xiao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>TF 坐标变换（跟踪小海龟例程）</title>
    <link href="https://zhangxiaocn.github.io/2019/12/02/ros-tf/"/>
    <id>https://zhangxiaocn.github.io/2019/12/02/ros-tf/</id>
    <published>2019-12-02T12:29:00.000Z</published>
    <updated>2020-02-04T07:07:22.718Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>笔记整理记录自：<a href="https://www.bilibili.com/video/av69417218" target="_blank" rel="noopener">https://www.bilibili.com/video/av69417218</a></p></blockquote><h2 id="1-新建工作空间"><a class="markdownIt-Anchor" href="#1-新建工作空间"></a> 1、新建工作空间</h2><ol><li>新建 catkin_ws 文件：<code>mkdir -p catkin_ws/src</code></li><li>进入 catkin_ws 目录：<code>cd catkin_ws</code></li><li>初始化：<code>catkin_make</code></li><li>进入 src 文件：<code>cd src</code></li></ol><a id="more"></a><ol start="5"><li>创建用于通信的 package：<code>catkin_create_pkg learning_tf std_msgs rospy roscpp</code></li><li>编译一下：<code>catkin_make</code></li><li>添加 source：<code>echo &quot;source ~/catkin_ws/devel/setup.zsh &quot; &gt;&gt; ~/.zshrc</code></li><li>返回根目录：<code>cd</code></li><li>查看 source 是否添加：<code>gedit .zshrc</code> 或者 <code>vi .zshrc</code></li></ol><h2 id="2-创建编程文件"><a class="markdownIt-Anchor" href="#2-创建编程文件"></a> 2、创建编程文件</h2><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_tf/src</code></p></li><li><p>新建 <code>turtle_tf_broadcaster.cpp</code> 文件：<code>gedit turtle_tf_broadcaster.cpp</code></p></li><li><p>保存如下代码：</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tf/transform_broadcaster.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;turtlesim/Pose.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> turtle_name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">poseCallback</span><span class="params">(<span class="keyword">const</span> turtlesim::PoseConstPtr&amp; msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// tf广播器</span></span><br><span class="line">    <span class="keyword">static</span> tf::TransformBroadcaster br;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据乌龟当前的位姿，设置相对于世界坐标系的坐标变换</span></span><br><span class="line">    tf::Transform transform;</span><br><span class="line">    transform.setOrigin( tf::Vector3(msg-&gt;x, msg-&gt;y, <span class="number">0.0</span>) );</span><br><span class="line">    tf::Quaternion q;</span><br><span class="line">    q.setRPY(<span class="number">0</span>, <span class="number">0</span>, msg-&gt;theta);</span><br><span class="line">    transform.setRotation(q);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发布坐标变换</span></span><br><span class="line">    br.sendTransform(tf::StampedTransform(transform, ros::Time::now(), <span class="string">"world"</span>, turtle_name));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 初始化节点</span></span><br><span class="line">    ros::init(argc, argv, <span class="string">"my_tf_broadcaster"</span>);</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ROS_ERROR(<span class="string">"need turtle name as argument"</span>); </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    turtle_name = argv[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 订阅乌龟的pose信息</span></span><br><span class="line">    ros::NodeHandle node;</span><br><span class="line">    ros::Subscriber sub = node.subscribe(turtle_name+<span class="string">"/pose"</span>, <span class="number">10</span>, &amp;poseCallback);</span><br><span class="line"></span><br><span class="line">    ros::spin();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>新建 <code>turtle_tf_listener.cpp</code> 文件：<code>gedit turtle_tf_listener.cpp</code></p></li><li><p>保存如下代码：</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tf/transform_listener.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;geometry_msgs/Twist.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;turtlesim/Spawn.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 初始化节点</span></span><br><span class="line">    ros::init(argc, argv, <span class="string">"my_tf_listener"</span>);</span><br><span class="line"></span><br><span class="line">    ros::NodeHandle node;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过服务调用，产生第二只乌龟turtle2</span></span><br><span class="line">    ros::service::waitForService(<span class="string">"spawn"</span>);</span><br><span class="line">    ros::ServiceClient add_turtle =</span><br><span class="line">    node.serviceClient&lt;turtlesim::Spawn&gt;(<span class="string">"spawn"</span>);</span><br><span class="line">    turtlesim::Spawn srv;</span><br><span class="line">    add_turtle.call(srv);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义turtle2的速度控制发布器</span></span><br><span class="line">    ros::Publisher turtle_vel =</span><br><span class="line">    node.advertise&lt;geometry_msgs::Twist&gt;(<span class="string">"turtle2/cmd_vel"</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// tf监听器</span></span><br><span class="line">    tf::TransformListener listener;</span><br><span class="line"></span><br><span class="line">    ros::<span class="function">Rate <span class="title">rate</span><span class="params">(<span class="number">10.0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (node.ok())</span><br><span class="line">    &#123;</span><br><span class="line">        tf::StampedTransform transform;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 查找turtle2与turtle1的坐标变换</span></span><br><span class="line">            listener.waitForTransform(<span class="string">"/turtle2"</span>, <span class="string">"/turtle1"</span>, ros::Time(<span class="number">0</span>), ros::Duration(<span class="number">3.0</span>));</span><br><span class="line">            listener.lookupTransform(<span class="string">"/turtle2"</span>, <span class="string">"/turtle1"</span>, ros::Time(<span class="number">0</span>), transform);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (tf::TransformException &amp;ex) </span><br><span class="line">        &#123;</span><br><span class="line">            ROS_ERROR(<span class="string">"%s"</span>,ex.what());</span><br><span class="line">            ros::Duration(<span class="number">1.0</span>).sleep();</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据turtle1和turtle2之间的坐标变换，计算turtle2需要运动的线速度和角速度</span></span><br><span class="line">        <span class="comment">// 并发布速度控制指令，使turtle2向turtle1移动</span></span><br><span class="line">        geometry_msgs::Twist vel_msg;</span><br><span class="line">        vel_msg.angular.z = <span class="number">4.0</span> * <span class="built_in">atan2</span>(transform.getOrigin().y(),</span><br><span class="line">                                        transform.getOrigin().x());</span><br><span class="line">        vel_msg.linear.x = <span class="number">0.5</span> * <span class="built_in">sqrt</span>(<span class="built_in">pow</span>(transform.getOrigin().x(), <span class="number">2</span>) +</span><br><span class="line">                                      <span class="built_in">pow</span>(transform.getOrigin().y(), <span class="number">2</span>));</span><br><span class="line">        turtle_vel.publish(vel_msg);</span><br><span class="line"></span><br><span class="line">        rate.sleep();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-配置"><a class="markdownIt-Anchor" href="#3-配置"></a> 3、配置</h2><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_tf/</code></p></li><li><p>编辑 <code>CMakeLists.txt</code> 文件：<code>gedit CMakeLists.txt</code></p></li><li><p>保存如下代码：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">find_package(.... tf)</span><br><span class="line"></span><br><span class="line">add_executable(turtle_tf_broadcaster src/turtle_tf_broadcaster.cpp)</span><br><span class="line">target_link_libraries(turtle_tf_broadcaster $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line"></span><br><span class="line">add_executable(turtle_tf_listener src/turtle_tf_listener.cpp)</span><br><span class="line">target_link_libraries(turtle_tf_listener $&#123;catkin_LIBRARIES&#125;)</span><br></pre></td></tr></table></figure></li><li><p>返回主目录：<code>cd ~/catkin_ws/</code></p></li><li><p>编译一下：<code>catkin_make</code></p></li></ol><h2 id="4-创建-launch-文件"><a class="markdownIt-Anchor" href="#4-创建-launch-文件"></a> 4、创建 launch 文件</h2><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_tf/</code></p></li><li><p>新建 <code>launch</code> 文件夹：<code>mkdir launch</code></p></li><li><p>新建文件：<code>gedit start_demo_with_listener.launch</code></p></li><li><p>保存如下代码：</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 海龟仿真器 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">"turtlesim"</span> <span class="attr">type</span>=<span class="string">"turtlesim_node"</span> <span class="attr">name</span>=<span class="string">"sim"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 键盘控制 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">"turtlesim"</span> <span class="attr">type</span>=<span class="string">"turtle_teleop_key"</span> <span class="attr">name</span>=<span class="string">"teleop"</span> <span class="attr">output</span>=<span class="string">"screen"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 两只海龟的tf广播 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">"learning_tf"</span> <span class="attr">type</span>=<span class="string">"turtle_tf_broadcaster"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">args</span>=<span class="string">"/turtle1"</span> <span class="attr">name</span>=<span class="string">"turtle1_tf_broadcaster"</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">"learning_tf"</span> <span class="attr">type</span>=<span class="string">"turtle_tf_broadcaster"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">args</span>=<span class="string">"/turtle2"</span> <span class="attr">name</span>=<span class="string">"turtle2_tf_broadcaster"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 监听tf广播，并且控制turtle2移动 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">"learning_tf"</span> <span class="attr">type</span>=<span class="string">"turtle_tf_listener"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">name</span>=<span class="string">"listener"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="5-运行"><a class="markdownIt-Anchor" href="#5-运行"></a> 5、运行</h2><ol><li>启动 launch 坐标文件：<code>roslaunch learning_tf start_demo_with_listener.launch</code></li><li>通过按键控制海龟即可</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;笔记整理记录自：&lt;a href=&quot;https://www.bilibili.com/video/av69417218&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bilibili.com/video/av69417218&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-新建工作空间&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-新建工作空间&quot;&gt;&lt;/a&gt; 1、新建工作空间&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;新建 catkin_ws 文件：&lt;code&gt;mkdir -p catkin_ws/src&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;进入 catkin_ws 目录：&lt;code&gt;cd catkin_ws&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;初始化：&lt;code&gt;catkin_make&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;进入 src 文件：&lt;code&gt;cd src&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://zhangxiaocn.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ROS" scheme="https://zhangxiaocn.github.io/tags/ROS/"/>
    
  </entry>
  
  <entry>
    <title>初级 ROS 通信编程流程</title>
    <link href="https://zhangxiaocn.github.io/2019/12/02/ros-%C2%96%C2%96communication/"/>
    <id>https://zhangxiaocn.github.io/2019/12/02/ros-communication/</id>
    <published>2019-12-02T12:25:50.000Z</published>
    <updated>2020-02-04T07:18:28.139Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>笔记整理记录自：<a href="https://www.bilibili.com/video/av69417218" target="_blank" rel="noopener">https://www.bilibili.com/video/av69417218</a></p></blockquote><h2 id="1-话题编程"><a class="markdownIt-Anchor" href="#1-话题编程"></a> 1、话题编程</h2><h3 id="11-新建工作空间"><a class="markdownIt-Anchor" href="#11-新建工作空间"></a> 1.1、新建工作空间</h3><ol><li>新建 catkin_ws 文件：<code>mkdir -p catkin_ws/src</code></li><li>进入 catkin_ws 目录：<code>cd catkin_ws</code></li><li>初始化：<code>catkin_make</code></li></ol><a id="more"></a><ol start="4"><li>进入 src 文件：<code>cd src</code></li><li>创建用于通信的 package：<code>catkin_create_pkg learning_test1 std_msgs rospy roscpp</code></li><li>编译一下：<code>catkin_make</code></li><li>添加 source：<code>echo &quot;source ~/catkin_ws/devel/setup.zsh &quot; &gt;&gt; ~/.zshrc</code></li><li>返回根目录：<code>cd</code></li><li>查看 source 是否添加：<code>gedit .zshrc</code> 或者 <code>vi .zshrc</code></li></ol><h3 id="12-创建编程文件"><a class="markdownIt-Anchor" href="#12-创建编程文件"></a> 1.2、创建编程文件</h3><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_test1/src</code></p></li><li><p>新建 <code>talker.cpp</code> 文件：<code>gedit talker.cpp</code></p></li><li><p>保存如下代码：</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程将发布chatter话题，消息类型String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ros/ros.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"std_msgs/String.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// ROS节点初始化</span></span><br><span class="line">  ros::init(argc, argv, <span class="string">"talker"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建节点句柄</span></span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建一个Publisher，发布名为chatter的topic，消息类型为std_msgs::String</span></span><br><span class="line">  ros::Publisher chatter_pub = n.advertise&lt;std_msgs::String&gt;(<span class="string">"chatter"</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置循环的频率</span></span><br><span class="line">  ros::<span class="function">Rate <span class="title">loop_rate</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (ros::ok())</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 初始化std_msgs::String类型的消息</span></span><br><span class="line">    std_msgs::String msg;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">stringstream</span> ss;</span><br><span class="line">    ss &lt;&lt; <span class="string">"hello world "</span> &lt;&lt; count;</span><br><span class="line">    msg.data = ss.str();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发布消息</span></span><br><span class="line">    ROS_INFO(<span class="string">"%s"</span>, msg.data.c_str());</span><br><span class="line">    chatter_pub.publish(msg);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环等待回调函数</span></span><br><span class="line">    ros::spinOnce();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按照循环频率延时</span></span><br><span class="line">    loop_rate.sleep();</span><br><span class="line">    ++count;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新建 <code>listener.cpp</code> 文件：<code>gedit listener.cpp</code></p></li><li><p>保存如下代码：</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 该例程将订阅chatter话题，消息类型String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ros/ros.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"std_msgs/String.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收到订阅的消息后，会进入消息回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chatterCallback</span><span class="params">(<span class="keyword">const</span> std_msgs::String::ConstPtr&amp; msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// 将接收到的消息打印出来</span></span><br><span class="line">  ROS_INFO(<span class="string">"I heard: [%s]"</span>, msg-&gt;data.c_str());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// 初始化ROS节点</span></span><br><span class="line">  ros::init(argc, argv, <span class="string">"listener"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建节点句柄</span></span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建一个Subscriber，订阅名为chatter的topic，注册回调函数chatterCallback</span></span><br><span class="line">  ros::Subscriber sub = n.subscribe(<span class="string">"chatter"</span>, <span class="number">1000</span>, chatterCallback);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 循环等待回调函数</span></span><br><span class="line">  ros::spin();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="13-配置"><a class="markdownIt-Anchor" href="#13-配置"></a> 1.3、配置</h3><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_test1/</code></p></li><li><p>编辑 <code>CMakeLists.txt</code> 文件：<code>gedit CMakeLists.txt</code></p></li><li><p>保存如下代码：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add_executable(talker src/talker.cpp)</span><br><span class="line">add_executable(listener src/listener.cpp)</span><br><span class="line">target_link_libraries(talker $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">target_link_libraries(listener $&#123;catkin_LIBRARIES&#125;)</span><br></pre></td></tr></table></figure></li><li><p>返回主目录：<code>cd ~/catkin_ws/</code></p></li><li><p>编译一下：<code>catkin_make</code></p></li></ol><h3 id="14-运行"><a class="markdownIt-Anchor" href="#14-运行"></a> 1.4、运行</h3><ol><li>新建终端，启动 ros：<code>roscore</code></li><li>新建终端，启动 listener：<code>rosrun learning_test1 listener</code></li><li>新建终端，启动 talker：<code>rosrun learning_test1 talker</code></li><li>即可看到效果</li></ol><h3 id="15-自定义话题消息添加-msg"><a class="markdownIt-Anchor" href="#15-自定义话题消息添加-msg"></a> *1.5、自定义话题消息（添加 msg）</h3><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_test1/</code></p></li><li><p>新建一个 msg 文件夹：<code>mkdir msg</code></p></li><li><p>进入 msg 文件夹：<code>cd msg</code></p></li><li><p>新建一个名为 <code>Person.msg</code> 的文件：<code>gedit Person.msg</code></p></li><li><p>保存如下测试代码：</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> name</span><br><span class="line">uint8  sex</span><br><span class="line">uint8  age</span><br><span class="line"></span><br><span class="line">uint8 unknown = <span class="number">0</span></span><br><span class="line">uint8 male    = <span class="number">1</span></span><br><span class="line">uint8 female  = <span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>退回上一个文件夹：<code>cd ..</code></p></li><li><p>修改 <code>package.xml</code> 文件，添加功能包依赖：<code>gedit package.xml</code></p></li><li><p>添加如下代码：</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>message_generation<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>message_runtime<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改 <code>CMakeLists.txt</code> 文件，添加功能包依赖：<code>gedit CMakeLists.txt</code></p></li><li><p>添加如下代码（注意添加的位置，放错位置会报错）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find_package(..... message_generation)</span><br><span class="line">catkin_package(CATKIN_DEPENDS roscpp rospy std_msgs message_runtime)</span><br><span class="line">add_message_files(FILES Person.msg)</span><br><span class="line">generate_messages(DEPENDENCIES std_msgs)</span><br></pre></td></tr></table></figure></li><li><p>返回主目录：<code>cd ~/catkin_ws/</code></p></li><li><p>编译一下：<code>catkin_make</code></p></li></ol><blockquote><p>可以用 <code>rosmsg show Person</code> 命令查看 <code>Person.msg</code> 的内容</p></blockquote><h2 id="2-服务编程加法例程"><a class="markdownIt-Anchor" href="#2-服务编程加法例程"></a> 2、服务编程（加法例程）</h2><h3 id="21-新建工作空间"><a class="markdownIt-Anchor" href="#21-新建工作空间"></a> 2.1、新建工作空间</h3><ol><li>方法和话题编程第一步一样，注意换一个 package 名称，例如：<code>catkin_create_pkg learning_test2 std_msgs rospy roscpp</code></li></ol><h3 id="22-创建-srv-文件"><a class="markdownIt-Anchor" href="#22-创建-srv-文件"></a> 2.2、创建 srv 文件</h3><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_test2/</code></p></li><li><p>新建 <code>srv</code> 文件夹：<code>mkdir srv</code></p></li><li><p>新建文件：<code>gedit AddTwoInts.srv</code></p></li><li><p>保存如下代码：</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int64 a    <span class="comment">// 服务的请求数据</span></span><br><span class="line">int64 b</span><br><span class="line">---</span><br><span class="line">int64 sum  <span class="comment">// 服务的应答数据</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="23-配置"><a class="markdownIt-Anchor" href="#23-配置"></a> 2.3、配置</h3><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_test2/</code></p></li><li><p>编辑 <code>package.xml</code> 文件：<code>gedit package.xml</code></p></li><li><p>保存如下代码：</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>message_generation<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>message_runtime<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编辑 <code>CMakeLists.txt</code> 文件：<code>gedit CMakeLists.txt</code></p></li><li><p>保存如下代码</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find_package(.... message_generation)</span><br><span class="line">catkin_package(.... message_runtime)</span><br><span class="line">add_service_files(FILES AddTwoInts.srv)</span><br></pre></td></tr></table></figure></li><li><p>返回主目录：<code>cd ~/catkin_ws/</code></p></li><li><p>编译一下：<code>catkin_make</code></p></li></ol><h3 id="24-添加用户程序"><a class="markdownIt-Anchor" href="#24-添加用户程序"></a> 2.4、添加用户程序</h3><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_test2/src</code></p></li><li><p>新建 <code>server.cpp</code> 文件：<code>gedit server.cpp</code></p></li><li><p>保存如下代码：</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AddTwoInts Server</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ros/ros.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"learning_test2/AddTwoInts.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// service回调函数，输入参数req，输出参数res</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">add</span><span class="params">(learning_test2::AddTwoInts::Request  &amp;req,</span></span></span><br><span class="line"><span class="function"><span class="params">         learning_test2::AddTwoInts::Response &amp;res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// 将输入参数中的请求数据相加，结果放到应答变量中</span></span><br><span class="line">  res.sum = req.a + req.b;</span><br><span class="line">  ROS_INFO(<span class="string">"request: x=%ld, y=%ld"</span>, (<span class="keyword">long</span> <span class="keyword">int</span>)req.a, (<span class="keyword">long</span> <span class="keyword">int</span>)req.b);</span><br><span class="line">  ROS_INFO(<span class="string">"sending back response: [%ld]"</span>, (<span class="keyword">long</span> <span class="keyword">int</span>)res.sum);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// ROS节点初始化</span></span><br><span class="line">  ros::init(argc, argv, <span class="string">"add_two_ints_server"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建节点句柄</span></span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建一个名为add_two_ints的server，注册回调函数add()</span></span><br><span class="line">  ros::ServiceServer service = n.advertiseService(<span class="string">"add_two_ints"</span>, add);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 循环等待回调函数</span></span><br><span class="line">  ROS_INFO(<span class="string">"Ready to add two ints."</span>);</span><br><span class="line">  ros::spin();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新建 <code>client.cpp</code> 文件：<code>gedit client.cpp</code></p></li><li><p>保存如下代码：</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AddTwoInts Client</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ros/ros.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"learning_test2/AddTwoInts.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// ROS节点初始化</span></span><br><span class="line">  ros::init(argc, argv, <span class="string">"add_two_ints_client"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 从终端命令行获取两个加数</span></span><br><span class="line">  <span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    ROS_INFO(<span class="string">"usage: add_two_ints_client X Y"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建节点句柄</span></span><br><span class="line">  ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建一个client，请求add_two_int service，service消息类型是learning_communication::AddTwoInts</span></span><br><span class="line">  ros::ServiceClient client = n.serviceClient&lt;learning_test2::AddTwoInts&gt;(<span class="string">"add_two_ints"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建learning_communication::AddTwoInts类型的service消息</span></span><br><span class="line">  learning_test2::AddTwoInts srv;</span><br><span class="line">  srv.request.a = atoll(argv[<span class="number">1</span>]);</span><br><span class="line">  srv.request.b = atoll(argv[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 发布service请求，等待加法运算的应答结果</span></span><br><span class="line">  <span class="keyword">if</span> (client.call(srv))</span><br><span class="line">  &#123;</span><br><span class="line">    ROS_INFO(<span class="string">"Sum: %ld"</span>, (<span class="keyword">long</span> <span class="keyword">int</span>)srv.response.sum);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    ROS_ERROR(<span class="string">"Failed to call service add_two_ints"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="25-再配置"><a class="markdownIt-Anchor" href="#25-再配置"></a> 2.5、再配置</h3><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_test2/</code></p></li><li><p>编辑 <code>CMakeLists.txt</code> 文件：<code>gedit CMakeLists.txt</code></p></li><li><p>保存如下代码：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add_executable(server src/server.cpp)</span><br><span class="line">target_link_libraries(server $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(server $&#123;PROJECT_NAME&#125;_gencpp)</span><br><span class="line"></span><br><span class="line">add_executable(client src/client.cpp)</span><br><span class="line">target_link_libraries(client $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(client $&#123;PROJECT_NAME&#125;_gencpp)</span><br></pre></td></tr></table></figure></li><li><p>返回主目录：<code>cd ~/catkin_ws/</code></p></li><li><p>编译一下：<code>catkin_make</code></p></li></ol><h3 id="26-运行"><a class="markdownIt-Anchor" href="#26-运行"></a> 2.6、运行</h3><ol><li>新建终端，启动 ros：<code>roscore</code></li><li>新建终端，启动 server：<code>rosrun learning_test2 server</code></li><li>新建终端，启动 client：<code>rosrun learning_test1 client 3 5</code></li><li>即可看到效果（3+5=8）</li></ol><h2 id="3-动作编程洗盘子例程"><a class="markdownIt-Anchor" href="#3-动作编程洗盘子例程"></a> 3、动作编程（洗盘子例程）</h2><h3 id="31-新建工作空间"><a class="markdownIt-Anchor" href="#31-新建工作空间"></a> 3.1、新建工作空间</h3><ol><li>方法和话题编程第一步一样，注意换一个 package 名称，例如：<code>catkin_create_pkg learning_tes3 std_msgs rospy roscpp</code></li></ol><h3 id="32-创建-action-文件"><a class="markdownIt-Anchor" href="#32-创建-action-文件"></a> 3.2、创建 action 文件</h3><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_test3/</code></p></li><li><p>新建 <code>action</code> 文件夹：<code>mkdir action</code></p></li><li><p>新建文件：<code>gedit DoDishes.action</code></p></li><li><p>保存如下代码：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Define the goal</span><br><span class="line">uint32 dishwasher_id  # Specify which dishwasher we want to use</span><br><span class="line">---</span><br><span class="line"># Define the result</span><br><span class="line">uint32 total_dishes_cleaned</span><br><span class="line">---</span><br><span class="line"># Define a feedback message</span><br><span class="line">float32 percent_complete</span><br></pre></td></tr></table></figure></li></ol><h3 id="33-配置"><a class="markdownIt-Anchor" href="#33-配置"></a> 3.3、配置</h3><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_test3/</code></p></li><li><p>编辑 <code>package.xml</code> 文件：<code>gedit package.xml</code></p></li><li><p>保存如下代码：</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>actionlib<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>actionlib_msgs<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>actionlib<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>actionlib_msgs<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编辑 <code>CMakeLists.txt</code> 文件：<code>gedit CMakeLists.txt</code></p></li><li><p>保存如下代码</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find_package(catkin REQUIRED actionlib_msgs actionlib)</span><br><span class="line">add_action_files(DIRECTORY action FILES DoDishes.action)</span><br><span class="line">generate_messages(DEPENDENCIES actionlib_msgs)</span><br></pre></td></tr></table></figure></li><li><p>返回主目录：<code>cd ~/catkin_ws/</code></p></li><li><p>编译一下：<code>catkin_make</code></p></li></ol><h3 id="34-添加用户程序"><a class="markdownIt-Anchor" href="#34-添加用户程序"></a> 3.4、添加用户程序</h3><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_test3/src</code></p></li><li><p>新建 <code>DoDishes_server.cpp</code> 文件：<code>gedit DoDishes_server.cpp</code></p></li><li><p>保存如下代码：</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ros/ros.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;actionlib/server/simple_action_server.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"learning_test3/DoDishesAction.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> actionlib::SimpleActionServer&lt;learning_test3::DoDishesAction&gt; Server;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 收到action的goal后调用该回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">execute</span><span class="params">(<span class="keyword">const</span> learning_test3::DoDishesGoalConstPtr&amp; goal, Server* as)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ros::<span class="function">Rate <span class="title">r</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line">    learning_test3::DoDishesFeedback feedback;</span><br><span class="line"></span><br><span class="line">    ROS_INFO(<span class="string">"Dishwasher %d is working."</span>, goal-&gt;dishwasher_id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 假设洗盘子的进度，并且按照1hz的频率发布进度feedback</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        feedback.percent_complete = i * <span class="number">10</span>;</span><br><span class="line">        as-&gt;publishFeedback(feedback);</span><br><span class="line">        r.sleep();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当action完成后，向客户端返回结果</span></span><br><span class="line">    ROS_INFO(<span class="string">"Dishwasher %d finish working."</span>, goal-&gt;dishwasher_id);</span><br><span class="line">    as-&gt;setSucceeded();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ros::init(argc, argv, <span class="string">"do_dishes_server"</span>);</span><br><span class="line">    ros::NodeHandle n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个服务器</span></span><br><span class="line">    <span class="function">Server <span class="title">server</span><span class="params">(n, <span class="string">"do_dishes"</span>, boost::bind(&amp;execute, _1, &amp;server), <span class="literal">false</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 服务器开始运行</span></span><br><span class="line">    server.start();</span><br><span class="line"></span><br><span class="line">    ros::spin();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新建 <code>DoDishes_client.cpp</code> 文件：<code>gedit DoDishes_client.cpp</code></p></li><li><p>保存如下代码：</p> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;actionlib/client/simple_action_client.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"learning_test3/DoDishesAction.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> actionlib::SimpleActionClient&lt;learning_test3::DoDishesAction&gt; Client;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当action完成后会调用该回调函数一次</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doneCb</span><span class="params">(<span class="keyword">const</span> actionlib::SimpleClientGoalState&amp; state,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">const</span> learning_test3::DoDishesResultConstPtr&amp; result)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ROS_INFO(<span class="string">"Yay! The dishes are now clean"</span>);</span><br><span class="line">    ros::shutdown();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当action激活后会调用该回调函数一次</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">activeCb</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ROS_INFO(<span class="string">"Goal just went active"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 收到feedback后调用该回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">feedbackCb</span><span class="params">(<span class="keyword">const</span> learning_test3::DoDishesFeedbackConstPtr&amp; feedback)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ROS_INFO(<span class="string">" percent_complete : %f "</span>, feedback-&gt;percent_complete);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ros::init(argc, argv, <span class="string">"do_dishes_client"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义一个客户端</span></span><br><span class="line">    <span class="function">Client <span class="title">client</span><span class="params">(<span class="string">"do_dishes"</span>, <span class="literal">true</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 等待服务器端</span></span><br><span class="line">    ROS_INFO(<span class="string">"Waiting for action server to start."</span>);</span><br><span class="line">    client.waitForServer();</span><br><span class="line">    ROS_INFO(<span class="string">"Action server started, sending goal."</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个action的goal</span></span><br><span class="line">    learning_test3::DoDishesGoal goal;</span><br><span class="line">    goal.dishwasher_id = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送action的goal给服务器端，并且设置回调函数</span></span><br><span class="line">    client.sendGoal(goal,  &amp;doneCb, &amp;activeCb, &amp;feedbackCb);</span><br><span class="line"></span><br><span class="line">    ros::spin();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="35-再配置"><a class="markdownIt-Anchor" href="#35-再配置"></a> 3.5、再配置</h3><ol><li><p>找到刚才的工作空间：<code>cd ~/catkin_ws/src/learning_test3/</code></p></li><li><p>编辑 <code>CMakeLists.txt</code> 文件：<code>gedit CMakeLists.txt</code></p></li><li><p>保存如下代码：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add_executable(DoDishes_client src/DoDishes_client.cpp)</span><br><span class="line">target_link_libraries(DoDishes_client $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(DoDishes_client $&#123;$&#123;PROJECT_NAME&#125;_EXPORTED_TARGETS&#125;)</span><br><span class="line"></span><br><span class="line">add_executable(DoDishes_server src/DoDishes_server.cpp)</span><br><span class="line">target_link_libraries(DoDishes_server $&#123;catkin_LIBRARIES&#125;)</span><br><span class="line">add_dependencies(DoDishes_server $&#123;$&#123;PROJECT_NAME&#125;_EXPORTED_TARGETS&#125;)</span><br></pre></td></tr></table></figure></li><li><p>返回主目录：<code>cd ~/catkin_ws/</code></p></li><li><p>编译一下：<code>catkin_make</code></p></li></ol><h3 id="36-运行"><a class="markdownIt-Anchor" href="#36-运行"></a> 3.6、运行</h3><ol><li>新建终端，启动 ros：<code>roscore</code></li><li>新建终端，启动 server：<code>rosrun learning_test3 DoDishes_client</code></li><li>新建终端，启动 client：<code>rosrun learning_test1 DoDishes_server</code></li><li>即可看到效果（洗盘子进度）</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;笔记整理记录自：&lt;a href=&quot;https://www.bilibili.com/video/av69417218&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bilibili.com/video/av69417218&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-话题编程&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-话题编程&quot;&gt;&lt;/a&gt; 1、话题编程&lt;/h2&gt;
&lt;h3 id=&quot;11-新建工作空间&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-新建工作空间&quot;&gt;&lt;/a&gt; 1.1、新建工作空间&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;新建 catkin_ws 文件：&lt;code&gt;mkdir -p catkin_ws/src&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;进入 catkin_ws 目录：&lt;code&gt;cd catkin_ws&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;初始化：&lt;code&gt;catkin_make&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://zhangxiaocn.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ROS" scheme="https://zhangxiaocn.github.io/tags/ROS/"/>
    
  </entry>
  
  <entry>
    <title>ROS Melodic 小海龟操控实例</title>
    <link href="https://zhangxiaocn.github.io/2019/12/02/ros-turtle/"/>
    <id>https://zhangxiaocn.github.io/2019/12/02/ros-turtle/</id>
    <published>2019-12-02T12:20:10.000Z</published>
    <updated>2020-02-04T07:18:59.331Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>执行新的命令操作时，均需要启动一个新的终端然后输入命令。</p></blockquote><p><strong>基础操作：</strong></p><ol><li>启动 ROS Master：<code>roscore</code></li><li>启动小海龟仿真器：<code>rosrun turtlesim turtlesim_node</code></li><li>启动小海龟键盘控制节点：<code>rosrun turtlesim turtle_teleop_key</code></li><li>此时按键盘上的方向键即可操控小海龟运行</li></ol><a id="more"></a><p><strong>其他操作：</strong></p><blockquote><p>提前说明：有小伙伴曾反馈指令有问题，输入后会报错。经查实，是因为不同行的问题，如果指令都在同一行，则会出现问题。所以不要把不同行的代码在同一行输入！</p></blockquote><p>新生一只小海龟：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rosservice call /spawn &quot;x: 5.0</span><br><span class="line">y: 5.0</span><br><span class="line">theta: 0.0</span><br><span class="line">name: &apos;turtle2&apos;&quot;</span><br></pre></td></tr></table></figure><p>让第一只小海龟绕圈跑：</p><blockquote><p>代码中的 x,y,z 为坐标及角度信息，按照意愿自行修改即可。</p></blockquote><blockquote><p><code>-r 10</code> 表示让命令以 10Hz 的频率控制小海龟运行，可以自行修改或者删除该指令。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rostopic pub -r 10 /turtle1/cmd_vel geometry_msgs/Twist &quot;linear:</span><br><span class="line">  x: 1.0</span><br><span class="line">  y: 0.0</span><br><span class="line">  z: 0.0</span><br><span class="line">angular:</span><br><span class="line">  x: 0.0</span><br><span class="line">  y: 0.0</span><br><span class="line">  z: 1.0&quot;</span><br></pre></td></tr></table></figure><p>不喜欢换行输入的小伙伴，可以输入如下简化指令：<code>rostopic pub -r 10 /turtle1/cmd_vel geometry_msgs/Twist -- '[1.0, 0.0, 0.0]' '[0.0, 0.0, 1.0]'</code></p><p>同理，让第二只小海龟绕圈跑：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rostopic pub -r 10 /turtle2/cmd_vel geometry_msgs/Twist &quot;linear:</span><br><span class="line">  x: 1.0</span><br><span class="line">  y: 0.0</span><br><span class="line">  z: 0.0</span><br><span class="line">angular:</span><br><span class="line">  x: 0.0</span><br><span class="line">  y: 0.0</span><br><span class="line">  z: 1.0&quot;</span><br></pre></td></tr></table></figure><p><strong>一只小海龟追赶另外一只小海龟实例：</strong></p><ol><li>安装小海龟坐标变换功能包：<code>sudo apt install ros-melodic-turtle-tf</code></li><li>运行功能包：<code>roslaunch turtle_tf turtle_tf_demo.launch</code></li><li>启动小海龟键盘控制节点：<code>rosrun turtlesim turtle_teleop_key</code></li><li>此时按键盘上的方向键即可操控第一只小海龟运行，第二只小海龟会自动跟踪第一只小海龟</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;执行新的命令操作时，均需要启动一个新的终端然后输入命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;基础操作：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;启动 ROS Master：&lt;code&gt;roscore&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启动小海龟仿真器：&lt;code&gt;rosrun turtlesim turtlesim_node&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启动小海龟键盘控制节点：&lt;code&gt;rosrun turtlesim turtle_teleop_key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;此时按键盘上的方向键即可操控小海龟运行&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://zhangxiaocn.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ROS" scheme="https://zhangxiaocn.github.io/tags/ROS/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu18.04LTS 美化（仿Mac）</title>
    <link href="https://zhangxiaocn.github.io/2019/11/22/ubuntu-beautify/"/>
    <id>https://zhangxiaocn.github.io/2019/11/22/ubuntu-beautify/</id>
    <published>2019-11-22T11:16:32.000Z</published>
    <updated>2020-02-04T07:19:56.159Z</updated>
    
    <content type="html"><![CDATA[<p>如下为本人美化后的界面：</p><p><img src="/2019/11/22/ubuntu-beautify/ubuntu_desktop.png" alt="ubuntu"></p><a id="more"></a><h2 id="1-安装美化软件"><a class="markdownIt-Anchor" href="#1-安装美化软件"></a> 1、安装美化软件</h2><ol><li>安装美化软件 gnome-tweak-tool：<code>sudo apt install gnome-tweak-tool</code></li><li>安装完成后，找到名为 <code>优化</code> 的软件并打开</li><li>选择 <code>窗口</code> 选项，将 <code>放置</code> 选项改为 <code>左</code>，其他的根据喜好自定义</li><li>安装相应的插件：<code>sudo apt-get install gnome-shell-extensions</code></li><li>安装完成后，重启系统</li><li>打开 <code>优化</code>，找到 <code>扩展</code> 选项，打开 <code>User themes</code></li><li>关闭软件</li></ol><h2 id="2-安装-mac-主题图标"><a class="markdownIt-Anchor" href="#2-安装-mac-主题图标"></a> 2、安装 Mac 主题/图标</h2><ol><li>打开 Mac 主题网址：<a href="https://www.gnome-look.org/p/1275087/" target="_blank" rel="noopener">https://www.gnome-look.org/p/1275087/</a></li><li>选择 <code>Files</code> 选项，将名为 <code>Mojave-dark.tar.xz</code> 和 <code>Mojave-light.tar.xz</code> 下载下来</li><li>解压下载完成的主题压缩包</li><li>在解压的主题所在目录，打开终端</li><li>将主题放入系统主题目录：<code>sudo cp -r Mojave-light/ /usr/share/themes/</code>、<code>sudo cp -r Mojave-dark/ /usr/share/themes/</code></li><li>打开 <code>优化</code> 软件，选择 <code>外观</code> 选项，找到 <code>主题</code>，将主题改为 Mac 主题</li><li>找到 <code>shell</code>，改为 Mac 主题</li><li>打开 Mac 图标网址：<a href="https://www.opendesktop.org/s/Gnome/p/1102582/" target="_blank" rel="noopener">https://www.opendesktop.org/s/Gnome/p/1102582/</a></li><li>选择 <code>Files</code> 选项，将名为 <code>Cupertino.tar.xz</code> 的文件下载下来</li><li>解压下载完成的图标压缩包</li><li>在解压的主题所在目录，打开终端</li><li>将主题放入系统图标目录：<code>sudo cp -r Cupertino-Mojave/ /usr/share/icons/</code></li><li>打开 <code>优化</code> 软件，选择 <code>外观</code> 选项，找到 <code>图标</code>，将图标改为 Mac 图标即可</li></ol><h2 id="3-安装相应扩展"><a class="markdownIt-Anchor" href="#3-安装相应扩展"></a> 3、安装相应扩展</h2><ol><li>打开 Ubuntu 应用商店，安装 Dash to Dock</li><li>用火狐浏览器打开：<a href="https://extensions.gnome.org/" target="_blank" rel="noopener">https://extensions.gnome.org/</a></li><li>点击提示栏里的 <code>Click here to install browser extension</code> 选项，允许安装</li><li>终端输入：<code>sudo apt-get install chrome-gnome-shell</code> 安装浏览器插件</li><li>刷新浏览器界面</li><li>搜索 <code>Dash to Dock</code> 并安装（Dock 栏扩展）</li><li>搜索 <code>Coverflow Alt-Tab</code> 并安装（切换窗口扩展）</li><li>搜索 <code>Open Weather</code> 并安装（天气扩展）</li><li>搜索 <code>Screenshot Tool</code> 并安装（截图扩展）</li><li>搜索 <code>Simple net speed</code> 并安装（网速指示扩展）</li><li>打开 <code>优化</code>，找到 <code>扩展</code>，点击每个扩展后面的齿轮图标，可以对下载的扩展进行相应设置</li><li>其他的插件根据需要下载</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如下为本人美化后的界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/11/22/ubuntu-beautify/ubuntu_desktop.png&quot; alt=&quot;ubuntu&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://zhangxiaocn.github.io/categories/Ubuntu/"/>
    
    
      <category term="美化" scheme="https://zhangxiaocn.github.io/tags/%E7%BE%8E%E5%8C%96/"/>
    
      <category term="Ubuntu" scheme="https://zhangxiaocn.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>安装 Ubuntu18.04 双系统笔记</title>
    <link href="https://zhangxiaocn.github.io/2019/11/22/win10-ubuntu/"/>
    <id>https://zhangxiaocn.github.io/2019/11/22/win10-ubuntu/</id>
    <published>2019-11-22T11:02:38.000Z</published>
    <updated>2020-02-04T07:20:30.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装双系统"><a class="markdownIt-Anchor" href="#1-安装双系统"></a> 1、安装双系统</h2><h3 id="11-制作-ubuntu-系统安装-u盘"><a class="markdownIt-Anchor" href="#11-制作-ubuntu-系统安装-u盘"></a> 1.1、制作 Ubuntu 系统安装 U盘</h3><ol><li>下载 Ubuntu 安装镜像，建议下载 LTS 长期支持版：<a href="https://ubuntu.com/download/desktop" target="_blank" rel="noopener">https://ubuntu.com/download/desktop</a></li><li>使用 ultraiso，或者使用其他镜像制作软件，将 Ubuntu 系统拷至 U 盘里，具体方法百度搜索一堆。</li></ol><a id="more"></a><h3 id="12-前期磁盘准备"><a class="markdownIt-Anchor" href="#12-前期磁盘准备"></a> 1.2、前期磁盘准备</h3><ol><li>在 Win10 中，鼠标右键选择 <code>计算机</code> --&gt; <code>管理</code> --&gt; <code>磁盘管理</code></li><li>选择你需要安装 Ubuntu 的磁盘，右键选择 <code>压缩卷</code>，压缩一个你需要的空间大小（建议至少 60G，不要分配盘符）</li><li>打开 <code>系统设置</code>  --&gt; <code>系统</code> --&gt; <code>电源和睡眠</code> --&gt; <code>其他电源设置</code> --&gt; <code>选择电源按钮的功能</code> --&gt; <code>更改当前不可用的设置</code> --&gt; <code>关闭启用快速启动的选项</code>（如果上述步骤没找到，可以百度搜索 Win10 关闭快速启动方法）</li></ol><h3 id="13-前期-bios-准备"><a class="markdownIt-Anchor" href="#13-前期-bios-准备"></a> 1.3、前期 BIOS 准备</h3><ol><li>重启电脑，开机后立刻按 <code>F2</code> 进入 BIOS（如果不是 F2 键，请自行搜索你的电脑的 BIOS 进入按键）</li><li>找到 <code>Security</code> 选项，将 <code>Security Boot</code> 选项关闭</li><li>找到 <code>Fast Boot</code> 选项并关闭</li></ol><h3 id="14-安装-ubuntu"><a class="markdownIt-Anchor" href="#14-安装-ubuntu"></a> 1.4、安装 Ubuntu</h3><ol><li>关闭电脑，插上刚才制作好的 U 盘</li><li>启动电脑，按 <code>F12</code>，选择 U 盘启动</li><li>接着会出现 Ubuntu 界面，选择 <code>Install Ubuntu</code>（接下来安装过程不要拔掉 U 盘）</li><li>前几步自定义就行，整个过程不要联网，如果出现 <code>安装更新和第三方软件</code> 选项，取消勾选</li><li>接着最重要的一步，出现安装类型界面时，选择 <code>其他选项</code>，不要选择 <code>安装 Ubuntu，与 Windows Boot Manager 共存</code> 这个选项，有点坑</li></ol><h3 id="15-安装类型配置"><a class="markdownIt-Anchor" href="#15-安装类型配置"></a> 1.5、安装类型配置</h3><ol><li>点击你分配的磁盘，选择加号，进行如下配置：<ol><li>SWAP 交换空间（虚拟内存）<ol><li>大小：与电脑内存一致</li><li>新分区的类型：主分区</li><li>新分区的位置：空间起始位置</li><li>用于：交换空间</li></ol></li><li>EFI 系统分区（系统引导文件位置）<ol><li>大小：建议最少 256MB</li><li>新分区的类型：逻辑分区</li><li>新分区的位置：空间起始位置</li><li>用于：EFI 系统分区</li></ol></li><li>/home（个人文件夹）<ol><li>大小：建议最少 8G，存放个人文件的地方</li><li>新分区的类型：逻辑分区</li><li>新分区的位置：空间起始位置</li><li>用于：EXT4 日志文件系统</li><li>挂载点：/home</li></ol></li><li>/（其他目录）<ol><li>大小：建议 8G 左右即可</li><li>新分区的类型：逻辑分区</li><li>新分区的位置：空间起始位置</li><li>用于：EXT4 日志文件系统</li><li>挂载点：/</li></ol></li><li>/usr（软件安装位置）<ol><li>大小：安装软件的位置，尽量给大一点，将剩下的所有空间都给它就好</li><li>新分区的类型：逻辑分区</li><li>新分区的位置：空间起始位置</li><li>用于：EXT4 日志文件系统</li><li>挂载点：/usr</li></ol></li></ol></li><li>找到你刚才新建的类型为 efi 的设备，在 <code>安装启动引导器的设备</code> 选项中，选中它</li><li>点击 <code>现在安装</code> ，点击 <code>继续</code></li><li>后面的步骤完全自定义即可，没有什么坑了</li></ol><h2 id="2-配置及相关问题解决方案"><a class="markdownIt-Anchor" href="#2-配置及相关问题解决方案"></a> 2、配置及相关问题解决方案</h2><h3 id="21-安装搜狗输入法及相关问题"><a class="markdownIt-Anchor" href="#21-安装搜狗输入法及相关问题"></a> 2.1、安装搜狗输入法及相关问题</h3><ol><li>安装 Fcitx 框架：<code>sudo apt install fcitx</code></li><li>安装完成后，进入 <code>语言支持</code> 设置，将 <code>键盘输入法系统</code> 改为 <code>fcitx</code></li><li>重启计算机</li><li>下载搜狗输入法 <code>.deb</code> 包并安装</li><li>进入 <code>fcitx 配置</code>，将搜狗输入法添加进去，为了避免中文乱码问题，输入法选项里只保留如下三个（包括顺序）：<ul><li>键盘 - 汉语</li><li>搜狗拼音</li><li>键盘 - 英语(美国)</li></ul></li><li>设置完成后，点击上方的 <code>全局配置</code>，将 <code>启用输入法间切换</code> 选项关闭</li><li>通过 <code>Shift</code> 键即可切换中英文</li></ol><h3 id="22-无法识别-exfat-格式-u-盘"><a class="markdownIt-Anchor" href="#22-无法识别-exfat-格式-u-盘"></a> 2.2、无法识别 exfat 格式 U 盘</h3><ol><li>终端输入：<code>sudo apt-get install exfat-utils</code> 安装即可</li></ol><h3 id="23-与-windows-时间冲突错误问题"><a class="markdownIt-Anchor" href="#23-与-windows-时间冲突错误问题"></a> 2.3、与 Windows 时间冲突错误问题</h3><blockquote><p>使用 <code>ntpdate</code> 校准时间：</p></blockquote><ol><li><p>首先安装 <code>ntpdate</code>：<code>sudo apt-get install ntpdate</code></p></li><li><p>校准时间：<code>sudo ntpdate time.windows.com</code></p></li><li><p>再将时间更新到硬件上，以免 Windows 的时间也是不对的：<code>sudo hwclock --localtime --systohc</code></p></li></ol><h3 id="24-关闭-ubuntu-错误报告"><a class="markdownIt-Anchor" href="#24-关闭-ubuntu-错误报告"></a> 2.4、关闭 Ubuntu 错误报告</h3><ol><li>临时关闭（重启系统后失效）：<code>sudo service apport stop</code></li><li>永久关闭：<ol><li>输入：<code>sudo gedit /etc/default/apport</code></li><li>修改 <code>enabled=0</code>，重启生效</li></ol></li><li>永久性的移除错误报告功能：<code>sudo apt-get purge apport</code></li></ol><h3 id="25-更换字体"><a class="markdownIt-Anchor" href="#25-更换字体"></a> 2.5、更换字体</h3><blockquote><p>如下为安装文泉驿米黑字体方法</p></blockquote><ol><li>安装文泉驿微米黑：<code>sudo apt-get install ttf-wqy-microhei #文泉驿-微米黑</code></li><li>安装文泉驿正黑：<code>sudo apt-get install ttf-wqy-zenhei #文泉驿-正黑</code></li><li>安装文泉驿点阵宋体：<code>sudo apt-get install xfonts-wqy #文泉驿-点阵宋体</code></li></ol><h3 id="26-grub-管理"><a class="markdownIt-Anchor" href="#26-grub-管理"></a> 2.6、Grub 管理</h3><blockquote><p>下载 grub-customizer 进行管理</p></blockquote><ol><li>终端输入：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:danielrichter2007/grub-customizer</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install grub-customizer</span><br></pre></td></tr></table></figure><ol start="2"><li>打开 <code>grub-customizer</code> 软件进行相应配置即可</li></ol><h3 id="27-dock-优化"><a class="markdownIt-Anchor" href="#27-dock-优化"></a> 2.7、Dock 优化</h3><ol><li>启用 <code>Minimize on Click</code>：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsettings set org.gnome.shell.extensions.dash-to-dock click-action &apos;minimize&apos;</span><br></pre></td></tr></table></figure><ol start="2"><li>完成后，点击已打开的软件 dock 图标即可把软件缩小至 dock</li></ol><h3 id="28-更换-gdm-登录背景图片"><a class="markdownIt-Anchor" href="#28-更换-gdm-登录背景图片"></a> 2.8、更换 GDM 登录背景图片</h3><ol><li>打开 <code>ubuntu.css</code> 文件：<code>sudo gedit /usr/share/gnome-shell/theme/ubuntu.css</code></li><li>找到关键字 <code>lockDialogGroup</code>：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#lockDialogGroup</span> &#123;</span><br><span class="line">   <span class="attribute">background</span>: <span class="number">#2c001e</span> <span class="built_in">url</span>(resource:///org/gnome/shell/theme/noise-texture.png);</span><br><span class="line">   <span class="attribute">background-repeat</span>: repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>修改图片路径 <code>background</code> 后的 <code>url</code> 即可，例如：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#lockDialogGroup</span> &#123;</span><br><span class="line">   <span class="attribute">background</span>: <span class="number">#2c001e</span> <span class="built_in">url</span>(file:///home/zzzx/image/image.jpg);</span><br><span class="line">   <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">   <span class="attribute">background-size</span>: cover;</span><br><span class="line">   <span class="attribute">background-position</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>建议修改 <code>background-repeat</code> 为 <code>no-repeat</code><br>添加 <code>background-size</code> 以及 <code>background-position</code> 项</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-安装双系统&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-安装双系统&quot;&gt;&lt;/a&gt; 1、安装双系统&lt;/h2&gt;
&lt;h3 id=&quot;11-制作-ubuntu-系统安装-u盘&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-制作-ubuntu-系统安装-u盘&quot;&gt;&lt;/a&gt; 1.1、制作 Ubuntu 系统安装 U盘&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;下载 Ubuntu 安装镜像，建议下载 LTS 长期支持版：&lt;a href=&quot;https://ubuntu.com/download/desktop&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://ubuntu.com/download/desktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;使用 ultraiso，或者使用其他镜像制作软件，将 Ubuntu 系统拷至 U 盘里，具体方法百度搜索一堆。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="https://zhangxiaocn.github.io/categories/Ubuntu/"/>
    
    
      <category term="Ubuntu" scheme="https://zhangxiaocn.github.io/tags/Ubuntu/"/>
    
      <category term="双系统" scheme="https://zhangxiaocn.github.io/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>博客园美化</title>
    <link href="https://zhangxiaocn.github.io/2019/11/06/cnblogs-beautify/"/>
    <id>https://zhangxiaocn.github.io/2019/11/06/cnblogs-beautify/</id>
    <published>2019-11-06T13:04:40.000Z</published>
    <updated>2020-02-04T07:09:26.731Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>以下部分教程来源于互联网，仅作为本人学习所用。</p></blockquote><h2 id="1-每日一言"><a class="markdownIt-Anchor" href="#1-每日一言"></a> 1、每日一言</h2><p>在侧边栏加入以下 css 代码即可：</p><a id="more"></a><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset="utf-8"/&gt;</span><br><span class="line">     </span><br><span class="line">            &lt;h2&gt;&lt;B&gt;一言（ヒトコト）&lt;/B&gt;&lt;/h2&gt;</span><br><span class="line">            &lt;div class="daily a pome"&gt;</span><br><span class="line">              &lt;div class="daily pome" id="qwq"&gt;&lt;/div&gt;</span><br><span class="line">              &lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line">                  var st=["&lt;center&gt;没有神的光环，我们生而平凡 &lt;br&gt; &lt;center&gt;这就是你不拿rank1得理由？&lt;br&gt;",                          "&lt;center&gt;我遇见你，我记住你&lt;br&gt;&lt;center&gt;这座城市天生适合恋爱，&lt;br&gt;&lt;center&gt;你的灵魂天生适合我&lt;br&gt;",                          "&lt;center&gt;你知道&lt;br&gt;&lt;center&gt;Nice to meet you&lt;br&gt;&lt;center&gt;是什么意思么？&lt;br&gt;&lt;center&gt;很高兴见到你呗&lt;br&gt;&lt;center&gt;不啊，“有生之年，幸得相逢。”&lt;br&gt;",                          "&lt;center&gt;前半生无你&lt;br&gt;&lt;center&gt;余生请指教.&lt;br&gt;",                          "&lt;center&gt;你好，冒昧打搅了&lt;br&gt;&lt;center&gt;我今天也特别喜欢你.&lt;br&gt;",                          "&lt;center&gt;it takes sonebody an hour to like someonoe,&lt;br&gt;&lt;center&gt;and a day to like someone,&lt;br&gt;&lt;center&gt;but it takes a life time to forget someone.&lt;br&gt;",                          "&lt;center&gt;you have only one life and one chance to do all the things you want to do.&lt;br&gt;",                          "&lt;center&gt;你就像桌上那份时事报,&lt;br&gt;&lt;center&gt;当时读新鲜，以后读怀念&lt;br&gt;&lt;center&gt;悲欢越来越远,&lt;br&gt;&lt;center&gt;可还是会小心翼翼地折好，安放&lt;br&gt;",                          "&lt;center&gt;你特别好，我喜欢你&lt;br&gt;",                          "&lt;center&gt;我终不能改变那个开始，&lt;br&gt;&lt;center&gt;何不忘了那个结局呢？&lt;br&gt;",                          "&lt;center&gt;it takes only a smile to make a darkday seem bright&lt;br&gt;",                          "&lt;center&gt;无论在哪里遇上你，&lt;br&gt;&lt;center&gt;我都会喜欢你&lt;br&gt;",                          "&lt;center&gt; 你若盛开，清风自来&lt;br&gt;",                          "&lt;center&gt;用我一生,&lt;br&gt;&lt;center&gt;换你十年天真。&lt;br&gt;&lt;center&gt;忘了我吧，&lt;br&gt;&lt;center&gt;吴邪。&lt;br&gt;",                          "&lt;center&gt;太想摘取星星得人，&lt;br&gt;&lt;center&gt;往往忽视了脚下得鲜花。&lt;br&gt;",                          "&lt;center&gt; 无论发生什么，&lt;br&gt;&lt;center&gt;希望你都不要后悔与我得相识。&lt;br&gt;",                          "&lt;center&gt; 生生生生暗生始，&lt;br&gt;&lt;center&gt;死死死死冥死终。&lt;br&gt;",                          "&lt;center&gt; 未来不是被给予的，&lt;br&gt;&lt;center&gt;而是自己争取的。 &lt;br&gt;",                          "&lt;center&gt; あたいってば最強ね！ &lt;br&gt;",                          "&lt;center&gt; 十步杀一人，&lt;br&gt;&lt;center&gt; 千里不留行。&lt;br&gt;",                          "&lt;center&gt; 当一切都消失得时候&lt;br&gt;&lt;center&gt; 你就会明白生命有何价值&lt;br&gt;",                          "&lt;center&gt; 不是他，变成他&lt;br&gt;",                          "&lt;center&gt; 也许我们都没有长大，&lt;br&gt;&lt;center&gt; 只是世界变小了。&lt;br&gt;",                          "&lt;center&gt; Time waits for no one.&lt;br&gt;",                          "&lt;center&gt; 和绝望，&lt;br&gt;&lt;center&gt; 和睦相处&lt;br&gt;"];</span><br><span class="line">                  <span class="selector-tag">var</span> <span class="selector-tag">num</span>;</span><br><span class="line">                  num=Math.floor((Math.random()*25));</span><br><span class="line">                  <span class="selector-tag">document</span><span class="selector-class">.write</span>(<span class="selector-tag">st</span><span class="selector-attr">[num]</span>);</span><br><span class="line">                  <span class="selector-tag">var</span> <span class="selector-tag">cli</span>;</span><br><span class="line">                  </span><br><span class="line">              &lt;/script&gt;</span><br><span class="line">              &lt;div style="font-size: 1em; text-align: center; line-height: 1.5em; display: none; " id="qwq"&gt;&lt;/div&gt;</span><br><span class="line">              &lt;div style="text-align: right;  margin-top: 15px; font-size: 0.9em; color: #666; display: none; " id="qwq"&gt;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset="utf-8"/&gt;</span><br><span class="line">     </span><br><span class="line">            &lt;h2&gt;&lt;B&gt;一言（ヒトコト）&lt;/B&gt;&lt;/h2&gt;</span><br><span class="line">            &lt;div class="daily a pome"&gt;</span><br><span class="line">              &lt;div class="daily pome" id="qwq"&gt;&lt;/div&gt;</span><br><span class="line">              &lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line">                  var st=["&lt;center&gt;你不是一个人&lt;br&gt;&lt;center&gt;     ——lmh&lt;br&gt;",                          "&lt;center&gt;这不是bzoj原题吗&lt;br&gt;&lt;center&gt;      ——hjw&lt;br&gt;",                          "&lt;center&gt;我去骗钥匙啦~&lt;br&gt;&lt;center&gt;     ——yxy&lt;br&gt;",                           "&lt;center&gt;你无聊吗，快去刷题。&lt;br&gt;&lt;center&gt;     ——lmh&lt;br&gt;",                           "&lt;center&gt;loj.ac&lt;br&gt;&lt;center&gt;     ——lmh&lt;br&gt;",                           "&lt;center&gt;想和zn谈恋爱&lt;br&gt;&lt;center&gt;     ——lmh&lt;br&gt;",                           "&lt;center&gt;zc大人我错了！&lt;br&gt;&lt;center&gt;     ——wjd&lt;br&gt;",                           "&lt;center&gt;zn：有没有说出题人谁啊&lt;br&gt;&lt;center&gt;yxy：好像是lxq？？&lt;br&gt;&lt;center&gt;zn：暴打出题人&lt;center&gt;yxy：老师！！！&lt;br&gt;",                           "&lt;center&gt;学习线性解决a+b问题&lt;br&gt;&lt;center&gt;      ——zn&lt;br&gt;",                           "&lt;center&gt;代码已经给出，&lt;br&gt;&lt;center&gt; 读者自证不难。&lt;br&gt;&lt;center&gt;     ——lrj",                           "&lt;center&gt;啊&lt;br&gt;&lt;center&gt;我要女装！&lt;br&gt;&lt;center&gt;     ——zzx&lt;br&gt;",                          "&lt;center&gt;辛苦了~&lt;br&gt;&lt;center&gt;     ——lmh&lt;br&gt;",                          "&lt;center&gt;棒！&lt;br&gt;&lt;center&gt;     ——lmh&lt;br&gt;",                          "&lt;center&gt;学OI后悔三年&lt;br&gt;&lt;center&gt;不学OI后悔一辈子/呲牙&lt;br&gt;&lt;center&gt;     ——zn&lt;br&gt;",                          "&lt;center&gt;又把1e3+7写成1e4+7了……&lt;br&gt;&lt;center&gt;干脆叫万柒吧。。&lt;br&gt;&lt;center&gt;     ——yxy&lt;br&gt;",                          "&lt;center&gt;即得易见平凡，由上自证显然，留作习题答案略，读者自证不难。&lt;br&gt;&lt;center&gt;反之亦然同理，推论自然成立，略去过程Q.E.D，由上可知证毕。&lt;br&gt;&lt;center&gt;     ——lca",                          "&lt;center&gt;我要让zn提头来见我&lt;br&gt;&lt;center&gt;     ——lmh&lt;br&gt;",                          "&lt;center&gt;这年头 expert 很难么？&lt;br&gt;&lt;center&gt;    ——zn&lt;br&gt;",                          "&lt;center&gt;成为很厉害很厉害的人，最重要的，就是要热血，永远也不要让你的血凉下去。&lt;br&gt;&lt;center&gt;    ——hzwer",                          "&lt;center&gt;高中的 OI 刚刚开始，希望不要那么快就凋零。兔纸的时间已经不多，请把自己选择的路，好好走下去。&lt;br&gt;&lt;center&gt;   ——Bunnycxk",                          "&lt;center&gt;Who laughs last laughs best!&lt;br&gt;&lt;center&gt;     ——Emma",                          "&lt;center&gt;别哭，眼泪会冻住的。&lt;br&gt;&lt;center&gt;     ——那年那兔那些事儿"                          ];</span><br><span class="line">                  <span class="selector-tag">var</span> <span class="selector-tag">num</span>;</span><br><span class="line">                  num=Math.floor((Math.random()*22));</span><br><span class="line">                  <span class="selector-tag">document</span><span class="selector-class">.write</span>(<span class="selector-tag">st</span><span class="selector-attr">[num]</span>);</span><br><span class="line">                  <span class="selector-tag">var</span> <span class="selector-tag">cli</span>;</span><br><span class="line">                  </span><br><span class="line">              &lt;/script&gt;</span><br><span class="line">              &lt;div style="font-size: 1em; text-align: center; line-height: 1.5em; display: none; " id="qwq"&gt;&lt;/div&gt;</span><br><span class="line">              &lt;div style="text-align: right;  margin-top: 15px; font-size: 0.9em; color: #666; display: none; " id="qwq"&gt;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="2-鼠标点击特效"><a class="markdownIt-Anchor" href="#2-鼠标点击特效"></a> 2、鼠标点击特效</h2><p>在页脚 html 代码处加入以下 css 代码即可：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type="text/javascript"&gt;</span><br><span class="line"><span class="comment">/* 鼠标特效 */</span></span><br><span class="line">var a_idx = 0;</span><br><span class="line">jQuery(document).ready(function($) &#123;</span><br><span class="line">    $("body").click(function(e) &#123;</span><br><span class="line">        var a = new Array("❤富强❤","❤民主❤","❤文明❤","❤和谐❤","❤自由❤","❤平等❤","❤公正❤","❤法治❤","❤爱国❤","❤敬业❤","❤诚信❤","❤友善❤");</span><br><span class="line">        var $i = $("&lt;span&gt;&lt;/span&gt;").text(a[a_idx]);</span><br><span class="line">        a_idx = (a_idx + 1) % a.length;</span><br><span class="line">        var x = e.pageX,</span><br><span class="line">        y = e.pageY;</span><br><span class="line">        $i.css(&#123;</span><br><span class="line">            "<span class="selector-tag">z-index</span>": 999999999999999999999999999999999999999999999999999999999999999999999,</span><br><span class="line">            "<span class="selector-tag">top</span>": <span class="selector-tag">y</span> <span class="selector-tag">-</span> 20,</span><br><span class="line">            "<span class="selector-tag">left</span>": <span class="selector-tag">x</span>,</span><br><span class="line">            "<span class="selector-tag">position</span>": "<span class="selector-tag">absolute</span>",</span><br><span class="line">            "<span class="selector-tag">font-weight</span>": "<span class="selector-tag">bold</span>",</span><br><span class="line">            "<span class="selector-tag">color</span>": "<span class="selector-tag">rgb</span>("+~~(255*<span class="selector-tag">Math</span><span class="selector-class">.random</span>())+","+~~(255*<span class="selector-tag">Math</span><span class="selector-class">.random</span>())+","+~~(255*<span class="selector-tag">Math</span><span class="selector-class">.random</span>())+")"</span><br><span class="line">        &#125;);</span><br><span class="line">        $("body").append($i);</span><br><span class="line">        $i.animate(&#123;</span><br><span class="line">            "<span class="selector-tag">top</span>": <span class="selector-tag">y</span> <span class="selector-tag">-</span> 180,</span><br><span class="line">            "<span class="selector-tag">opacity</span>": 0</span><br><span class="line">        &#125;,</span><br><span class="line">        1500,</span><br><span class="line">        <span class="selector-tag">function</span>() &#123;</span><br><span class="line">            $i.remove();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>可以修改第六行中代码中双引号内的字。</p><h2 id="3-改变博客图标"><a class="markdownIt-Anchor" href="#3-改变博客图标"></a> 3、改变博客图标</h2><p>在页首 html 代码处加入以下代码即可</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style = "display:none;" &gt;把博客园图标替换成自己的图标 &lt;/div&gt;</span><br><span class="line">&lt;script type="text/javascript" language="javascript"&gt;</span><br><span class="line">　　//Setting ico for cnblogs</span><br><span class="line">　　var linkObject = document.createElement('link');</span><br><span class="line">　　linkObject.rel = "shortcut icon";</span><br><span class="line">　　linkObject.href = "https://i.loli.net/2018/09/24/5ba8bcd213e78.jpg";</span><br><span class="line">　　<span class="selector-tag">document</span><span class="selector-class">.getElementsByTagName</span>("<span class="selector-tag">head</span>")<span class="selector-attr">[0]</span><span class="selector-class">.appendChild</span>(<span class="selector-tag">linkObject</span>);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;div style = "display:none;" &gt;把博客园图标替换成自己的图标end &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>将第六行的链接地址换成自己的即可。</p><h2 id="4-改变博客标题"><a class="markdownIt-Anchor" href="#4-改变博客标题"></a> 4、改变博客标题</h2><p>在离开当前博客的标签页以及点进去的时候会出现，2s 之后会消失，并不会影响阅读。</p><p>需要在页脚 html 中加入以下代码：</p><p>修改方法有注释在代码中</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style = "display:none;" &gt; 浏览器标题切换  &lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">script</span>&gt;  </span><br><span class="line">var OriginTitile = document.title;    // 保存之前页面标题  </span><br><span class="line"><span class="selector-tag">var</span> <span class="selector-tag">titleTime</span>;  </span><br><span class="line">document.addEventListener('visibilitychange', function()&#123;  </span><br><span class="line">    <span class="selector-tag">if</span> (<span class="selector-tag">document</span><span class="selector-class">.hidden</span>)&#123;  </span><br><span class="line">        document.title ='你不要我了么？qwq';  // 切出文字</span><br><span class="line">        <span class="selector-tag">clearTimeout</span>(<span class="selector-tag">titleTime</span>);  </span><br><span class="line">    &#125;<span class="selector-tag">else</span>&#123;  </span><br><span class="line">        document.title = '欢迎回来～';  // 切入文字</span><br><span class="line">        titleTime = setTimeout(function() &#123;  </span><br><span class="line">            document.title = OriginTitile;  </span><br><span class="line">        &#125;, 1000); // 2秒后恢复原标题  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;);  </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;div style = "display:none;" &gt; 浏览器标题切换end  &lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="5-背景中的动态线条"><a class="markdownIt-Anchor" href="#5-背景中的动态线条"></a> 5、背景中的动态线条</h2><p>放入侧边栏即可：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style = "display:none;"&gt;动态线条&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line"></span><br><span class="line">!<span class="selector-tag">function</span>()&#123;</span><br><span class="line"></span><br><span class="line">function n(n,e,t)&#123;</span><br><span class="line"></span><br><span class="line">return n.getAttribute(e)||t</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">e</span>(<span class="selector-tag">n</span>)&#123;</span><br><span class="line"></span><br><span class="line">return document.getElementsByTagName(n)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">t</span>()&#123;</span><br><span class="line"></span><br><span class="line">var t=e("script"),o=t.length,i=t[o-1];</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">return</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="attribute">l</span>:o,z:<span class="built_in">n</span>(i,<span class="string">"zIndex"</span>,-1),o:<span class="built_in">n</span>(i,<span class="string">"opacity"</span>,.5),c:<span class="built_in">n</span>(i,<span class="string">"color"</span>,<span class="string">"0,0,0"</span>),n:<span class="built_in">n</span>(i,<span class="string">"count"</span>,99)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">o</span>()&#123;</span><br><span class="line"></span><br><span class="line">a=m.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,</span><br><span class="line"></span><br><span class="line">c=m.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">i</span>()&#123;</span><br><span class="line"></span><br><span class="line">r.clearRect(0,0,a,c);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">var</span> <span class="selector-tag">n</span>,<span class="selector-tag">e</span>,<span class="selector-tag">t</span>,<span class="selector-tag">o</span>,<span class="selector-tag">m</span>,<span class="selector-tag">l</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">s</span><span class="selector-class">.forEach</span>(<span class="selector-tag">function</span>(<span class="selector-tag">i</span>,<span class="selector-tag">x</span>)&#123;</span><br><span class="line"></span><br><span class="line">for(i.x+=i.xa,i.y+=i.ya,i.xa*=i.x&gt;a||i.x&lt;0?-1:1,i.ya*=i.y&gt;c||i.y&lt;0?-1:1,r.fillRect(i.x-.5,i.y-.5,1,1),e=x+1;e&lt;u.length;e++)n=u[e],</span><br><span class="line"></span><br><span class="line">null!==n.x&amp;&amp;null!==n.y&amp;&amp;(o=i.x-n.x,m=i.y-n.y,</span><br><span class="line"></span><br><span class="line">l=o*o+m*m,l&lt;n.max&amp;&amp;(n===y&amp;&amp;l&gt;=n.max/2&amp;&amp;(i.x-=.03*o,i.y-=.03*m),</span><br><span class="line"></span><br><span class="line">t=(n.max-l)/n.max,r.beginPath(),r.lineWidth=t/2,r.strokeStyle="rgba("+d.c+","+(t+.2)+")",r.moveTo(i.x,i.y),r.lineTo(n.x,n.y),r.stroke()))</span><br><span class="line"></span><br><span class="line">&#125;),</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">x</span>(<span class="selector-tag">i</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var a,c,u,m=document.createElement("canvas"),</span><br><span class="line"></span><br><span class="line">d=t(),l="c_n"+d.l,r=m.getContext("2d"),</span><br><span class="line"></span><br><span class="line">x=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">function</span>(<span class="selector-tag">n</span>)&#123;</span><br><span class="line"></span><br><span class="line">window.setTimeout(n,1e3/45)</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">w=Math.random,y=&#123;x:null,y:null,max:2e4&#125;;m.id=l,m.style.cssText="position:fixed;top:0;left:0;z-index:"+d.z+";opacity:"+d.o,e("body")[0].appendChild(m),o(),window.onresize=o,</span><br><span class="line"></span><br><span class="line">window.onmousemove=function(n)&#123;</span><br><span class="line"></span><br><span class="line">n=n||window.event,y.x=n.clientX,y.y=n.clientY</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">window.onmouseout=function()&#123;</span><br><span class="line"></span><br><span class="line">y.x=null,y.y=null</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">for(var s=[],f=0;d.n&gt;f;f++)&#123;</span><br><span class="line"></span><br><span class="line">var h=w()*a,g=w()*c,v=2*w()-1,p=2*w()-1;s.push(&#123;x:h,y:g,xa:v,ya:p,max:6e3&#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u=s.concat([y]),</span><br><span class="line"></span><br><span class="line">setTimeout(function()&#123;i()&#125;,100)</span><br><span class="line"></span><br><span class="line">&#125;();</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;div style = "display:none;"&gt; 动态线条end&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="6-目录"><a class="markdownIt-Anchor" href="#6-目录"></a> 6、目录</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style = "display:none;" &gt;index相关&lt;/div&gt;</span><br><span class="line">&lt;script src="http://cdn.bootcss.com/bootstrap/3.2.0/js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;link href="http://files.cnblogs.com/files/ning-wang/marvin.nav.css" rel="stylesheet"&gt;</span><br><span class="line">&lt;script type="text/javascript" src="http://files.cnblogs.com/files/ning-wang/marvin.nav.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;div style = "display:none;" &gt;index相关end&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>但是这种目录有个缺陷，在手机上会极其影响阅读。</p><p>所以最近换了另外一种目录，在文章顶部，而且有个 return to top，用起来也是不错的。(放在页脚 html )</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language="javascript" type="text/javascript"&gt;</span><br><span class="line">// 生成目录索引列表</span><br><span class="line">// ref: http://www.cnblogs.com/wangqiguo/p/4355032.html</span><br><span class="line">// modified by: zzq</span><br><span class="line"><span class="selector-tag">function</span> <span class="selector-tag">GenerateContentList</span>()</span><br><span class="line">&#123;</span><br><span class="line">    var mainContent = $('#cnblogs_post_body');</span><br><span class="line">    var h2_list = $('#cnblogs_post_body h2');//如果你的章节标题不是h2,只需要将这里的h2换掉即可</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">if</span>(<span class="selector-tag">mainContent</span><span class="selector-class">.length</span> &lt; 1)</span><br><span class="line">        <span class="selector-tag">return</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="selector-tag">if</span>(<span class="selector-tag">h2_list</span><span class="selector-class">.length</span>&gt;0)</span><br><span class="line">    &#123;</span><br><span class="line">        var content = '&lt;a name="_labelTop"&gt;&lt;/a&gt;';</span><br><span class="line">        content += '&lt;div id="navCategory" style="color:#152e97;"&gt;';</span><br><span class="line">        content += '&lt;p style="font-size:18px;"&gt;&lt;b&gt;目录&lt;/b&gt;&lt;/p&gt;';</span><br><span class="line">        content += '&lt;ul&gt;';</span><br><span class="line">        for(var i=0; i&lt;h2_list.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            var go_to_top = '&lt;div style="text-align: right;"&gt;&lt;a href="#_labelTop" style="color:#f68a33"&gt;回到顶部&lt;/a&gt;&lt;a name="_label' + i + '"&gt;&lt;/a&gt;&lt;/div&gt;';</span><br><span class="line">            $(h2_list[i]).before(go_to_top);</span><br><span class="line">            </span><br><span class="line">            var h3_list = $(h2_list[i]).nextAll("h3");</span><br><span class="line">            var li3_content = '';</span><br><span class="line">            for(var j=0; j&lt;h3_list.length; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                var tmp = $(h3_list[j]).prevAll('h2').first();</span><br><span class="line">                <span class="selector-tag">if</span>(!<span class="selector-tag">tmp</span><span class="selector-class">.is</span>(<span class="selector-tag">h2_list</span><span class="selector-attr">[i]</span>))</span><br><span class="line">                    <span class="selector-tag">break</span>;</span><br><span class="line">                var li3_anchor = '&lt;a name="_label' + i + '_' + j + '"&gt;&lt;/a&gt;';</span><br><span class="line">                $(h3_list[j]).before(li3_anchor);</span><br><span class="line">                li3_content += '&lt;li&gt;&lt;a href="#_label' + i + '_' + j + '"&gt;' + $(h3_list[j]).text() + '&lt;/a&gt;&lt;/li&gt;';</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            var li2_content = '';</span><br><span class="line">            <span class="selector-tag">if</span>(<span class="selector-tag">li3_content</span><span class="selector-class">.length</span> &gt; 0)</span><br><span class="line">                li2_content = '&lt;li&gt;&lt;a href="#_label' + i + '"&gt;' + $(h2_list[i]).text() + '&lt;/a&gt;&lt;ul&gt;' + li3_content + '&lt;/ul&gt;&lt;/li&gt;';</span><br><span class="line">            <span class="selector-tag">else</span></span><br><span class="line">                li2_content = '&lt;li&gt;&lt;a href="#_label' + i + '"&gt;' + $(h2_list[i]).text() + '&lt;/a&gt;&lt;/li&gt;';</span><br><span class="line">            content += li2_content;</span><br><span class="line">        &#125;</span><br><span class="line">        content += '&lt;/ul&gt;';</span><br><span class="line">        content += '&lt;/div&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;';</span><br><span class="line">        content += '&lt;hr style="height:1px;border:none;border-top:1px dashed #0066CC;"/&gt;';</span><br><span class="line">        if($('#cnblogs_post_body').length != 0 )</span><br><span class="line">        &#123;</span><br><span class="line">            $($('#cnblogs_post_body')[0]).prepend(content);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">GenerateContentList</span>();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="7-旋转立方体"><a class="markdownIt-Anchor" href="#7-旋转立方体"></a> 7、旋转立方体</h2><p>在博客侧边栏的旋转立方体，图片可以自行更换：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style = "display:none;"&gt;旋转立方体&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">        <span class="comment">/*最外层容器样式*/</span></span><br><span class="line">        <span class="selector-class">.wrap</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">150px</span>;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">/*包裹所有容器样式*/</span></span><br><span class="line">        <span class="selector-class">.cube</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">            <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-30deg) <span class="built_in">rotateY</span>(-80deg);</span><br><span class="line">            <span class="attribute">animation</span>: rotate linear <span class="number">20s</span> infinite;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> rotate &#123;</span><br><span class="line">            <span class="selector-tag">from</span> &#123;</span><br><span class="line">                <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(0deg) <span class="built_in">rotateY</span>(0deg);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="selector-tag">to</span> &#123;</span><br><span class="line">                <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(360deg) <span class="built_in">rotateY</span>(360deg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">            <span class="attribute">transition</span>: all .<span class="number">4s</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">/*定义所有图片样式*/</span></span><br><span class="line">        <span class="selector-class">.pic</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.out_front</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(0deg) <span class="built_in">translateZ</span>(100px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.out_back</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-100px) <span class="built_in">rotateY</span>(180deg);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.out_left</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-90deg) <span class="built_in">translateZ</span>(100px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.out_right</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(90deg) <span class="built_in">translateZ</span>(100px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.out_top</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(90deg) <span class="built_in">translateZ</span>(100px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.out_bottom</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-90deg) <span class="built_in">translateZ</span>(100px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">/*定义小正方体样式*/</span></span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: block;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">50px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.in_pic</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.in_front</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(0deg) <span class="built_in">translateZ</span>(50px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.in_back</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-50px) <span class="built_in">rotateY</span>(180deg);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.in_left</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-90deg) <span class="built_in">translateZ</span>(50px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.in_right</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(90deg) <span class="built_in">translateZ</span>(50px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.in_top</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(90deg) <span class="built_in">translateZ</span>(50px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span> <span class="selector-class">.in_bottom</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-90deg) <span class="built_in">translateZ</span>(50px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">/*鼠标移入后样式*/</span></span><br><span class="line">        <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_front</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(0deg) <span class="built_in">translateZ</span>(200px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_back</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-200px) <span class="built_in">rotateY</span>(180deg);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_left</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-90deg) <span class="built_in">translateZ</span>(200px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_right</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(90deg) <span class="built_in">translateZ</span>(200px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_top</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(90deg) <span class="built_in">translateZ</span>(200px);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_bottom</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-90deg) <span class="built_in">translateZ</span>(200px);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!<span class="selector-tag">--</span> 外层最大容器 <span class="selector-tag">--</span>&gt;</span><br><span class="line">    &lt;div class="wrap"&gt;</span><br><span class="line">        &lt;!<span class="selector-tag">--</span>包裹所有元素的容器<span class="selector-tag">--</span>&gt;</span><br><span class="line">        &lt;div class="cube"&gt;</span><br><span class="line">            &lt;!<span class="selector-tag">--</span>前面图片 <span class="selector-tag">--</span>&gt;</span><br><span class="line">            &lt;div class="out_front"&gt;</span><br><span class="line">                &lt;img src="https://i.loli.net/2018/05/03/5aeb0eef73838.jpg" class="pic"&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!<span class="selector-tag">--</span>后面图片 <span class="selector-tag">--</span>&gt;</span><br><span class="line">            &lt;div class="out_back"&gt;</span><br><span class="line">                &lt;img src="https://i.loli.net/2018/05/03/5aeb0f2fb9a83.jpg" class="pic"&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!<span class="selector-tag">--</span>左面图片 <span class="selector-tag">--</span>&gt;</span><br><span class="line">            &lt;div class="out_left"&gt;</span><br><span class="line">                &lt;img src="https://i.loli.net/2018/05/03/5aeb0f55411f0.jpg" class="pic"&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!<span class="selector-tag">--</span>右面图片 <span class="selector-tag">--</span>&gt;</span><br><span class="line">            &lt;div class="out_right"&gt;</span><br><span class="line">                &lt;img src="https://i.loli.net/2018/05/03/5aeb0f79a1124.jpg" class="pic"&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!<span class="selector-tag">--</span>上面图片 <span class="selector-tag">--</span>&gt;</span><br><span class="line">            &lt;div class="out_top"&gt;</span><br><span class="line">                &lt;img src="https://i.loli.net/2018/05/03/5aeb0f98a8b66.jpg" class="pic"&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!<span class="selector-tag">--</span>下面图片 <span class="selector-tag">--</span>&gt;</span><br><span class="line">            &lt;div class="out_bottom"&gt;</span><br><span class="line">                &lt;img src="https://i.loli.net/2018/05/03/5aeb0fdd51b7e.jpg" class="pic"&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">            &lt;!<span class="selector-tag">--</span>小正方体 <span class="selector-tag">--</span>&gt;</span><br><span class="line">            &lt;span class="in_front"&gt;</span><br><span class="line">                &lt;img src="https://i.loli.net/2018/05/03/5aeb100223dd0.jpg" class="in_pic"&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">            &lt;span class="in_back"&gt;</span><br><span class="line">                 &lt;img src="https://i.loli.net/2018/05/03/5aeb101c2c24b.jpg" class="in_pic"&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">            &lt;span class="in_left"&gt;</span><br><span class="line">                &lt;img src="https://i.loli.net/2018/05/03/5aeb1038127b5.jpg" class="in_pic"&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">            &lt;span class="in_right"&gt;</span><br><span class="line">                &lt;img src="https://i.loli.net/2018/05/03/5aeb0dce1ca55.jpg" class="in_pic"&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">            &lt;span class="in_top"&gt;</span><br><span class="line">                &lt;img src="https://i.loli.net/2018/05/03/5aeb1057bb167.jpg" class="in_pic"&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">            &lt;span class="in_bottom"&gt;</span><br><span class="line">                &lt;img src="https://i.loli.net/2018/05/03/5aeb107514579.jpg" class="in_pic"&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;div style = "display:none;"&gt;旋转立方体end&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="8-代码高亮"><a class="markdownIt-Anchor" href="#8-代码高亮"></a> 8、代码高亮</h2><p>在页面定制 css 中加入：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*! Color themes for Google Code Prettify | MIT License | github.com/jmblog/color-themes-for-google-code-prettify */</span></span><br><span class="line"><span class="selector-class">.pln</span>&#123;<span class="attribute">color</span>:<span class="number">#4d4d4c</span>&#125;<span class="selector-tag">ol</span><span class="selector-class">.linenums</span>&#123;<span class="attribute">margin-top</span>:<span class="number">0</span>;<span class="attribute">margin-bottom</span>:<span class="number">0</span>;<span class="attribute">color</span>:<span class="number">#8e908c</span>&#125;<span class="selector-tag">li</span><span class="selector-class">.L0</span>,<span class="selector-tag">li</span><span class="selector-class">.L1</span>,<span class="selector-tag">li</span><span class="selector-class">.L2</span>,<span class="selector-tag">li</span><span class="selector-class">.L3</span>,<span class="selector-tag">li</span><span class="selector-class">.L4</span>,<span class="selector-tag">li</span><span class="selector-class">.L5</span>,<span class="selector-tag">li</span><span class="selector-class">.L6</span>,<span class="selector-tag">li</span><span class="selector-class">.L7</span>,<span class="selector-tag">li</span><span class="selector-class">.L8</span>,<span class="selector-tag">li</span><span class="selector-class">.L9</span>&#123;<span class="attribute">padding-left</span>:<span class="number">1em</span>;<span class="attribute">background-color</span>:<span class="number">#fff</span>;<span class="attribute">list-style-type</span>:decimal<span class="meta">!important</span>;&#125;@<span class="keyword">media</span> screen&#123;<span class="selector-class">.str</span>&#123;<span class="attribute">color</span>:<span class="number">#718c00</span>&#125;<span class="selector-class">.kwd</span>&#123;<span class="attribute">color</span>:<span class="number">#8959a8</span>&#125;<span class="selector-class">.com</span>&#123;<span class="attribute">color</span>:<span class="number">#8e908c</span>&#125;<span class="selector-class">.typ</span>&#123;<span class="attribute">color</span>:<span class="number">#4271ae</span>&#125;<span class="selector-class">.lit</span>&#123;<span class="attribute">color</span>:<span class="number">#f5871f</span>&#125;<span class="selector-class">.pun</span>&#123;<span class="attribute">color</span>:<span class="number">#4d4d4c</span>&#125;<span class="selector-class">.opn</span>&#123;<span class="attribute">color</span>:<span class="number">#4d4d4c</span>&#125;<span class="selector-class">.clo</span>&#123;<span class="attribute">color</span>:<span class="number">#4d4d4c</span>&#125;<span class="selector-class">.tag</span>&#123;<span class="attribute">color</span>:<span class="number">#c82829</span>&#125;<span class="selector-class">.atn</span>&#123;<span class="attribute">color</span>:<span class="number">#f5871f</span>&#125;<span class="selector-class">.atv</span>&#123;<span class="attribute">color</span>:<span class="number">#3e999f</span>&#125;<span class="selector-class">.dec</span>&#123;<span class="attribute">color</span>:<span class="number">#f5871f</span>&#125;<span class="selector-class">.var</span>&#123;<span class="attribute">color</span>:<span class="number">#c82829</span>&#125;<span class="selector-class">.fun</span>&#123;<span class="attribute">color</span>:<span class="number">#4271ae</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*下面是我设置背景色，字体大小和字体*/</span></span><br><span class="line"><span class="selector-class">.cnblogs-markdown</span> <span class="selector-tag">code</span>&#123;</span><br><span class="line"><span class="attribute">background</span>:<span class="number">#fff</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cnblogs_code</span>,<span class="selector-class">.cnblogs_code</span> <span class="selector-tag">span</span>,<span class="selector-class">.cnblogs-markdown</span> <span class="selector-class">.hljs</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">16px</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">a</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">div</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">code</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span> <span class="selector-tag">td</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span> <span class="selector-tag">tr</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span> <span class="selector-tag">tbody</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span> <span class="selector-tag">thead</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span> <span class="selector-tag">caption</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">textarea</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cnblogs_code</span>, <span class="selector-class">.cnblogs_code</span> <span class="selector-tag">span</span>, <span class="selector-class">.cnblogs-markdown</span> <span class="selector-class">.hljs</span>&#123;</span><br><span class="line"><span class="attribute">font-family</span>:consolas, <span class="string">"Source Code Pro"</span>, monaco, monospace <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在页脚 html 加入：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://files.cnblogs.com/files/flipped/prettify.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">     $(<span class="string">"pre"</span>).addClass(<span class="string">"prettyprint"</span>);</span></span><br><span class="line">     prettyPrint();</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="9-添加背景图片"><a class="markdownIt-Anchor" href="#9-添加背景图片"></a> 9、添加背景图片</h2><p>选择 simplememory 主题，添加如下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*simplememory*/</span></span><br><span class="line"><span class="selector-id">#google_ad_c1</span>, <span class="selector-id">#google_ad_c2</span> &#123;<span class="attribute">display</span>:none;&#125;</span><br><span class="line"><span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">a</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">div</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">code</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span> <span class="selector-tag">td</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span> <span class="selector-tag">tr</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span> <span class="selector-tag">tbody</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span> <span class="selector-tag">thead</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">table</span> <span class="selector-tag">caption</span>, <span class="selector-class">.syntaxhighlighter</span> <span class="selector-tag">textarea</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">14px</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#home</span> &#123;</span><br><span class="line"><span class="attribute">opacity</span>: <span class="number">0.80</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line"><span class="attribute">min-width</span>: <span class="number">950px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(100, 100, 100, 0.3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#blogTitle</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">font-weight</span>: bold;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">"Comic Sans MS"</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1.5em</span>;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#515151</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#navList</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#4C9ED9</span>;</span><br><span class="line"><span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#navList</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">5em</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">22px</span>;</span><br><span class="line"><span class="attribute">float</span>: left;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="attribute">padding-top</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#navigator</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ededed</span>;</span><br><span class="line"><span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#ededed</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">clear</span>: both;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.catListTitle</span> &#123;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">21px</span>;</span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">10.5px</span>;</span><br><span class="line"><span class="attribute">text-align</span>: left;</span><br><span class="line"><span class="attribute">border-left</span>: <span class="number">10px</span> solid <span class="built_in">rgba</span>(82, 168, 236, 0.8);</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">14px</span> <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#ad_under_post_holder</span> <span class="selector-id">#google_ad_c1</span>,<span class="selector-id">#google_ad_c2</span>&#123; </span><br><span class="line"><span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(https://i.loli.net/2018/05/03/5aeb107514579.jpg) fixed;</span><br><span class="line"><span class="attribute">background-size</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">"Helvetica Neue"</span>,Helvetica,Verdana,Arial,sans-serif;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line"><span class="attribute">min-height</span>: <span class="number">101%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#topics</span> <span class="selector-class">.postTitle</span> &#123;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">200%</span>;</span><br><span class="line"><span class="attribute">font-weight</span>: bold;</span><br><span class="line"><span class="attribute">float</span>: left;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">padding-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.commentform</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">margin-bottom</span>:<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_btn</span> &#123;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">90px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0</span> none;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#ddd</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line"><span class="attribute">cursor</span>:pointer;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">"Lato"</span>, Helvetica Neue, Helvetica, Microsoft Yahei, 宋体, Arial, sans-serif;</span><br><span class="line"><span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1px</span> <span class="number">#fff</span>;</span><br><span class="line"><span class="attribute">display</span>: inline <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_btn</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">90px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0</span> none;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#258fb8</span>;</span><br><span class="line"><span class="attribute">color</span>: white;</span><br><span class="line"><span class="attribute">cursor</span>:pointer;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">"Lato"</span>, Helvetica Neue, Helvetica, Microsoft Yahei, 宋体, Arial, sans-serif;</span><br><span class="line"><span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1px</span> <span class="number">#fff</span>;</span><br><span class="line"><span class="attribute">display</span>: inline <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#commentform_title</span> &#123;</span><br><span class="line"><span class="attribute">background-image</span>:none;</span><br><span class="line"><span class="attribute">background-repeat</span>:no-repeat;</span><br><span class="line"><span class="attribute">margin-bottom</span>:<span class="number">10px</span>;</span><br><span class="line"><span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#commentbox_opt</span>,<span class="selector-id">#commentbox_opt</span> + <span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.commentbox_title</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tbCommentBody</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>:<span class="string">'Microsoft Yahei'</span>, Microsoft Yahei, 宋体, sans-serif;</span><br><span class="line"><span class="attribute">margin-top</span>:<span class="number">10px</span>;</span><br><span class="line"><span class="attribute">max-width</span>:<span class="number">100%</span>;</span><br><span class="line"><span class="attribute">min-width</span>:<span class="number">100%</span>;</span><br><span class="line"><span class="attribute">background</span>:white;</span><br><span class="line"><span class="attribute">color</span>:<span class="number">#333</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">2px</span> solid <span class="number">#fff</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>:inset <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="number">#aaa</span>;</span><br><span class="line">// padding:10px;</span><br><span class="line"><span class="selector-tag">height</span><span class="selector-pseudo">:250px</span>;</span><br><span class="line"><span class="selector-tag">font-size</span><span class="selector-pseudo">:14px</span>;</span><br><span class="line"><span class="selector-tag">min-height</span><span class="selector-pseudo">:120px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.feedbackItem</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>:<span class="number">14px</span>;</span><br><span class="line"><span class="attribute">line-height</span>:<span class="number">24px</span>;</span><br><span class="line"><span class="attribute">margin</span>:<span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>:<span class="number">20px</span>;</span><br><span class="line"><span class="attribute">background</span>:<span class="number">#F2F2F2</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">#aaa</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.feedbackListSubtitle</span> &#123;</span><br><span class="line"><span class="attribute">font-weight</span>:normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#blog-comments-placeholder</span>, <span class="selector-id">#comment_form</span> &#123;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line"><span class="attribute">-webkit-box-shadow</span>: <span class="number">1px</span> <span class="number">2px</span> <span class="number">3px</span> <span class="number">#ddd</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">2px</span> <span class="number">3px</span> <span class="number">#ddd</span>;</span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.feedback_area_title</span> &#123;</span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">1.8em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.feedbackItem</span> &#123;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#CCC</span>;</span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgb</span>(248, 248, 248);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.color_shine</span> &#123;<span class="attribute">background</span>: <span class="built_in">rgb</span>(226, 242, 255);&#125;</span><br><span class="line"><span class="selector-class">.feedbackItem</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">-webkit-animation-name</span>: color_shine;<span class="attribute">-webkit-animation-duration</span>: <span class="number">2s</span>;<span class="attribute">-webkit-animation-iteration-count</span>: infinite;&#125;</span><br><span class="line"><span class="selector-id">#comment_form</span> <span class="selector-class">.title</span> &#123;</span><br><span class="line"><span class="attribute">font-weight</span>: normal;</span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将代码中的图片地址改成自己的就行。</p><h2 id="10-雪花效果"><a class="markdownIt-Anchor" href="#10-雪花效果"></a> 10、雪花效果</h2><p>添加 js 文件<br>前提是开通了 js 权限，然后把 xue.js 文件上传到自己博客中；<br>创建画布（放在页尾）：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="Snow"&gt;</span><br><span class="line">    &lt;canvas id="Snow"&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>引入 js 文件(放在页尾)；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://files.cnblogs.com/files/yjlblog/xue.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>js 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> requestAnimationFrame = <span class="built_in">window</span>.requestAnimationFrame || <span class="built_in">window</span>.mozRequestAnimationFrame || <span class="built_in">window</span>.webkitRequestAnimationFrame || <span class="built_in">window</span>.msRequestAnimationFrame ||</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">window</span>.setTimeout(callback, <span class="number">1000</span> / <span class="number">60</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">window</span>.requestAnimationFrame = requestAnimationFrame;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> flakes = [],</span><br><span class="line">        canvas = <span class="built_in">document</span>.getElementById(<span class="string">"Snow"</span>), <span class="comment">//画布ID，与上一步创建的画布对应</span></span><br><span class="line">        ctx = canvas.getContext(<span class="string">"2d"</span>),</span><br><span class="line">        flakeCount = <span class="number">200</span>,  <span class="comment">//雪花数量，数值越大雪花数量越多</span></span><br><span class="line">        mX = <span class="number">-100</span>,</span><br><span class="line">        mY = <span class="number">-100</span>;</span><br><span class="line"></span><br><span class="line">    canvas.width = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">    canvas.height = <span class="built_in">window</span>.innerHeight;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">snow</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; flakeCount; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> flake = flakes[i],</span><br><span class="line">                x = mX,</span><br><span class="line">                y = mY,</span><br><span class="line">                minDist = <span class="number">150</span>,  <span class="comment">//雪花距离鼠标指针的最小值，小于这个距离的雪花将受到鼠标的排斥</span></span><br><span class="line">                x2 = flake.x,</span><br><span class="line">                y2 = flake.y;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> dist = <span class="built_in">Math</span>.sqrt((x2 - x) * (x2 - x) + (y2 - y) * (y2 - y)),</span><br><span class="line">                dx = x2 - x,</span><br><span class="line">                dy = y2 - y;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (dist &lt; minDist) &#123;</span><br><span class="line">                <span class="keyword">var</span> force = minDist / (dist * dist),</span><br><span class="line">                    xcomp = (x - x2) / dist,</span><br><span class="line">                    ycomp = (y - y2) / dist,</span><br><span class="line">                    deltaV = force / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">                flake.velX -= deltaV * xcomp;</span><br><span class="line">                flake.velY -= deltaV * ycomp;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                flake.velX *= <span class="number">.98</span>;</span><br><span class="line">                <span class="keyword">if</span> (flake.velY &lt;= flake.speed) &#123;</span><br><span class="line">                    flake.velY = flake.speed</span><br><span class="line">                &#125;</span><br><span class="line">                flake.velX += <span class="built_in">Math</span>.cos(flake.step += <span class="number">.05</span>) * flake.stepSize;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ctx.fillStyle = <span class="string">"rgba(255,255,255,"</span> + flake.opacity + <span class="string">")"</span>;  <span class="comment">//雪花颜色</span></span><br><span class="line">            flake.y += flake.velY;</span><br><span class="line">            flake.x += flake.velX;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (flake.y &gt;= canvas.height || flake.y &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                reset(flake);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (flake.x &gt;= canvas.width || flake.x &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                reset(flake);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ctx.beginPath();</span><br><span class="line">            ctx.arc(flake.x, flake.y, flake.size, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>);</span><br><span class="line">            ctx.fill();</span><br><span class="line">        &#125;</span><br><span class="line">        requestAnimationFrame(snow);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">reset</span>(<span class="params">flake</span>) </span>&#123;</span><br><span class="line">        flake.x = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * canvas.width);</span><br><span class="line">        flake.y = <span class="number">0</span>;</span><br><span class="line">        flake.size = (<span class="built_in">Math</span>.random() * <span class="number">3</span>) + <span class="number">2</span>;  <span class="comment">//加号后面的值，雪花大小，为基准值，数值越大雪花越大</span></span><br><span class="line">        flake.speed = (<span class="built_in">Math</span>.random() * <span class="number">1</span>) + <span class="number">0.5</span>;  <span class="comment">//加号后面的值，雪花速度，为基准值，数值越大雪花速度越快</span></span><br><span class="line">        flake.velY = flake.speed;</span><br><span class="line">        flake.velX = <span class="number">0</span>;</span><br><span class="line">        flake.opacity = (<span class="built_in">Math</span>.random() * <span class="number">0.5</span>) + <span class="number">0.3</span>;  <span class="comment">//加号后面的值，为基准值，范围0~1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; flakeCount; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> x = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * canvas.width),</span><br><span class="line">                y = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * canvas.height),</span><br><span class="line">                size = (<span class="built_in">Math</span>.random() * <span class="number">3</span>) + <span class="number">2</span>,  <span class="comment">//加号后面的值，雪花大小，为基准值，数值越大雪花越大</span></span><br><span class="line">                speed = (<span class="built_in">Math</span>.random() * <span class="number">1</span>) + <span class="number">0.5</span>,  <span class="comment">//加号后面的值，雪花速度，为基准值，数值越大雪花速度越快</span></span><br><span class="line">                opacity = (<span class="built_in">Math</span>.random() * <span class="number">0.5</span>) + <span class="number">0.3</span>;  <span class="comment">//加号后面的值，为基准值，范围0~1</span></span><br><span class="line"></span><br><span class="line">            flakes.push(&#123;</span><br><span class="line">                speed: speed,</span><br><span class="line">                velY: speed,</span><br><span class="line">                velX: <span class="number">0</span>,</span><br><span class="line">                x: x,</span><br><span class="line">                y: y,</span><br><span class="line">                size: size,</span><br><span class="line">                stepSize: (<span class="built_in">Math</span>.random()) / <span class="number">30</span> * <span class="number">1</span>,  <span class="comment">//乘号后面的值，雪花横移幅度，为基准值，数值越大雪花横移幅度越大，0为竖直下落</span></span><br><span class="line">                step: <span class="number">0</span>,</span><br><span class="line">                angle: <span class="number">180</span>,</span><br><span class="line">                opacity: opacity</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        snow();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"mousemove"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        mX = e.clientX,</span><br><span class="line">        mY = e.clientY</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        canvas.width = <span class="built_in">window</span>.innerWidth;</span><br><span class="line">        canvas.height = <span class="built_in">window</span>.innerHeight;</span><br><span class="line">    &#125;);</span><br><span class="line">    init();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>添加样式（自定义 css，背景颜色可以自己改变）；</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#Snow</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">99999</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(125,137,95,0.1);</span><br><span class="line">    <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-去除广告"><a class="markdownIt-Anchor" href="#11-去除广告"></a> 11、去除广告</h2><p>在页面定制 css 添加代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#google_ad_c1</span>,<span class="selector-id">#div-gpt-ad-1320933818841-0</span>,<span class="selector-id">#google_ad_c2</span>,<span class="selector-id">#div-gpt-ad-1320933818841-1</span>,<span class="selector-id">#ad_under_google</span>&#123;</span><br><span class="line"><span class="attribute">display</span>:none;</span><br><span class="line">visibility：hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#under_post_kb</span>,</span><br><span class="line"><span class="selector-id">#under_post_news</span>&#123;</span><br><span class="line">   <span class="attribute">display</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#site_nav_under</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.c_ad_block</span>, <span class="selector-class">.ad_text_commentbox</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#ad_under_google</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#ad_under_google</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#ad_t2</span>&#123; <span class="attribute">display</span>:none &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div_digg</span>&#123; <span class="attribute">display</span>:none &#125;</span><br><span class="line"><span class="selector-id">#author_profile_info</span>&#123; <span class="attribute">display</span>:none &#125;</span><br><span class="line"><span class="selector-class">.postDesc</span>&#123; <span class="attribute">display</span>:none &#125;</span><br></pre></td></tr></table></figure><h2 id="12-公告栏时钟"><a class="markdownIt-Anchor" href="#12-公告栏时钟"></a> 12、公告栏时钟</h2><p>博客侧边栏公告代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">--</span> 添加公告栏时钟 <span class="selector-tag">--</span>&gt;</span><br><span class="line">&lt;div id="clockdiv"&gt;</span><br><span class="line">    &lt;canvas id="dom" width="120" height="120"&gt;时钟canvas&lt;/canvas&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script type="text/javascript" src="https://files.cnblogs.com/files/shwee/clock.js"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>页面定制 CSS 代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 定制公告栏时钟位置 */</span></span><br><span class="line"><span class="selector-id">#clockdiv</span> &#123;</span><br><span class="line">    <span class="comment">/* left, center, right */</span></span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-添加公告栏文字信息"><a class="markdownIt-Anchor" href="#13-添加公告栏文字信息"></a> 13、添加公告栏文字信息</h2><p>博客侧边栏公告代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"gonggao"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color: blue;font-weight: bold;"</span> <span class="attr">href</span>=<span class="string">"http://www.cnblogs.com/shwee/p/9056959.html"</span>&gt;</span>我的博客目录结构<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"wenzi"</span>&gt;</span>欢迎来到我的博客<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>-------------------------------<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>页面定制 CSS 代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 定制公告栏文字信息 */</span></span><br><span class="line"><span class="selector-class">.gonggao</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wenzi</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-点击爱心效果"><a class="markdownIt-Anchor" href="#14-点击爱心效果"></a> 14、点击爱心效果</h2><p>为页面添加鼠标点击心形特效，代码放在 “博客侧边栏公告（支持 HTML 代码）（支持 JS 代码）”框中，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 为页面添加爱心特效 --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">window,document,undefined</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> hearts = [];</span><br><span class="line">    s</span><br><span class="line">    <span class="built_in">window</span>.requestAnimationFrame = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">window</span>.requestAnimationFrame || </span><br><span class="line">        <span class="built_in">window</span>.webkitRequestAnimationFrame ||</span><br><span class="line">        <span class="built_in">window</span>.mozRequestAnimationFrame ||</span><br><span class="line">         <span class="built_in">window</span>.oRequestAnimationFrame ||</span><br><span class="line">         <span class="built_in">window</span>.msRequestAnimationFrame ||</span><br><span class="line">         <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>)</span>&#123;</span><br><span class="line">             setTimeout(callback,<span class="number">1000</span>/<span class="number">60</span>);</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">    </span><br><span class="line">    init();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        css(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: absolute;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>);</span><br><span class="line">        attachEvent();</span><br><span class="line">        gameloop();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gameloop</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;hearts.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(hearts[i].alpha &lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">document</span>.body.removeChild(hearts[i].el);</span><br><span class="line">                hearts.splice(i,<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">             hearts[i].y--;</span><br><span class="line">             hearts[i].scale += <span class="number">0.004</span>;</span><br><span class="line">             hearts[i].alpha -= <span class="number">0.013</span>;</span><br><span class="line">             hearts[i].el.style.cssText = <span class="string">"left:"</span>+hearts[i].x+<span class="string">"px;top:"</span>+hearts[i].y+<span class="string">"px;opacity:"</span>+hearts[i].alpha+<span class="string">";transform:scale("</span>+hearts[i].scale+<span class="string">","</span>+hearts[i].scale+<span class="string">") rotate(45deg);background:"</span>+hearts[i].color;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        requestAnimationFrame(gameloop);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">attachEvent</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> old = <span class="keyword">typeof</span> <span class="built_in">window</span>.onclick===<span class="string">"function"</span> &amp;&amp; <span class="built_in">window</span>.onclick;</span><br><span class="line">        <span class="built_in">window</span>.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">            old &amp;&amp; old();</span><br><span class="line">            createHeart(event);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createHeart</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> d = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        d.className = <span class="string">"heart"</span>;</span><br><span class="line">        hearts.push(&#123;</span><br><span class="line">            el : d,</span><br><span class="line">            x : event.clientX - <span class="number">5</span>,</span><br><span class="line">            y : event.clientY - <span class="number">5</span>,</span><br><span class="line">            scale : <span class="number">1</span>,</span><br><span class="line">            alpha : <span class="number">1</span>,</span><br><span class="line">            color : randomColor()</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(d);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">css</span>(<span class="params">css</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> style = <span class="built_in">document</span>.createElement(<span class="string">"style"</span>);</span><br><span class="line">        style.type=<span class="string">"text/css"</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            style.appendChild(<span class="built_in">document</span>.createTextNode(css));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(ex)&#123;</span><br><span class="line">            style.styleSheet.cssText = css;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appendChild(style);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">randomColor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"rgb("</span>+(~~(<span class="built_in">Math</span>.random()*<span class="number">255</span>))+<span class="string">","</span>+(~~(<span class="built_in">Math</span>.random()*<span class="number">255</span>))+<span class="string">","</span>+(~~(<span class="built_in">Math</span>.random()*<span class="number">255</span>))+<span class="string">")"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;以下部分教程来源于互联网，仅作为本人学习所用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-每日一言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-每日一言&quot;&gt;&lt;/a&gt; 1、每日一言&lt;/h2&gt;
&lt;p&gt;在侧边栏加入以下 css 代码即可：&lt;/p&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/tags/Blog/"/>
    
      <category term="博客园" scheme="https://zhangxiaocn.github.io/tags/%E5%8D%9A%E5%AE%A2%E5%9B%AD/"/>
    
      <category term="美化" scheme="https://zhangxiaocn.github.io/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>PID 基础公式及程序</title>
    <link href="https://zhangxiaocn.github.io/2019/10/30/study-note-pid/"/>
    <id>https://zhangxiaocn.github.io/2019/10/30/study-note-pid/</id>
    <published>2019-10-30T12:21:32.000Z</published>
    <updated>2020-02-04T07:19:30.681Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>仅用于备份本人所写笔记，如有错误或不完善之处还请包含。转载请注明出处！</p></blockquote><h2 id="1-位置式离散-pid"><a class="markdownIt-Anchor" href="#1-位置式离散-pid"></a> 1、位置式离散 PID：</h2><ul><li>$ Pwm = Kp \times e(k) + Ki \times \sum e(k) + Kd \times [e(k) - e(k-1)] $</li><li>$ e(k) $ : 本次偏差</li><li>$ e(k-1) $ : 上次偏差</li><li>$ \sum e(k) $ : $ e(k) $ 以及之前的偏差的累计和，其中 $ k $ 为 $ 1, 2, 3\ldots<br>k $</li><li>$ Pwm $ : 代表输出</li></ul><a id="more"></a><p>C 语言的实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 位置式离散 PID</span></span><br><span class="line"><span class="comment">// P = Kp * err;</span></span><br><span class="line"><span class="comment">// I = Ki * integral_err;</span></span><br><span class="line"><span class="comment">// D = Kd * (err - last_err);</span></span><br><span class="line"><span class="comment">// Pwm = P + I + D;</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">PositionPid</span><span class="params">(<span class="keyword">int</span> encoder, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">float</span> err = <span class="number">0</span>, last_err = <span class="number">0</span>, integral_err = <span class="number">0</span>, pwm = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> kp = <span class="number">1</span>, ki = <span class="number">1</span>, kd = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    err = encoder - target;  <span class="comment">// 计算偏差</span></span><br><span class="line">    integral_err += err;  <span class="comment">// 求出偏差积分</span></span><br><span class="line">    pwm = kp * err + ki * integral_err + kd * (err - last_err);</span><br><span class="line">    last_err = err;  <span class="comment">// 保存上一次偏差</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pwm;  <span class="comment">// 输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在舵机角度控制闭环系统里，只使用 PD 控制，因此可将 PID 控制简化为此公式：</p><p>$ Pwm = Kp \times e(k) + Kd \times [e(k) - e(k-1)] $</p><p>代码更改如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 位置式离散 PD</span></span><br><span class="line"><span class="comment">// P = Kp * err;</span></span><br><span class="line"><span class="comment">// D = Kd * (err - last_err);</span></span><br><span class="line"><span class="comment">// Pwm = P + D;</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">PositionPid</span><span class="params">(<span class="keyword">int</span> encoder, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">float</span> err = <span class="number">0</span>, last_err = <span class="number">0</span>, integral_err = <span class="number">0</span>, pwm = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> kp = <span class="number">1</span>, ki = <span class="number">1</span>, kd = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    err = encoder - target;  <span class="comment">// 计算偏差</span></span><br><span class="line">    pwm = kp * err + kd * (err - last_err);</span><br><span class="line">    last_err = err;  <span class="comment">// 保存上一次偏差</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pwm;  <span class="comment">// 输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PID 参数整定：</p><ul><li>P：用于提高相应速度</li><li>I：用于减小静差</li><li>D：用于抑制震荡</li></ul><h2 id="2-增量式离散-pid"><a class="markdownIt-Anchor" href="#2-增量式离散-pid"></a> 2、增量式离散 PID：</h2><ul><li>$ Pwm += Kp × [e(k) - e(k-1)] + Ki × e(k) + Kd × [e(k) - 2e(k-1) + e(k-2)] $</li><li>$ e(k) $ : 本次偏差</li><li>$ e(k-1) $ : 上次的偏差</li><li>$ e(k-2) $ : 上上次的偏差</li><li>$ Pwm $ : 代表增量输出</li></ul><p>C 语言实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 增量式离散 PID</span></span><br><span class="line"><span class="comment">// P = Kp * (err - last_err);</span></span><br><span class="line"><span class="comment">// I = Ki * err;</span></span><br><span class="line"><span class="comment">// D = Kd * (err - 2 * last_err + before_err);</span></span><br><span class="line"><span class="comment">// Pwm += P + I + D;</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">IncrementalPid</span><span class="params">(<span class="keyword">int</span> encoder, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">float</span> err = <span class="number">0</span>, last_err = <span class="number">0</span>, before_err = <span class="number">0</span>, pwm = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> kp = <span class="number">1</span>, ki = <span class="number">1</span>, kd = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    err = encoder - target;  <span class="comment">// 计算偏差</span></span><br><span class="line">    pwm += kp * (err - last_err) + ki * err +</span><br><span class="line">          kd * (err - <span class="number">2</span> * last_err + before_err);  <span class="comment">// 增量式 PI 控制器</span></span><br><span class="line">    before_err = last_err;  <span class="comment">// 保存上上次偏差</span></span><br><span class="line">    last_err = err;  <span class="comment">// 保存上一次偏差</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pwm;  <span class="comment">// 增量输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在速度控制闭环系统里，只使用 PI 控制，因此可将 PID 控制简化为此公式：</p><p>$ Pwm += Kp × [e(k) - e(k-1)] + Ki × e(k) $</p><p>代码更改如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 增量式离散 PI</span></span><br><span class="line"><span class="comment">// P = Kp * (err - last_err);</span></span><br><span class="line"><span class="comment">// I = Ki * err;</span></span><br><span class="line"><span class="comment">// Pwm += P + I;</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">IncrementalPid</span><span class="params">(<span class="keyword">int</span> encoder, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">float</span> err = <span class="number">0</span>, last_err = <span class="number">0</span>, pwm = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> kp = <span class="number">1</span>, ki = <span class="number">1</span>, kd = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    err = encoder - target;  <span class="comment">// 计算偏差</span></span><br><span class="line">    pwm += kp * (err - last_err) + ki * err;  <span class="comment">// 增量式 PI 控制器</span></span><br><span class="line">    last_err = err;  <span class="comment">// 保存上一次偏差</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pwm;  <span class="comment">// 增量输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;仅用于备份本人所写笔记，如有错误或不完善之处还请包含。转载请注明出处！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-位置式离散-pid&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-位置式离散-pid&quot;&gt;&lt;/a&gt; 1、位置式离散 PID：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;$ Pwm = Kp \times e(k) + Ki \times \sum e(k) + Kd \times [e(k) - e(k-1)] $&lt;/li&gt;
&lt;li&gt;$ e(k) $ : 本次偏差&lt;/li&gt;
&lt;li&gt;$ e(k-1) $ : 上次偏差&lt;/li&gt;
&lt;li&gt;$ \sum e(k) $ : $ e(k) $ 以及之前的偏差的累计和，其中 $ k $ 为 $ 1, 2, 3\ldots&lt;br&gt;
k $&lt;/li&gt;
&lt;li&gt;$ Pwm $ : 代表输出&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://zhangxiaocn.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="PID" scheme="https://zhangxiaocn.github.io/tags/PID/"/>
    
  </entry>
  
  <entry>
    <title>K60 定时器中断的使用</title>
    <link href="https://zhangxiaocn.github.io/2019/10/30/k60-time-interrupt/"/>
    <id>https://zhangxiaocn.github.io/2019/10/30/k60-time-interrupt/</id>
    <published>2019-10-30T12:16:02.000Z</published>
    <updated>2020-02-04T07:15:49.311Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>仅用于备份本人所写笔记，如有错误或不完善之处还请包含。转载请注明出处！</p><p>程序使用逐飞科技 K60 库 V2.0.3</p></blockquote><p>首先，中断需要初始化以及定义中断的时间：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pit_init_ms(pit1, <span class="number">1</span>);    <span class="comment">// 设置中断时间为 1ms</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>中断时间过长，会造成程序运行后出现的效果非常迟钝。</p><p>中断时间过短，可能会使中断里的程序运行时间不够，从而造成溢出。</p><p>所以在时间方面需要细心拿捏。</p><p>设置中断的优先级：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set_irq_priority(PIT1_IRQn, <span class="number">1</span>);    <span class="comment">// 设置优先级</span></span><br></pre></td></tr></table></figure><p>设置完成后，就可以打开中断，开始运行：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enable_irq(PIT1_IRQn);    <span class="comment">// 打开中断 1</span></span><br></pre></td></tr></table></figure><p>运行中断时，需要注意中断里的程序最好不要过多，尽可能不要有延时函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 中断 1</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PIT1_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用户程序</span></span><br><span class="line">    </span><br><span class="line">    PIT_FlAG_CLR(pit1);    <span class="comment">// 中断标志清除</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就基本实现了中断的初始化及运行。</p><p>当然我们也可以同时用两个甚至多个中断，让它们同时运行。但是，中断过多可能会出现一些问题。比如：</p><ol><li>出现同时两个中断满足进入中断的条件时，这时就会根据中断优先级进行判断先进入哪个中断服务程序里，高优先级的执行完毕才会进入低优先级中断。</li><li>如果正在执行中断服务程序（中断1）时，另一个中断（中断2）触发，如果 2 优先级高于 1，那么会立即执行中断2的服务程序，等中断2 执行完毕，才会继续执行中断1。如果中断 2 优先级低于中断1，则等待中断1 执行完毕才会执行中断2。</li></ol><p>也就是说，如果两个或者多个中断同时满足运行条件，可能会造成低优先级中断里的程序没有机会运行，从而影响使用。所以，没有太大必要的情况下，不建议同时使用多个中断。</p><p>那么，如果只用一个中断，而我又需要让程序在不同的时间下运行该怎么办呢？</p><p>如下给出一个可行的方案：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 中断 0，计时 1ms</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PIT0_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    timeCount++;    <span class="comment">// 每运行一次中断，值 +1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (timeCount % <span class="number">1</span> == <span class="number">0</span> ) &#123; timeFlag_1ms = <span class="number">1</span>; &#125;    <span class="comment">// 1ms 标志</span></span><br><span class="line">    <span class="keyword">if</span> (timeCount % <span class="number">2</span> == <span class="number">0</span> ) &#123; timeFlag_2ms = <span class="number">1</span>; &#125;    <span class="comment">// 2ms 标志</span></span><br><span class="line">    <span class="keyword">if</span> (timeCount % <span class="number">5</span> == <span class="number">0</span> ) &#123; timeFlag_5ms = <span class="number">1</span>; &#125;    <span class="comment">// 5ms 标志</span></span><br><span class="line">    <span class="keyword">if</span> (timeCount % <span class="number">10</span> == <span class="number">0</span> ) &#123; timeFlag_10ms = <span class="number">1</span>; &#125;    <span class="comment">// 10ms 标志</span></span><br><span class="line">    <span class="keyword">if</span> (timeCount % <span class="number">20</span> == <span class="number">0</span> ) &#123; timeFlag_20ms = <span class="number">1</span>; &#125;    <span class="comment">// 20ms 标志</span></span><br><span class="line">    <span class="keyword">if</span> (timeCount % <span class="number">50</span> == <span class="number">0</span> ) &#123; timeFlag_50ms = <span class="number">1</span>; &#125;    <span class="comment">// 50ms 标志</span></span><br><span class="line">    <span class="keyword">if</span> (timeCount % <span class="number">200</span> == <span class="number">0</span> ) &#123; timeFlag_200ms = <span class="number">1</span>; timeCount = <span class="number">0</span>; &#125;    <span class="comment">// 200ms 标志，并清除计时标志</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (timeFlag_1ms == <span class="number">1</span>) &#123; timeFlag_1ms = <span class="number">0</span>;  ... &#125;    <span class="comment">// 每 1ms 运行一次程序</span></span><br><span class="line">    <span class="keyword">if</span> (timeFlag_2ms == <span class="number">1</span>) &#123; timeFlag_2ms = <span class="number">0</span>;  ... &#125;    <span class="comment">// 每 2ms 运行一次程序</span></span><br><span class="line">    <span class="keyword">if</span> (timeFlag_5ms == <span class="number">1</span>) &#123; timeFlag_5ms = <span class="number">0</span>;  ... &#125;    <span class="comment">// 每 5ms 运行一次程序</span></span><br><span class="line">    <span class="keyword">if</span> (timeFlag_10ms == <span class="number">1</span>) &#123; timeFlag_10ms = <span class="number">0</span>;  ... &#125;    <span class="comment">// 每 10ms 运行一次程序</span></span><br><span class="line">    <span class="keyword">if</span> (timeFlag_20ms == <span class="number">1</span>) &#123; timeFlag_20ms = <span class="number">0</span>;  ... &#125;    <span class="comment">// 每 20ms 运行一次程序</span></span><br><span class="line">    <span class="keyword">if</span> (timeFlag_50ms == <span class="number">1</span>) &#123; timeFlag_50ms = <span class="number">0</span>;  ... &#125;    <span class="comment">// 每 50ms 运行一次程序</span></span><br><span class="line">    <span class="keyword">if</span> (timeFlag_200ms == <span class="number">1</span>) &#123; timeFlag_200ms = <span class="number">0</span>;  ... &#125;    <span class="comment">// 每 200ms 运行一次程序</span></span><br><span class="line"></span><br><span class="line">    PIT_FlAG_CLR(pit0);    <span class="comment">// 中断标志清除</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上，让中断里的程序每 200ms 实现一次循环。只要将每个程序的运行时间设置到位，便可以让各个程序在不同的时间下运行。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;仅用于备份本人所写笔记，如有错误或不完善之处还请包含。转载请注明出处！&lt;/p&gt;
&lt;p&gt;程序使用逐飞科技 K60 库 V2.0.3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先，中断需要初始化以及定义中断的时间：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pit_init_ms(pit1, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;// 设置中断时间为 1ms&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://zhangxiaocn.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="K60" scheme="https://zhangxiaocn.github.io/tags/K60/"/>
    
  </entry>
  
  <entry>
    <title>OpenMV 扫描 QR 码 + 串口通信</title>
    <link href="https://zhangxiaocn.github.io/2019/10/29/openmv-study-note-1/"/>
    <id>https://zhangxiaocn.github.io/2019/10/29/openmv-study-note-1/</id>
    <published>2019-10-29T13:46:29.000Z</published>
    <updated>2020-02-04T07:17:04.607Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>部分内容来自 <a href="http://book.myopenmv.com/" target="_blank" rel="noopener">凡哥带你玩转OpenMV</a> 以及 <a href="http://book.openmv.cc/quick-starter.html" target="_blank" rel="noopener">OpenMV中文入门教程</a>。</p></blockquote><h2 id="1-使用-ttl-usb-模块"><a class="markdownIt-Anchor" href="#1-使用-ttl-usb-模块"></a> 1、使用 TTL-USB 模块</h2><blockquote><p>备份一下我用的 TTL-USB 模块各接口，红线是 <code>5V</code> ，粉色线是 <code>3V3</code> ，蓝色线是 <code>TX</code> ，绿色线是 <code>RX</code> ，黑色线是 <code>GND</code></p></blockquote><a id="more"></a><p>两个单片机进行串口通信，最少需要三根线相连：</p><ul><li>发送端 TX</li><li>接收端 RX</li><li>地线 GND</li></ul><p>例如 A 和 B 两个单片机，A 的 <code>RX</code> 需要接 B 的 <code>TX</code> ，B 的 <code>RX</code> 需要接 A 的 <code>TX</code> ，二者的地线 <code>GND</code> 相连作为参考电平。</p><blockquote><p><strong>VCC 可接可不接，USB 的串口是 5V 的，如果要接 OpenMV 板子上的话， 需要接在 OpenMV 的 VIN 上， 如果接在 3v3, 也就是 3.3v 的接口处， 会使所有的元器件暴露在 5v 的电压下， 导致电子元器件全部烧毁</strong>。</p></blockquote><h2 id="2-openmv-串口资源"><a class="markdownIt-Anchor" href="#2-openmv-串口资源"></a> 2、OpenMV 串口资源</h2><p>OpenMV 引脚图 <strong>UART 3</strong> ：</p><table><thead><tr><th style="text-align:center">Pin Name</th><th style="text-align:center">Uart Index</th><th style="text-align:center">Role</th></tr></thead><tbody><tr><td style="text-align:center">P4</td><td style="text-align:center">串口 3</td><td style="text-align:center">TX 发送端</td></tr><tr><td style="text-align:center">P5</td><td style="text-align:center">串口 3</td><td style="text-align:center">RX 接收端</td></tr></tbody></table><h2 id="3-串口助手"><a class="markdownIt-Anchor" href="#3-串口助手"></a> 3、串口助手</h2><p>推荐下载星瞳串口助手：<a href="https://singtown.com/singtownserialport/" target="_blank" rel="noopener">https://singtown.com/singtownserialport/</a></p><p>或者友善串口调试助手，百度搜索下载即可。</p><p>软件设置：</p><ul><li>波特率：115200</li><li>数据为：8</li><li>校验位：None</li><li>停止位：1</li><li>流控：None</li><li>接收设置：ASCII</li><li>发送设置：Hex</li></ul><h2 id="4-串口通信程序"><a class="markdownIt-Anchor" href="#4-串口通信程序"></a> 4、串口通信程序</h2><h3 id="41-uart-对象"><a class="markdownIt-Anchor" href="#41-uart-对象"></a> 4.1、UART 对象</h3><blockquote><p>更多详细操作请转到 UART 官方文档：</p><p><a href="http://docs.micropython.org/en/latest/pyboard/library/pyb.UART.html?highlight=uart" target="_blank" rel="noopener">http://docs.micropython.org/en/latest/pyboard/library/pyb.UART.html?highlight=uart</a></p></blockquote><p>初始化UART对象：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 初始化一个串口对象</span></span><br><span class="line"><span class="comment">* uart_idx  , 串口 ID， 我们这里只能写 1 或者 3</span></span><br><span class="line"><span class="comment">* baud_rate , 波特率 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">UART(uart_idx, baud_rate)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化 UART 对象</span></span><br><span class="line">uart = UART(<span class="number">3</span>, <span class="number">115200</span>)</span><br></pre></td></tr></table></figure><p>更多操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读写操作</span></span><br><span class="line">uart.read(<span class="number">10</span>)        <span class="comment"># 读入 10 个字符， 返回一个比特对象                    </span></span><br><span class="line">uart.read()          <span class="comment"># 读取所有的有效字符</span></span><br><span class="line">uart.readline()      <span class="comment"># 读入一行</span></span><br><span class="line">uart.readinto(buf)   <span class="comment"># 读入并且保存在缓存中</span></span><br><span class="line">uart.write(<span class="string">'abc'</span>)    <span class="comment"># 向串口写入3个字符abc</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单个字符的读取与写入</span></span><br><span class="line">uart.readchar()      <span class="comment"># 读入一个字符</span></span><br><span class="line">uart.writechar(<span class="number">42</span>)   <span class="comment"># 写入 ASCALL 码为 42 的字符</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断串口是否有数据</span></span><br><span class="line">uart.any()</span><br></pre></td></tr></table></figure><h3 id="42-向串口发送数据"><a class="markdownIt-Anchor" href="#42-向串口发送数据"></a> 4.2、向串口发送数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> pyb <span class="keyword">import</span> UART</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化 UART 对象</span></span><br><span class="line">uart = UART(<span class="number">3</span>, <span class="number">115200</span>)</span><br><span class="line">uart.init(<span class="number">115200</span>, bits=<span class="number">8</span>, parity=<span class="literal">None</span>, stop=<span class="number">1</span>) <span class="comment"># init with given parameters</span></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    uart.write(<span class="string">"Hello World!!!\r"</span>)</span><br><span class="line">    print(<span class="string">"Hello World"</span>)</span><br><span class="line">    time.sleep(<span class="number">1000</span>)  <span class="comment"># 休眠 1s</span></span><br></pre></td></tr></table></figure><h3 id="43-向串口接收数据"><a class="markdownIt-Anchor" href="#43-向串口接收数据"></a> 4.3、向串口接收数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> pyb <span class="keyword">import</span> UART</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化 UART 对象</span></span><br><span class="line">uart = UART(<span class="number">3</span>, <span class="number">115200</span>)</span><br><span class="line">uart.init(<span class="number">115200</span>, bits=<span class="number">8</span>, parity=<span class="literal">None</span>, stop=<span class="number">1</span>) <span class="comment"># init with given parameters</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    <span class="comment"># 判断是否有数据</span></span><br><span class="line">    <span class="keyword">if</span> uart.any():</span><br><span class="line">        tmp_data = uart.readline()</span><br><span class="line">        print(tmp_data)</span><br><span class="line"></span><br><span class="line">    time.sleep(<span class="number">1000</span>)  <span class="comment"># 休眠 1s</span></span><br></pre></td></tr></table></figure><h3 id="44-数据双向发送与接收"><a class="markdownIt-Anchor" href="#44-数据双向发送与接收"></a> 4.4、数据双向发送与接收</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> pyb <span class="keyword">import</span> UART</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化 UART 对象</span></span><br><span class="line">uart = UART(<span class="number">3</span>, <span class="number">115200</span>)</span><br><span class="line">uart.init(<span class="number">115200</span>, bits=<span class="number">8</span>, parity=<span class="literal">None</span>, stop=<span class="number">1</span>) <span class="comment"># init with given parameters</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sending_data</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">global</span> uart</span><br><span class="line">    uart.write(<span class="string">"HelloWorld!!!\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接收数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recive_data</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> uart</span><br><span class="line">    <span class="keyword">if</span> uart.any():</span><br><span class="line">        tmp_data = uart.readline()</span><br><span class="line">        uart.write(<span class="string">"Recived : %s\n"</span> % tmp_data)</span><br><span class="line">        print(tmp_data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    sending_data()</span><br><span class="line">    recive_data()</span><br><span class="line">    time.sleep(<span class="number">1000</span>)  <span class="comment"># 休眠 1s</span></span><br></pre></td></tr></table></figure><h2 id="5-扫描-qr-码"><a class="markdownIt-Anchor" href="#5-扫描-qr-码"></a> 5、扫描 QR 码</h2><p>可以用 <a href="http://cli.im/" target="_blank" rel="noopener">草料二维码</a> 生成想要的 QR 码内容</p><p>程序如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sensor, image</span><br><span class="line"></span><br><span class="line">sensor.reset()</span><br><span class="line">sensor.set_pixformat(sensor.RGB565)</span><br><span class="line">sensor.set_framesize(sensor.QQVGA)  <span class="comment"># can be QVGA on M7...</span></span><br><span class="line">sensor.skip_frames(<span class="number">30</span>)              <span class="comment"># 修改 sensor 配置之后，跳过30帧</span></span><br><span class="line">sensor.set_auto_gain(<span class="literal">False</span>)         <span class="comment"># must turn this off to prevent image washout...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    img = sensor.snapshot()         <span class="comment"># 拍摄一张照片，snapshot() 函数返回一个 image 对象</span></span><br><span class="line">    img.lens_corr(<span class="number">1.8</span>)              <span class="comment"># strength of 1.8 is good for the 2.8mm lens.</span></span><br><span class="line">                                    <span class="comment"># 用来防止 115 度的摄像头拍摄出来的图像畸变(鱼眼)</span></span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> img.find_qrcodes(): <span class="comment"># find_qrcodes 用于寻找二维码</span></span><br><span class="line">        print(code)</span><br><span class="line">        <span class="comment"># 返回对象格式如下：</span></span><br><span class="line">        <span class="comment"># &#123;x:**, y:**, w:**, h:**, payload:"**", version:*, ecc_level:*, mask:*, data_type:*, eci:*&#125;</span></span><br><span class="line">        <span class="comment"># payload 就是在二维码下隐藏的信息</span></span><br></pre></td></tr></table></figure><h2 id="6-扫描-qr-码后通过串口发送数据"><a class="markdownIt-Anchor" href="#6-扫描-qr-码后通过串口发送数据"></a> 6、扫描 QR 码后通过串口发送数据</h2><p>简单说就是把串口发送数据程序和扫描 QR 码程序放在一块就好了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> pyb <span class="keyword">import</span> UART</span><br><span class="line"><span class="keyword">import</span> sensor, image</span><br><span class="line"></span><br><span class="line">sensor.reset()</span><br><span class="line">sensor.set_pixformat(sensor.RGB565)</span><br><span class="line">sensor.set_framesize(sensor.QQVGA)  <span class="comment"># can be QVGA on M7...</span></span><br><span class="line">sensor.skip_frames(<span class="number">30</span>)              <span class="comment"># 修改 sensor 配置之后，跳过30帧</span></span><br><span class="line">sensor.set_auto_gain(<span class="literal">False</span>)         <span class="comment"># must turn this off to prevent image washout...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化 UART 对象</span></span><br><span class="line">uart = UART(<span class="number">3</span>, <span class="number">115200</span>)</span><br><span class="line">uart.init(<span class="number">115200</span>, bits = <span class="number">8</span>, parity = <span class="literal">None</span>, stop = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    img = sensor.snapshot()         <span class="comment"># 拍摄一张照片，snapshot() 函数返回一个 image 对象</span></span><br><span class="line">    img.lens_corr(<span class="number">1.8</span>)              <span class="comment"># 用来防止 115 度的摄像头拍摄出来的图像畸变(鱼眼)</span></span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> img.find_qrcodes(): <span class="comment"># find_qrcodes 用于寻找二维码</span></span><br><span class="line">        uart.write(code.payload())  <span class="comment"># 串口读取二维码数据</span></span><br><span class="line">        <span class="comment"># if code = "123"</span></span><br><span class="line">        <span class="comment"># 返回对象格式如下：</span></span><br><span class="line">        <span class="comment"># &#123;x, y, w, h, payload:"**", version:*, ecc_level:*, mask:*, data_type:*, eci:*&#125;</span></span><br><span class="line">        <span class="comment"># payload 就是我们在二维码下隐藏的信息</span></span><br><span class="line">        print(code)      <span class="comment"># 输出二维码内容</span></span><br><span class="line">        time.sleep(<span class="number">500</span>)  <span class="comment"># 休息 0.5s</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;部分内容来自 &lt;a href=&quot;http://book.myopenmv.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;凡哥带你玩转OpenMV&lt;/a&gt; 以及 &lt;a href=&quot;http://book.openmv.cc/quick-starter.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OpenMV中文入门教程&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-使用-ttl-usb-模块&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-使用-ttl-usb-模块&quot;&gt;&lt;/a&gt; 1、使用 TTL-USB 模块&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;备份一下我用的 TTL-USB 模块各接口，红线是 &lt;code&gt;5V&lt;/code&gt; ，粉色线是 &lt;code&gt;3V3&lt;/code&gt; ，蓝色线是 &lt;code&gt;TX&lt;/code&gt; ，绿色线是 &lt;code&gt;RX&lt;/code&gt; ，黑色线是 &lt;code&gt;GND&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://zhangxiaocn.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="OpenMV" scheme="https://zhangxiaocn.github.io/tags/OpenMV/"/>
    
  </entry>
  
  <entry>
    <title>简述 K60 直流电机闭环控制</title>
    <link href="https://zhangxiaocn.github.io/2019/10/29/k60-motor-control/"/>
    <id>https://zhangxiaocn.github.io/2019/10/29/k60-motor-control/</id>
    <published>2019-10-29T13:41:02.000Z</published>
    <updated>2020-02-04T07:15:27.773Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>仅用于备份本人所写笔记，如有错误或不完善之处还请包含。转载请注明出处！</p><p>程序使用逐飞科技 K60 库 V2.0.3</p></blockquote><p>电机速度闭环控制，简单来说就是将电机的输出量（速度）通过编码器反馈到控制端（单片机），然后对该输出量和设定的输入量进行比对，接着经过 PID 运算，将运算结果输入给电机的过程。</p><a id="more"></a><p>电机速度闭环一个显而易见的好处就是，可以让小车在不同的路段动态调整小车的速度，如果参数调整的好，可以让小车极大的提升对赛道的适应性能，减少小车跑完一圈所需的时间。</p><p>闭环控制思路比较简单，首先需要获取编码器的值，每 4ms 取一次值（可以设定其他时间），然后将取到的值进行相应的计算，得出电机当前速度。</p><p>代码示例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> unit_pulse = <span class="number">1783.0</span>;  <span class="comment">// 小车轮胎旋转一周（360°）的脉冲</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> motor_radius = <span class="number">0.063</span>;  <span class="comment">// 电机轮胎半径（米）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 编码器初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EncoderInit</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    ftm_quad_init(ftm2);  <span class="comment">// 初始化 ftm2 为正交解码</span></span><br><span class="line"></span><br><span class="line">    port_init_NoAlt(B18, PULLUP);  <span class="comment">// 上拉</span></span><br><span class="line">    port_init_NoAlt(B19, PULLUP);  <span class="comment">// 上拉</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取编码器值</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">EncoderRead</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">float</span> data = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    data = ftm_quad_get(ftm2);  <span class="comment">// 获取编码器的脉冲值</span></span><br><span class="line">    ftm_quad_clean(ftm2);       <span class="comment">// 清除正交解码的脉冲值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算电机当前速度</span></span><br><span class="line"><span class="comment">// 输入值为运行该程序的间隔时间</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">GetMotorSpeed</span><span class="params">(uint16 run_time_ms)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">float</span> motor_speed = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    encoder.finalValue +=</span><br><span class="line">        <span class="number">0.25f</span> * (encoder.value - encoder.finalValue);  <span class="comment">// 一阶低通滤波</span></span><br><span class="line">    encoder.motorRounds =</span><br><span class="line">        (encoder.finalValue * run_time_ms) / unit_pulse;  <span class="comment">// 电机每 1s 转的圈数</span></span><br><span class="line">    encoder.motorDistance =</span><br><span class="line">        encoder.motorRounds * (<span class="number">2</span> * PI * motor_radius);  <span class="comment">// 电机运行长度 m</span></span><br><span class="line">    motor_speed = encoder.motorDistance / <span class="number">1</span>;            <span class="comment">// 电机速度 m/s</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> motor_speed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>计算出速度后，把该变量赋值给 PID 计算，算出需要输出给电机的占空比。PID 计算公式可以根据实际情况稍作修改优化。</p><p>代码示例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 电机 pid 程序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MotorPid</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">float</span> err, last_err, expect_pwm;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请根据实际情况修改 KP、KI 参数大小</span></span><br><span class="line">    motor_pid.kp = <span class="number">0.1</span>;</span><br><span class="line">    motor_pid.ki = <span class="number">0.2</span>;</span><br><span class="line"></span><br><span class="line">    err = motor.expectSpeed - encoder.motorSpeed;</span><br><span class="line">    expect_pwm += motor_pid.kp * (err - last_err) + motor_pid.ki * err;</span><br><span class="line">    last_err = err;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 电机占空比限幅</span></span><br><span class="line">    <span class="comment">// 请根据实际情况修改最大和最小 PWM 参数值</span></span><br><span class="line">    <span class="keyword">if</span> (expect_pwm &gt; <span class="number">260</span>) expect_pwm = <span class="number">260</span>;</span><br><span class="line">    <span class="keyword">if</span> (expect_pwm &lt;= <span class="number">0</span>) expect_pwm = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将值转换为正整数类型</span></span><br><span class="line">    motor.expectDutyRatio = (uint16)(expect_pwm);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PID 返回期望占空比赋值给电机控制函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 电机控制程序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MotorControl</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    MotorPid();</span><br><span class="line">    MotorPWM(<span class="number">0</span>, motor.expectDutyRatio);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就实现了简单的电机速度闭环控制。当然这只算是比较基础的闭环，若要实现复杂功能，还需进行大量优化。</p><p>如下为本文闭环全部代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************************</span></span><br><span class="line"><span class="comment"> * COPYRIGHT NOTICE</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2019, ZhangXiao</span></span><br><span class="line"><span class="comment"> * All rights reserved.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 本文件仅供参考交流，未经允许不得用于商业用途！</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * File           : motor.c</span></span><br><span class="line"><span class="comment"> * Author         : ZhangXiao</span></span><br><span class="line"><span class="comment"> * Blog           : zhangxiaocn.github.io</span></span><br><span class="line"><span class="comment"> * Version        : v1.0.1</span></span><br><span class="line"><span class="comment"> * Date           : 2019-08-06</span></span><br><span class="line"><span class="comment"> * Software       : IAR 7.70.1</span></span><br><span class="line"><span class="comment"> * Description    : 电机相关程序以及 PID、编码器程序等</span></span><br><span class="line"><span class="comment"> * note           : None</span></span><br><span class="line"><span class="comment">********************************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"motor.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"headfile.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> unit_pulse = <span class="number">1783.0</span>;   <span class="comment">// 小车轮胎旋转一周（360°）的脉冲</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">float</span> motor_radius = <span class="number">0.063</span>;  <span class="comment">// 电机轮胎半径（米）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 电机 pid 程序结构体参数</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">MOTOR_PID</span> <span class="title">motor_pid</span> = &#123;</span><span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编码器结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ENCODER</span> <span class="title">encoder</span> = &#123;</span><span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 电机结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">MOTOR</span> <span class="title">motor</span> = &#123;</span><span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 电机初始化</span></span><br><span class="line"><span class="comment">// FTM1_CH0_PIN 端口为 A12</span></span><br><span class="line"><span class="comment">// FTM1_CH1_PIN 端口为 A13</span></span><br><span class="line"><span class="comment">// 电机初始化频率默认为 10k，请根据实际情况更改频率大小</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MotorInit</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    ftm_pwm_init(ftm1, ftm_ch0, <span class="number">10</span> * <span class="number">1000</span>, <span class="number">0</span>);</span><br><span class="line">    ftm_pwm_init(ftm1, ftm_ch1, <span class="number">10</span> * <span class="number">1000</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 电机 PWM 控制</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MotorPWM</span><span class="params">(uint16 pwm_1, uint16 pwm_2)</span> </span>&#123;</span><br><span class="line">    ftm_pwm_duty(ftm1, ftm_ch0, pwm_1);  <span class="comment">// A12 端口</span></span><br><span class="line">    ftm_pwm_duty(ftm1, ftm_ch1, pwm_2);  <span class="comment">// A13 端口</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编码器初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EncoderInit</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    ftm_quad_init(ftm2);  <span class="comment">// 初始化 ftm2 为正交解码</span></span><br><span class="line"></span><br><span class="line">    port_init_NoAlt(B18, PULLUP);  <span class="comment">// 上拉</span></span><br><span class="line">    port_init_NoAlt(B19, PULLUP);  <span class="comment">// 上拉</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取编码器值</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">EncoderRead</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">float</span> data = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    data = ftm_quad_get(ftm2);  <span class="comment">// 获取编码器的脉冲值</span></span><br><span class="line">    ftm_quad_clean(ftm2);       <span class="comment">// 清除正交解码的脉冲值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算电机当前速度</span></span><br><span class="line"><span class="comment">// 输入值为运行该程序的间隔时间</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">GetMotorSpeed</span><span class="params">(uint16 run_time_ms)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">float</span> motor_speed = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    encoder.finalValue +=</span><br><span class="line">        <span class="number">0.25f</span> * (encoder.value - encoder.finalValue);  <span class="comment">// 一阶低通滤波</span></span><br><span class="line">    encoder.motorRounds =</span><br><span class="line">        (encoder.finalValue * run_time_ms) / unit_pulse;  <span class="comment">// 电机每 1s 转的圈数</span></span><br><span class="line">    encoder.motorDistance =</span><br><span class="line">        encoder.motorRounds * (<span class="number">2</span> * PI * motor_radius);  <span class="comment">// 电机运行长度 m</span></span><br><span class="line">    motor_speed = encoder.motorDistance / <span class="number">1</span>;            <span class="comment">// 电机速度 m/s</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> motor_speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算电机运行距离</span></span><br><span class="line"><span class="comment">// 输入值为运行该程序的间隔时间</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">GetMotorDistance</span><span class="params">(uint16 run_time_ms)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> encoder.motorDistance / run_time_ms;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编码器相关参数计算</span></span><br><span class="line"><span class="comment">// 输入值为运行该程序的间隔时间</span></span><br><span class="line"><span class="comment">// 程序建议每 4ms 运行一次，即 Encoder_Calculate(4);</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EncoderCalculate</span><span class="params">(uint16 run_time_ms)</span> </span>&#123;</span><br><span class="line">    uint16 run_time = <span class="number">1000</span> / run_time_ms;  <span class="comment">// 每秒钟运行此程序次数</span></span><br><span class="line"></span><br><span class="line">    encoder.value = EncoderRead();                 <span class="comment">// 读取编码器的值</span></span><br><span class="line">    encoder.motorSpeed = GetMotorSpeed(run_time);  <span class="comment">// 计算电机当前速度</span></span><br><span class="line">    motor.distance += GetMotorDistance(run_time);  <span class="comment">// 获取电机距离</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 电机 pid 程序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MotorPid</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">float</span> err, last_err, expect_pwm;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请根据实际情况修改 KP、KI 参数大小</span></span><br><span class="line">    motor_pid.kp = <span class="number">0.1</span>;</span><br><span class="line">    motor_pid.ki = <span class="number">0.2</span>;</span><br><span class="line"></span><br><span class="line">    err = motor.expectSpeed - encoder.motorSpeed;</span><br><span class="line">    expect_pwm += motor_pid.kp * (err - last_err) + motor_pid.ki * err;</span><br><span class="line">    last_err = err;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 电机占空比限幅</span></span><br><span class="line">    <span class="comment">// 请根据实际情况修改最大和最小 PWM 参数值</span></span><br><span class="line">    <span class="keyword">if</span> (expect_pwm &gt; <span class="number">260</span>) expect_pwm = <span class="number">260</span>;</span><br><span class="line">    <span class="keyword">if</span> (expect_pwm &lt;= <span class="number">0</span>) expect_pwm = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将值转换为正整数类型</span></span><br><span class="line">    motor.expectDutyRatio = (uint16)(expect_pwm);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 电机控制程序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MotorControl</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    MotorPid();</span><br><span class="line">    MotorPWM(<span class="number">0</span>, motor.expectDutyRatio);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;仅用于备份本人所写笔记，如有错误或不完善之处还请包含。转载请注明出处！&lt;/p&gt;
&lt;p&gt;程序使用逐飞科技 K60 库 V2.0.3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;电机速度闭环控制，简单来说就是将电机的输出量（速度）通过编码器反馈到控制端（单片机），然后对该输出量和设定的输入量进行比对，接着经过 PID 运算，将运算结果输入给电机的过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://zhangxiaocn.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="K60" scheme="https://zhangxiaocn.github.io/tags/K60/"/>
    
  </entry>
  
  <entry>
    <title>IAR 软件自用技巧</title>
    <link href="https://zhangxiaocn.github.io/2019/10/29/iar-setting/"/>
    <id>https://zhangxiaocn.github.io/2019/10/29/iar-setting/</id>
    <published>2019-10-29T13:35:35.000Z</published>
    <updated>2020-02-04T07:15:13.461Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-个性化配置"><a class="markdownIt-Anchor" href="#1-个性化配置"></a> 1、个性化配置</h2><h3 id="11-主题"><a class="markdownIt-Anchor" href="#11-主题"></a> 1.1、主题</h3><p>效果如下：<br><img src="/2019/10/29/iar-setting/iar.png" alt="IAR主题效果"></p><a id="more"></a><ol><li>点击 <code>Tools</code> -&gt; <code>options</code></li><li>选择 <code>Editor</code> -&gt; <code>Colors and Fonts</code></li><li>点击 <code>Font</code>，选择文字为 <code>Consolas</code> ，<code>Size</code> 选择 <code>三号</code>（按照自己的喜好设置大小）</li><li><code>Syntax Coloring</code> 一栏中设置如下：</li></ol><table><thead><tr><th style="text-align:center">type</th><th style="text-align:center">Color（颜色）</th><th style="text-align:center">Type Style（类型风格）</th><th style="text-align:center">Background Color（背景颜色）</th></tr></thead><tbody><tr><td style="text-align:center">Default</td><td style="text-align:center">White</td><td style="text-align:center">Normal</td><td style="text-align:center">Black</td></tr><tr><td style="text-align:center">C Keyword</td><td style="text-align:center">Lime</td><td style="text-align:center">Bold</td><td style="text-align:center">Black</td></tr><tr><td style="text-align:center">Strings</td><td style="text-align:center">Yellow</td><td style="text-align:center">Normal</td><td style="text-align:center">Black</td></tr><tr><td style="text-align:center">Char</td><td style="text-align:center">Aqua</td><td style="text-align:center">Normal</td><td style="text-align:center">Black</td></tr><tr><td style="text-align:center">Preprocessor</td><td style="text-align:center">Silver</td><td style="text-align:center">Normal</td><td style="text-align:center">Black</td></tr><tr><td style="text-align:center">Number</td><td style="text-align:center">Yellow</td><td style="text-align:center">Normal</td><td style="text-align:center">Black</td></tr><tr><td style="text-align:center">C++ Comment</td><td style="text-align:center">Aqua</td><td style="text-align:center">Italic</td><td style="text-align:center">Black</td></tr><tr><td style="text-align:center">comment</td><td style="text-align:center">Aqua</td><td style="text-align:center">Italic</td><td style="text-align:center">Black</td></tr><tr><td style="text-align:center">User Keyword</td><td style="text-align:center">Aqua</td><td style="text-align:center">Italic</td><td style="text-align:center">Black</td></tr><tr><td style="text-align:center">Compiler keyword</td><td style="text-align:center">Aqua</td><td style="text-align:center">Italic</td><td style="text-align:center">Black</td></tr><tr><td style="text-align:center">Asm keyword</td><td style="text-align:center">Fuchsia</td><td style="text-align:center">Bold</td><td style="text-align:center">Black</td></tr><tr><td style="text-align:center">Asm comment</td><td style="text-align:center">Lime</td><td style="text-align:center">Italic</td><td style="text-align:center">Black</td></tr></tbody></table><h3 id="12-设置代码缩进"><a class="markdownIt-Anchor" href="#12-设置代码缩进"></a> 1.2、设置代码缩进</h3><ol><li>点击 <code>Tools</code> -&gt; <code>options</code></li><li>点击 <code>Editor</code></li><li>将 <code>Tab size</code> 和 <code>Indent size</code> 后面的数字均改为 4（自定义即可）</li></ol><h3 id="13-关闭代码页面右边的竖线"><a class="markdownIt-Anchor" href="#13-关闭代码页面右边的竖线"></a> 1.3、关闭代码页面右边的竖线</h3><ol><li>点击 <code>Tools</code> -&gt; <code>options</code></li><li>点击 <code>Editor</code></li><li>将 <code>Show right margin</code> 前面的框取消勾选即可</li></ol><h3 id="14-修改默认字符格式为-utf-8"><a class="markdownIt-Anchor" href="#14-修改默认字符格式为-utf-8"></a> 1.4、修改默认字符格式为 UTF-8</h3><ol><li>点击 <code>Tools</code> -&gt; <code>options</code></li><li>点击 <code>Editor</code></li><li>将 <code>Default character</code> 下面框内的选项选为 <code>UTF-8</code></li></ol><h3 id="15-显示行号"><a class="markdownIt-Anchor" href="#15-显示行号"></a> 1.5、显示行号</h3><blockquote><p>显示行号在 IAR 老版本上可能会出现一些 BUG，是由于主题的缘故。</p></blockquote><ol><li>点击 <code>Tools</code> -&gt; <code>options</code></li><li>点击 <code>Editor</code></li><li>勾选 <code>Show line numbers</code> 选项</li></ol><h2 id="2-软件使用问题"><a class="markdownIt-Anchor" href="#2-软件使用问题"></a> 2、软件使用问题</h2><h3 id="21-解决函数无法跳转问题"><a class="markdownIt-Anchor" href="#21-解决函数无法跳转问题"></a> 2.1、解决函数无法跳转问题</h3><ol><li>点击 <code>Tools</code> -&gt; <code>options</code></li><li>选择 <code>Project</code></li><li>关闭 <code>Generate browse information</code> ，点击确定</li><li>再次进入设置并重复以上步骤，把刚才关闭的 <code>Generate browse information</code> 选项打开，点击确定</li><li>在软件左侧 <code>Workspace</code> 中，右键第一个文件，点击 <code>Rebuild All</code> ，等待右下角绿色进度条走完</li></ol><h3 id="22-解决软件左侧-workspace-消失问题"><a class="markdownIt-Anchor" href="#22-解决软件左侧-workspace-消失问题"></a> 2.2、解决软件左侧 Workspace 消失问题</h3><ol><li>点击 <code>View</code> -&gt; <code>Workspace</code>即可</li></ol><blockquote><p>软件缺少任何视图都可以在 <code>View</code> 栏中找到并打开</p></blockquote><h3 id="23-用山外调试助手烧录-k60-程序错误问题"><a class="markdownIt-Anchor" href="#23-用山外调试助手烧录-k60-程序错误问题"></a> 2.3、用山外调试助手烧录 K60 程序错误问题</h3><ol><li>在软件左侧 <code>Workspace</code> 中找到 <code>Files</code> 里的第一个文件并右击鼠标，选择 <code>Options</code></li><li>选择 <code>General Options</code> 中，把 <code>Device</code> 改为 <code>NXP MK60FX512xxx15</code></li><li>选择 <code>Debugger</code> ，在 <code>Setup</code> 中把 <code>Driver</code> 改为 <code>CMSIS DAP</code> ，在 <code>Download</code> 中把框中的文字改为 <code>$TOOLKIT_DIR$\config\flashloader\NXP\FlashK60Fxxx128K.board</code></li><li>选择 <code>CMSIS DAP</code> ，在 <code>interface</code> 栏中把 <code>JTAG</code> 改为 <code>SWD</code></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-个性化配置&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-个性化配置&quot;&gt;&lt;/a&gt; 1、个性化配置&lt;/h2&gt;
&lt;h3 id=&quot;11-主题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-主题&quot;&gt;&lt;/a&gt; 1.1、主题&lt;/h3&gt;
&lt;p&gt;效果如下：&lt;br&gt;
&lt;img src=&quot;/2019/10/29/iar-setting/iar.png&quot; alt=&quot;IAR主题效果&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://zhangxiaocn.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="IAR" scheme="https://zhangxiaocn.github.io/tags/IAR/"/>
    
      <category term="开发软件" scheme="https://zhangxiaocn.github.io/tags/%E5%BC%80%E5%8F%91%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>换电脑后快速恢复 hexo 博客</title>
    <link href="https://zhangxiaocn.github.io/2019/10/29/continue-blog/"/>
    <id>https://zhangxiaocn.github.io/2019/10/29/continue-blog/</id>
    <published>2019-10-29T13:23:54.000Z</published>
    <updated>2020-02-04T07:10:31.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a class="markdownIt-Anchor" href="#1-前言"></a> 1、前言</h2><p>使用 Github + hexo 搭建一个个人博客是需要花不少时间的，搭建好后如果有一天电脑突然坏了，或者重装了系统，那么我们怎么使用 hexo 再发布文章到个人博客呢？其实方法还是有的！</p><a id="more"></a><h2 id="2-操作方法"><a class="markdownIt-Anchor" href="#2-操作方法"></a> 2、操作方法</h2><h3 id="21-安装软件"><a class="markdownIt-Anchor" href="#21-安装软件"></a> 2.1、安装软件</h3><ul><li><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">安装 Git 客户端</a></li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">安装 node JS</a>：建议下载 LTS 长期支持版</li></ul><h3 id="22-在-github-官网添加新电脑的密钥"><a class="markdownIt-Anchor" href="#22-在-github-官网添加新电脑的密钥"></a> 2.2、在 github 官网添加新电脑的密钥</h3><p>首先输入（yourname 和 youremail 改为你的名字和邮箱）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>在本地创建 SSH Keys：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;@邮箱&quot;</span><br></pre></td></tr></table></figure><p>一路回车。</p><p>进入 <code>C:\Users\用户名.ssh</code>，打开 <code>id_rsa.pub</code> 文件，复制里面所有的内容，然后进入 github 页面，点击右上角的 <code>头像 &gt; Settings</code> ，在左侧找到 <code>SSH and GPG keys</code>。<br>点击 <code>New SSH key</code> ，<code>Title</code> 里的内容可以自定义，<code>Key</code> 里填入复制的内容。点击 <code>add key</code>。</p><p>返回窗口，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>若弹出 <code>Are you sure you want to continue connecting (yes/no)?</code> 时输入 <code>yes</code> 确认。</p><p>接着出现 <code>Hi xxx! You've successfully authenticated, but GitHub does not provide shell access.</code> 则操作成功。</p><h3 id="23-复制源文件到新电脑"><a class="markdownIt-Anchor" href="#23-复制源文件到新电脑"></a> 2.3、复制源文件到新电脑</h3><p>将你原来电脑上个人博客目录下必要文件拷到你的新电脑上（比如 <code>E:/Blog</code> 目录下），注意无需拷全部，只拷如下几个目录（当然你要拷全部也可以）：</p><ul><li>_config.yml</li><li>package.json</li><li>scaffolds/</li><li>source/</li><li>themes/</li></ul><h3 id="24-安装-hexo"><a class="markdownIt-Anchor" href="#24-安装-hexo"></a> 2.4、安装 Hexo</h3><p>在命令行输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>进入 <code>E:/Blog</code> 目录（新电脑的博客目录），输入下面指令安装相关模块：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save  // 文章部署到 git 的模块</span><br><span class="line">（下面为选择安装）</span><br><span class="line">npm install hexo-generator-feed --save  // 建立 RSS 订阅</span><br><span class="line">npm install hexo-generator-sitemap --save // 建立站点地图</span><br></pre></td></tr></table></figure><h3 id="25-测试是否成功"><a class="markdownIt-Anchor" href="#25-测试是否成功"></a> 2.5、测试是否成功</h3><p>命令行输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   // 清除缓存 网页正常情况下可以忽略此条命令</span><br><span class="line">hexo g       // 生成静态网页</span><br><span class="line">hexo s       // 启动服务器</span><br></pre></td></tr></table></figure><p>访问网址： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><p>若能正常显示则成功。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-前言&quot;&gt;&lt;/a&gt; 1、前言&lt;/h2&gt;
&lt;p&gt;使用 Github + hexo 搭建一个个人博客是需要花不少时间的，搭建好后如果有一天电脑突然坏了，或者重装了系统，那么我们怎么使用 hexo 再发布文章到个人博客呢？其实方法还是有的！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://zhangxiaocn.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT 主题的启用及设置</title>
    <link href="https://zhangxiaocn.github.io/2019/10/29/hexo-theme-next/"/>
    <id>https://zhangxiaocn.github.io/2019/10/29/hexo-theme-next/</id>
    <published>2019-10-29T13:05:08.000Z</published>
    <updated>2020-02-04T07:13:14.394Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-主题的启用"><a class="markdownIt-Anchor" href="#1-主题的启用"></a> 1、主题的启用</h2><h3 id="11-下载并启用"><a class="markdownIt-Anchor" href="#11-下载并启用"></a> 1.1、下载并启用</h3><p>进入命令行，下载 NexT 主题，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>修改站点配置文件 <code>_config.yml</code>，找到如下代码：</p><a id="more"></a><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br></pre></td></tr></table></figure><p>将 <code>landscape</code> 修改为 <code>next</code> 即可。</p><h3 id="12-修改语言"><a class="markdownIt-Anchor" href="#12-修改语言"></a> 1.2、修改语言</h3><p>打开站点配置文件，搜索 <code>language</code>，找到如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">author:</span></span><br><span class="line"><span class="attr">language:</span></span><br><span class="line"><span class="attr">timezone:</span></span><br></pre></td></tr></table></figure><p>在 <code>language</code> 后面输入 <code>zh-CN</code>。</p><p>注意：冒号后面必须有一个空格。</p><h2 id="2-主题的设置"><a class="markdownIt-Anchor" href="#2-主题的设置"></a> 2、主题的设置</h2><h3 id="21-新建标签及分类界面"><a class="markdownIt-Anchor" href="#21-新建标签及分类界面"></a> 2.1、新建标签及分类界面</h3><p>打开 <code>主题配置文件</code>，搜索 <code>menu</code>，找到如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line">  <span class="comment">#tags: /tags/ || tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || th</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><p>把 <code>tags</code> 和 <code>categories</code> 前面的 <code>#</code> 删除，进入命令行，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo n page tags</span><br><span class="line">hexo n page categories</span><br></pre></td></tr></table></figure><p>进入博客主目录 <code>Hexo/source</code>，找到 <code>tags</code> 和 <code>categories</code> 文件夹，分别进入并修改文件夹内的文件。例如，先进入 <code>tags</code> 文件夹，打开 <code>index.md</code> 文件，在 <code>date</code> 下一行输入：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type: "tags"</span><br></pre></td></tr></table></figure><p>修改 <code>categories</code> 文件夹下的文件时，只需把上面的 <code>tags</code> 代码改成 <code>categories</code> 即可。</p><h3 id="22-切换主题"><a class="markdownIt-Anchor" href="#22-切换主题"></a> 2.2、切换主题</h3><p>next 主题自带四种样式。</p><p>在主题配置文件 <code>/next/_config.yml</code> 中查找：<code>scheme</code>，找到如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure><p>选择你喜欢的一种样式，去掉前面的 <code>#</code>，其他主题前加上 <code>#</code> 即可。</p><h3 id="23-隐藏网页底部-powered-by-hexo-强力驱动"><a class="markdownIt-Anchor" href="#23-隐藏网页底部-powered-by-hexo-强力驱动"></a> 2.3、隐藏网页底部 powered By Hexo / 强力驱动</h3><p>打开 <code>themes/next/layout/_partials/footer.swig</code></p><p>找到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.footer.powered.enable %&#125;</span><br><span class="line">  &lt;div class=&quot;powered-by&quot;&gt;&#123;#</span><br><span class="line">  #&#125;&#123;&#123; __(&apos;footer.powered&apos;, &apos;&lt;a class=&quot;theme-link&quot; target=&quot;_blank&quot;&apos; + nofollow + &apos; href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt;&apos;) &#125;&#125;&#123;% if theme.footer.powered.version %&#125; v&#123;&#123; hexo_env(&apos;version&apos;) &#125;&#125;&#123;% endif %&#125;&#123;#</span><br><span class="line">#&#125;&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if theme.footer.powered.enable and theme.footer.theme.enable %&#125;</span><br><span class="line">  &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if theme.footer.theme.enable %&#125;</span><br><span class="line">  &lt;div class=&quot;theme-info&quot;&gt;&#123;#</span><br><span class="line">  #&#125;&#123;&#123; __(&apos;footer.theme&apos;) &#125;&#125; – &#123;#</span><br><span class="line">  #&#125;&lt;a class=&quot;theme-link&quot; target=&quot;_blank&quot;&#123;&#123; nofollow &#125;&#125; href=&quot;https://theme-next.org&quot;&gt;&#123;#</span><br><span class="line">    #&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;#</span><br><span class="line">  #&#125;&lt;/a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; version &#125;&#125;&#123;% endif %&#125;&#123;#</span><br><span class="line">#&#125;&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>把这段代码首尾分别加上：<code>&lt;!--</code> 和 <code>--&gt;</code>，或者直接删除。</p><h3 id="24-文章添加阴影"><a class="markdownIt-Anchor" href="#24-文章添加阴影"></a> 2.4、文章添加阴影</h3><p>打开 <code>/themes/next/source/css/_custom/custom.styl</code>，添加：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">   <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="25-浏览页面显示当前浏览进度"><a class="markdownIt-Anchor" href="#25-浏览页面显示当前浏览进度"></a> 2.5、浏览页面显示当前浏览进度</h3><p>打开 <code>themes/next/_config.yml</code>，搜索关键字 <code>scrollpercent</code>，把 <code>false</code> 改为 <code>true</code>。</p><h3 id="26-local-search本地搜索"><a class="markdownIt-Anchor" href="#26-local-search本地搜索"></a> 2.6、Local Search本地搜索</h3><p>在站点的根目录下执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>编辑站点配置文件，新增以下内容到任意位置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure><p>编辑主题配置文件，启用本地搜索功能：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="27-设置个人头像"><a class="markdownIt-Anchor" href="#27-设置个人头像"></a> 2.7、设置个人头像</h3><p>打开 <code>主题配置文件</code>，找到 <code>Sidebar Avatar</code> 字段：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># in theme directory(source/images): /images/avatar.gif</span></span><br><span class="line">  <span class="comment"># in site  directory(source/uploads): /uploads/avatar.gif</span></span><br><span class="line">  <span class="comment"># You can also use other linking images.</span></span><br><span class="line"><span class="attr">  url:</span> <span class="comment">#/images/avatar.jpg</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be dispalyed in circle.</span></span><br><span class="line"><span class="attr">  rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.</span></span><br><span class="line"><span class="attr">  opacity:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be rotated with the cursor.</span></span><br><span class="line"><span class="attr">  rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>将 <code>url</code> 后面的 <code>#</code> 删掉，然后把你的头像命名为 <code>avatar.jpg</code> 放入 <code>themes/next/source/images</code> 中</p><blockquote><p><code>rounded</code> ：设置头像为圆形</p><p><code>opacity</code> ：设置头像的不透明度</p><p><code>rotated</code> ：设置头像可旋转</p></blockquote><h3 id="28-设置站点建立时间"><a class="markdownIt-Anchor" href="#28-设置站点建立时间"></a> 2.8、设置站点建立时间</h3><p>在 <code>主题配置文件</code> 中，搜索：<code>since</code>，修改 <code>since</code> 后面的值即可，例如：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">since:</span> <span class="number">2013</span></span><br></pre></td></tr></table></figure><h3 id="29-设置网站图标"><a class="markdownIt-Anchor" href="#29-设置网站图标"></a> 2.9、设置网站图标</h3><p>在 <a href="http://www.easyicon.net/" target="_blank" rel="noopener">EasyIcon</a> 中找一张（32*32）的 ico 图标，或者去别的网站下载或者制作，并将图标名称改为<code>favicon.ico</code>，然后把图标放在 <code>/themes/next/source/images</code> 里，并且修改主题配置文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Put your favicon.ico into `hexo-site/source/` directory.</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></span><br></pre></td></tr></table></figure><h3 id="210-修改文章底部的-号的标签"><a class="markdownIt-Anchor" href="#210-修改文章底部的-号的标签"></a> 2.10、修改文章底部的 # 号的标签</h3><p>修改模板 <code>/themes/next/layout/_macro/post.swig</code></p><p>搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 <code>#</code> 换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><h3 id="211-网站底部字数统计"><a class="markdownIt-Anchor" href="#211-网站底部字数统计"></a> 2.11、网站底部字数统计</h3><p>切换到根目录下，运行如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>然后在 <code>/themes/next/layout/_partials/footer.swig</code> 文件尾部加上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;span class=&quot;post-count&quot;&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="212-添加点击爱心效果"><a class="markdownIt-Anchor" href="#212-添加点击爱心效果"></a> 2.12、添加点击爱心效果</h3><p>在 <code>/themes/next/source/js/src</code> 下新建文件 <code>clicklove.js</code>，接着把如下代码复制粘贴到 <code>clicklove.js</code> 文件中，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><p>在 <code>\themes\next\layout\_layout.swig</code> 文件末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="213-点击爆炸效果"><a class="markdownIt-Anchor" href="#213-点击爆炸效果"></a> 2.13、点击爆炸效果</h3><p>方法和那个点击出现爱心效果是差不多的，首先在 <code>themes/next/source/js/src</code> 里面建一个叫 <code>fireworks.js</code> 的文件，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure><p>打开 <code>themes/next/layout/_layout.swig</code>，在 <code>&lt;/body&gt;</code> 上面写下如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.fireworks %&#125;</span><br><span class="line">   &lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; </span><br><span class="line">   &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line">   &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/fireworks.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>打开主题配置文件，在里面最后写下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fireworks</span></span><br><span class="line"><span class="attr">fireworks:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="214-动态背景"><a class="markdownIt-Anchor" href="#214-动态背景"></a> 2.14、动态背景</h3><h4 id="2141-next-主题在-511-以上"><a class="markdownIt-Anchor" href="#2141-next-主题在-511-以上"></a> 2.14.1、next 主题在 5.1.1 以上</h4><p>打开 <code>next/layout/_layout.swig</code>文件</p><p>在 <code>&lt;/body&gt;</code> 之前添加如下代码，不要放在 <code>&lt;/head&gt;</code> 的后面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span></span></span><br><span class="line"><span class="tag"><span class="attr">color</span>=<span class="string">"0,0,255"</span> <span class="attr">opacity</span>=<span class="string">'0.7'</span> <span class="attr">zIndex</span>=<span class="string">"-2"</span> <span class="attr">count</span>=<span class="string">"99"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>打开主题配置文件 <code>/next/_config.yml</code></p><p>搜素 <code>canvas_nest</code>，将 <code>false</code> 改为 <code>true</code> 即可。</p><h4 id="2142-next-主题在-511-以下"><a class="markdownIt-Anchor" href="#2142-next-主题在-511-以下"></a> 2.14.2、next 主题在 5.1.1 以下</h4><p>打开 <code>next/layout/_layout.swig</code> 文件</p><p>在 <code>&lt;/body&gt;</code> 之前添加如下代码，不要放在 <code>&lt;/head&gt;</code> 的后面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span></span></span><br><span class="line"><span class="tag"><span class="attr">color</span>=<span class="string">"0,0,255"</span> <span class="attr">opacity</span>=<span class="string">'0.7'</span> <span class="attr">zIndex</span>=<span class="string">"-2"</span> <span class="attr">count</span>=<span class="string">"99"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>打开主题配置文件 <code>/next/_config.yml</code></p><p>在里面添加如下代码：(可以放在最后面)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># background settings</span></span><br><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># add canvas-nest effect</span></span><br><span class="line"><span class="comment"># see detail from https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="2143-配置项说明"><a class="markdownIt-Anchor" href="#2143-配置项说明"></a> 2.14.3、配置项说明</h4><ul><li><code>color</code>：线条颜色, 默认: ‘0,0,0’；三个数字分别为 (R,G,B)</li><li><code>opacity</code>: 线条透明度（0~1）, 默认: 0.5</li><li><code>count</code>: 线条的总数量, 默认: 150</li><li><code>zIndex</code>: 背景的 z-index 属性，css 属性用于控制所在层的位置, 默认: -1</li></ul><h3 id="215-修改文章不透明度"><a class="markdownIt-Anchor" href="#215-修改文章不透明度"></a> 2.15、修改文章不透明度</h3><p>设置了动态背景后，动态线条会干扰到文章的阅读，所以就需要调整文章背景的不透明度了。</p><p>修改 <code>themes\next\source\css\ _custom\custom.styl</code> 文件，在后面添加如下代码：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main-inner</span> &#123; </span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">60px</span> <span class="number">60px</span> <span class="number">60px</span> <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2151-配置项说明"><a class="markdownIt-Anchor" href="#2151-配置项说明"></a> 2.15.1、配置项说明</h4><p><code>background</code>: #fff; 白色<br><code>opacity</code>: 0.8; 不透明度</p><h3 id="216-自动更换背景图片"><a class="markdownIt-Anchor" href="#216-自动更换背景图片"></a> 2.16、自动更换背景图片</h3><p>和修改动态背景类似。</p><p>自动更换背景是修改添加背景的 css 样式来实现。图片来源是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://source.unsplash.com/</span><br></pre></td></tr></table></figure><blockquote><p>这个网站不仅免费提供了很多高清美图，而且还提供 api 接口调用，非常良心。这里实现的原理也是调用了这个网站的接口。</p></blockquote><p>修改 <code>themes\next\source\css\ _custom\custom.styl</code> 文件，添加以下代码：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    background:url(https://source.unsplash.com/random/1600x900);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如果不喜欢这个网址提供的图片做背景，可以修改<code>url()</code>里面的路径。<code>repeat</code>、<code>attachment</code>、<code>position</code>就是调整图片的位置、不重复出现、不滚动等等。</p></blockquote><h3 id="217-静态背景"><a class="markdownIt-Anchor" href="#217-静态背景"></a> 2.17、静态背景</h3><p>打开博客根目录 <code>/themes/next/source/css/_custom/custom.styl</code> 文件，编辑如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Custom styles.</span></span><br><span class="line"><span class="selector-tag">body</span> &#123; </span><br><span class="line">    background-image: url(/images/background.png);</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed; <span class="comment">// 不随屏幕滚动而滚动</span></span><br><span class="line">    <span class="attribute">background-repeat</span>: repeat; <span class="comment">// 如果背景图不够屏幕大小则重复铺，改为no-repeat则表示不重复铺</span></span><br><span class="line">    <span class="attribute">background-size</span>: contain; <span class="comment">// 等比例铺满屏幕</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后将背景图命名为 <code>background.png</code> 并放入主题根目录 <code>source/images</code> 下。</p><h3 id="218-修改主题颜色"><a class="markdownIt-Anchor" href="#218-修改主题颜色"></a> 2.18、修改主题颜色</h3><p>找到 <code>博客根目录\themes\next\source\css\_custom\custom.styl</code> 并打开</p><p>如下列出了蓝色主题的参考代码，可以直接使用：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文章内链接文本样式 </span></span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> a&#123; </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#0593d3</span>; </span><br><span class="line">    <span class="attribute">border-bottom</span>: none; </span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>; </span><br><span class="line">    &amp;:hover &#123; </span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#fc6423</span>; </span><br><span class="line">        <span class="attribute">border-bottom</span>: none; </span><br><span class="line">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fc6423</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改选中字符的颜色</span></span><br><span class="line"><span class="comment">/* webkit, opera, IE9 */</span></span><br><span class="line">::selection &#123; </span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* firefox */</span></span><br><span class="line">::-moz-selection &#123; </span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改网站头部颜色</span></span><br><span class="line"><span class="selector-class">.headband</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-subtitle</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改按键（button）样式</span></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#49b1f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按键（button）点击时样式</span></span><br><span class="line"><span class="selector-class">.btn</span>:hover &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标移动至文章标题时的效果</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span>::before &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: scaleX(<span class="number">0</span>);</span><br><span class="line">    -moz-<span class="attribute">transform</span>: scaleX(<span class="number">0</span>);</span><br><span class="line">    -ms-<span class="attribute">transform</span>: scaleX(<span class="number">0</span>);</span><br><span class="line">    -o-<span class="attribute">transform</span>: scaleX(<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">transform</span>: scaleX(<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">0.2s</span>;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: ease-in-out;</span><br><span class="line">    <span class="attribute">transition-delay</span>: <span class="number">0s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-主题的启用&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-主题的启用&quot;&gt;&lt;/a&gt; 1、主题的启用&lt;/h2&gt;
&lt;h3 id=&quot;11-下载并启用&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-下载并启用&quot;&gt;&lt;/a&gt; 1.1、下载并启用&lt;/h3&gt;
&lt;p&gt;进入命令行，下载 NexT 主题，输入：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/theme-next/hexo-theme-next themes/next&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改站点配置文件 &lt;code&gt;_config.yml&lt;/code&gt;，找到如下代码：&lt;/p&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://zhangxiaocn.github.io/tags/Hexo/"/>
    
      <category term="美化" scheme="https://zhangxiaocn.github.io/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>我初学 C 的代码保留</title>
    <link href="https://zhangxiaocn.github.io/2019/10/27/my-c-memory/"/>
    <id>https://zhangxiaocn.github.io/2019/10/27/my-c-memory/</id>
    <published>2019-10-27T13:23:55.000Z</published>
    <updated>2020-02-04T07:16:28.228Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容为本人初学 C 的时候所写的部分代码，有些程序现在看起来写的真的很烂哈哈，但是舍不得删除呐，最后还是将它们保留了下来。。。这算不算是松鼠症？？</p><h2 id="求和问题"><a class="markdownIt-Anchor" href="#求和问题"></a> 求和问题</h2><p>求 1 + 2! + 3! + … + 20! 的和：</p><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">float</span> a = <span class="number">1</span>, b = <span class="number">0</span>, i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++) &#123;</span><br><span class="line">        a = a * i;</span><br><span class="line">        b = b + a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 + 2! + 3! ... + 20! = %.0f\n"</span>, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求 1 + 2 + … + 100 的和：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b = <span class="number">0</span>;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">loop:</span><br><span class="line">    <span class="keyword">if</span> (a &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">        b = b + a;</span><br><span class="line">        a++;</span><br><span class="line">        <span class="keyword">goto</span> loop;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 + 2 + ... + 100 的和为：%d\n"</span>, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13 … 求出这个数列的前 20 项之和：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">float</span> a = <span class="number">2</span>, b = <span class="number">1</span>, c = <span class="number">0</span>, d;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++) &#123;</span><br><span class="line">        c = a / b + c;</span><br><span class="line">        d = a;</span><br><span class="line">        a = a + b;</span><br><span class="line">        b = d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"这个数列的前20项之和为：%f\n"</span>, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求序列 S = 2/1 + 3/2 + 5/3 + 8/5 + 13/8 + …… 前 n 项和：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">float</span> S = <span class="number">0</span>, s1 = <span class="number">2</span>, s2 = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> a, n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入 n 的值："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">0</span>; a &lt; n; a++) &#123;</span><br><span class="line">        S = (s1 / s2) + S;</span><br><span class="line">        s2 = s1;</span><br><span class="line">        s1 = (<span class="number">2</span> * s1) - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"S = 2/1 + 3/2 + 5/3 + 8/5 + 13/8 + …… 前 n 项和为：%f"</span>, S);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求 1 到 100 之间的奇数之和，偶数之和：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">2</span> != <span class="number">0</span>)</span><br><span class="line">            sum1 += i;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            sum2 += i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1~100 的奇数和为：%d\n"</span>, sum1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1~100 的偶数和为：%d\n"</span>, sum2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="阶乘问题"><a class="markdownIt-Anchor" href="#阶乘问题"></a> 阶乘问题</h2><p>求 n 的阶乘 n!：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">factorial</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>, s = <span class="number">1</span>, n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要求阶乘的数字："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        s = s * i;</span><br><span class="line">        i++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (i &lt;= n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d! = %d\n"</span>, n, s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">factorial</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, s, n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要求阶乘的数字："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>, s = <span class="number">1</span>; i &lt;= n; i++) s = s * i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d! = %d\n"</span>, n, s);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">factorial</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>, s = <span class="number">1</span>, n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要求阶乘的数字："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= n) &#123;  <span class="comment">// 一直算到 i &gt; n 时循环结束，输出</span></span><br><span class="line">        s = s * i;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d! = %d\n"</span>, n, s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="素数问题"><a class="markdownIt-Anchor" href="#素数问题"></a> 素数问题</h2><p>判断输入的数字是否为素数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime_number</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>, i;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"输入一个整数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">            a++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d 是素数\n"</span>, n);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d 不是素数\n"</span>, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求出 100~200 之间的所有素数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime_number</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m, i, a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"100~200 之间的所有素数为："</span>);</span><br><span class="line">    <span class="keyword">for</span> (m = <span class="number">101</span>; m &lt;= <span class="number">200</span>; m++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (m % i == <span class="number">0</span>) a++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%-4d"</span>, m);</span><br><span class="line">            b++;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            a = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n这些素数一共有 %d 个"</span>, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求 100~300 之间所有素数之和：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime_number</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m, i, a = <span class="number">0</span>, b = <span class="number">0</span>, c, d = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"100 ~ 300之间所有素数之和为："</span>);</span><br><span class="line">    <span class="keyword">for</span> (m = <span class="number">101</span>; m &lt;= <span class="number">300</span>; m++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (m % i == <span class="number">0</span>) a++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">0</span>) &#123;</span><br><span class="line">            c = m;</span><br><span class="line">            d = c + d;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            a = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写一个程序，从键盘输入一个整数，输出大于且紧随该整数的素数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime_number</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>, i, n, m;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"输入一个整数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    m = n + <span class="number">1</span>;</span><br><span class="line">A:</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (m % i == <span class="number">0</span>) &#123;</span><br><span class="line">            a++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"大于且最接近输入的数的素数是：%d\n"</span>, m);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        m = m + <span class="number">1</span>;</span><br><span class="line">        a = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">goto</span> A;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime_number</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, m, c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        m++;</span><br><span class="line">        c = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (m % i == <span class="number">0</span>) &#123;</span><br><span class="line">                c = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="排序问题"><a class="markdownIt-Anchor" href="#排序问题"></a> 排序问题</h2><p>从键盘输入 10 个整数，编程求出其中的最大值和最小值，并输出结果：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sort</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max, min, m[<span class="number">10</span>], i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输出10个数："</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m[i]);  <span class="comment">// 输入 10 个数字，保存到 m[i] 中</span></span><br><span class="line">    max = min = m[<span class="number">0</span>];        <span class="comment">// 定义最值</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (max &lt; m[i])  <span class="comment">// m[i] 依次与最值比较，得出最大值 max</span></span><br><span class="line">            max = m[i];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (min &gt; m[i])  <span class="comment">// m[i] 依次与最值比较，得出最小值 min</span></span><br><span class="line">            min = m[i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"最大值 = %d\n最小值 = %d"</span>, max, min);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将输入的五个整数按照从小到大顺序排列：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sort</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">int</span> i, j, t;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入5个数："</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)          <span class="comment">// 进行 4 次循环，实现 4 趟比较</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span> - j; i++)  <span class="comment">// 在每一趟比较中进行 4－1 次比较</span></span><br><span class="line">            <span class="keyword">if</span> (a[i] &gt; a[i + <span class="number">1</span>])     <span class="comment">// 相邻两个数比较</span></span><br><span class="line">            &#123;</span><br><span class="line">                t = a[i];</span><br><span class="line">                a[i] = a[i + <span class="number">1</span>];</span><br><span class="line">                a[i + <span class="number">1</span>] = t;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"排序后的数据为："</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出图像"><a class="markdownIt-Anchor" href="#输出图像"></a> 输出图像</h2><p>输出一个菱形：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">diamond</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c;</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">0</span>; a &lt; <span class="number">4</span>; a++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (b = <span class="number">0</span>; b &lt;= <span class="number">2</span> - a; b++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span> (c = <span class="number">0</span>; c &lt;= <span class="number">2</span> * a; c++) <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">0</span>; a &lt;= <span class="number">2</span>; a++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (b = <span class="number">0</span>; b &lt;= a; b++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span> (c = <span class="number">0</span>; c &lt;= <span class="number">4</span> - <span class="number">2</span> * a; c++) <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出一个行数可调的菱形：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">diamond</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, i, j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);  <span class="comment">// 输入一个 n，则输出 2*n+1 行</span></span><br><span class="line">    <span class="keyword">for</span> (i = -n; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="built_in">abs</span>(i); j++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * n + <span class="number">1</span> - <span class="number">2</span> * <span class="built_in">abs</span>(i); j++) <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出空心菱形：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">diamond</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, k, line, m;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入行数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;line);</span><br><span class="line">    m = (line + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; m - i; k++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span> * i - <span class="number">3</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = m - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; m - i; k++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span> * i - <span class="number">3</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出一个正方形中的空心菱形（行数可控）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">diamond</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, i, j;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入这个空心菱形的行数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = -(n / <span class="number">2</span>); i &lt;= n / <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == -(n / <span class="number">2</span>) || i == (n / <span class="number">2</span>)) &#123;  <span class="comment">//第一行和最后一行</span></span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="built_in">abs</span>(i) + <span class="number">1</span>; j++) <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= (n - <span class="number">2</span> * (<span class="built_in">abs</span>(i) + <span class="number">1</span>)); j++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="built_in">abs</span>(i) + <span class="number">1</span>; j++) <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文字玩法"><a class="markdownIt-Anchor" href="#文字玩法"></a> 文字玩法</h2><p>输入一个 5 位数，判断它是不是回文数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">palindrome</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;           <span class="comment">// 带输入的数</span></span><br><span class="line">    <span class="keyword">int</span> g, w, s, q;  <span class="comment">// 分别表示的是个位、万位、十位、千位</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入一个 5 位数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">99999</span> || x &lt; <span class="number">10000</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"您输入的 %d 不是一个 5 位数\n"</span>, x);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        g = x % <span class="number">10</span>;</span><br><span class="line">        w = x / <span class="number">10000</span>;</span><br><span class="line">        s = (x % <span class="number">100</span>) / <span class="number">10</span>;</span><br><span class="line">        q = (x % <span class="number">10000</span>) / <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (g == w &amp;&amp; s == q)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d 是一个回文数\n"</span>, x);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d 不是一个回文数\n"</span>, x);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出 9×9 口诀表：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">table</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, result;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">            result = i * j;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d*%d=%-3d"</span>, i, j, result);  <span class="comment">// -3d 表示左对齐，占 3 位</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);  <span class="comment">// 每一行后换行</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为本人初学 C 的时候所写的部分代码，有些程序现在看起来写的真的很烂哈哈，但是舍不得删除呐，最后还是将它们保留了下来。。。这算不算是松鼠症？？&lt;/p&gt;
&lt;h2 id=&quot;求和问题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#求和问题&quot;&gt;&lt;/a&gt; 求和问题&lt;/h2&gt;
&lt;p&gt;求 1 + 2! + 3! + … + 20! 的和：&lt;/p&gt;
    
    </summary>
    
    
      <category term="C" scheme="https://zhangxiaocn.github.io/categories/C/"/>
    
    
      <category term="回忆" scheme="https://zhangxiaocn.github.io/tags/%E5%9B%9E%E5%BF%86/"/>
    
      <category term="C" scheme="https://zhangxiaocn.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Hexo yilia 主题的启用及设置</title>
    <link href="https://zhangxiaocn.github.io/2019/10/25/hexo-theme-yilia/"/>
    <id>https://zhangxiaocn.github.io/2019/10/25/hexo-theme-yilia/</id>
    <published>2019-10-25T13:57:17.000Z</published>
    <updated>2020-02-04T07:14:38.970Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>yilia 主题作者已经不维护了，还有好多坑没有填完，在此记录一下</p><p>主题地址：<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia</a></p><p>本文章同步更新地址：<a href="https://www.cnblogs.com/zhangxiaochn/p/Hexo_Theme_Yilia.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhangxiaochn/p/Hexo_Theme_Yilia.html</a></p></blockquote><a id="more"></a><h2 id="1-主题的启用"><a class="markdownIt-Anchor" href="#1-主题的启用"></a> 1、主题的启用</h2><h3 id="11-下载并启用"><a class="markdownIt-Anchor" href="#11-下载并启用"></a> 1.1、下载并启用</h3><p>进入命令行，下载 yilia 主题，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><p>修改站点配置文件 <code>_config.yml</code>，找到如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br></pre></td></tr></table></figure><p>将 <code>landscape</code> 修改为 <code>yilia</code> 即可。</p><h3 id="12-修改语言"><a class="markdownIt-Anchor" href="#12-修改语言"></a> 1.2、修改语言</h3><p>打开站点配置文件，搜索<code>language</code>，找到如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">author:</span></span><br><span class="line"><span class="attr">language:</span></span><br><span class="line"><span class="attr">timezone:</span></span><br></pre></td></tr></table></figure><p>在 <code>language</code> 后面输入 <code>zh-CN</code>。</p><p>注意：冒号后面必须有一个空格。</p><h2 id="2-主题相关设置"><a class="markdownIt-Anchor" href="#2-主题相关设置"></a> 2、主题相关设置</h2><h3 id="21-所有文章按钮的安装"><a class="markdownIt-Anchor" href="#21-所有文章按钮的安装"></a> 2.1、“所有文章”按钮的安装</h3><p>首先使用命令 <code>node -v</code> 检查版本是不是大于 6.2</p><p>在博客根目录执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-generator-json-content --save</span><br></pre></td></tr></table></figure><p>在博客配置文件 <code>_config.yml</code> 最下面加上：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jsonContent:</span></span><br><span class="line"><span class="attr">  meta:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  pages:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  posts:</span></span><br><span class="line"><span class="attr">    title:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    date:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    path:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    text:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    raw:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    content:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    slug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    updated:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    permalink:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    excerpt:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    categories:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    tags:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="22-添加图片资源文件夹"><a class="markdownIt-Anchor" href="#22-添加图片资源文件夹"></a> 2.2、添加图片资源文件夹</h3><p>路径为 <code>themes/yilia/source/</code> 下，可添加一个 <code>assets</code> 文件夹，里面存放图片资源即可</p><p>需要添加头像或者微信/支付宝二维码图片，直接引用即可。路径为 <code>themes/yilia/_config.yml</code> 。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 微信二维码图片</span></span><br><span class="line"><span class="attr">weixin:</span>  <span class="string">/assets/img/wechat.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 头像图片</span></span><br><span class="line"><span class="attr">avatar:</span>  <span class="string">/assets/img/head.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网页图标</span></span><br><span class="line"><span class="attr">favicon:</span>  <span class="string">/assets/img/head.jpg</span></span><br></pre></td></tr></table></figure><h3 id="23-文章显示摘要"><a class="markdownIt-Anchor" href="#23-文章显示摘要"></a> 2.3、文章显示摘要</h3><p>在你 MD 格式文章正文插入 <code>&lt;!-- more --&gt;</code> 即可，只会显示它之前的，此后的就不显示，点击文章标题，全文阅读才可看到，同时注释掉文件 <code>themes/yilia/_config.yml</code> 里的：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># excerpt_link: more</span></span><br></pre></td></tr></table></figure><h3 id="24-文章显示目录"><a class="markdownIt-Anchor" href="#24-文章显示目录"></a> 2.4、文章显示目录</h3><p>增加文章目录 TOC ( table of content )，方便阅读文章，在 <code>themes/yilia/_config.yml</code> 中进行配置 <code>toc: 2</code> 即可，它会将你 Markdown 语法的标题，生成目录，目录查看在右下角。</p><h3 id="25-增加归档菜单"><a class="markdownIt-Anchor" href="#25-增加归档菜单"></a> 2.5、增加归档菜单</h3><p>修改 <code>themes/yilia/_config.yml</code> 内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">    <span class="string">主页:</span>  <span class="string">/</span></span><br><span class="line">    <span class="string">归档:</span>  <span class="string">/archives/index.html</span></span><br></pre></td></tr></table></figure><h3 id="26-修复失效的微信分享二维码"><a class="markdownIt-Anchor" href="#26-修复失效的微信分享二维码"></a> 2.6、修复失效的微信分享二维码</h3><p>打开 <code>themes\yilia\layout\_partial\post\share.ejs</code> 文件</p><p>把第49行中的 <code>//pan.baidu.com/share/qrcode?url=</code> 修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//api.qrserver.com/v1/create-qr-code/?size=150x150&amp;data=</span><br></pre></td></tr></table></figure><h3 id="27-更改左侧昵称字体"><a class="markdownIt-Anchor" href="#27-更改左侧昵称字体"></a> 2.7、更改左侧昵称字体</h3><p>在 <code>themes\yilia\source\main.0cf68a.css</code> 文件里面修改，找到 <code>header-author</code> ，修改里面的 <code>font-family</code> ，改成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-family</span><span class="selector-pseudo">:"Times</span> <span class="selector-tag">New</span> <span class="selector-tag">Roman</span>",<span class="selector-tag">Georgia</span>,<span class="selector-tag">Serif</span></span><br></pre></td></tr></table></figure><h3 id="28-左侧显示总文章数"><a class="markdownIt-Anchor" href="#28-左侧显示总文章数"></a> 2.8、左侧显示总文章数</h3><p>打开 <code>themes\yilia\layout\_partial\left-col.ejs</code> 文件</p><p>在：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav class=&quot;header-menu&quot;&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">    &lt;% for (var i in theme.menu)&#123; %&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;&gt;&lt;%= i %&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;%&#125;%&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><p>后面添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav&gt;</span><br><span class="line">    总文章数 &lt;%=site.posts.length%&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><h3 id="29-添加字数统计"><a class="markdownIt-Anchor" href="#29-添加字数统计"></a> 2.9、添加字数统计</h3><p>首先安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a></p><p>使用如下命令安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><blockquote><p>Node 版本7.6.0之前,请安装 2.x 版本 (Node.js v7.6.0 and previous)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount@2 --save</span><br></pre></td></tr></table></figure><p>然后在 <code>themes\yilia\layout\_partial\left-col.ejs</code>中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav&gt;</span><br><span class="line">总字数 &lt;span class=&quot;post-count&quot;&gt;&lt;%= totalcount(site, &apos;0,0.0a&apos;) %&gt;&lt;/span&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><p>添加位置在如下代码的下面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav&gt;</span><br><span class="line">    总文章数 &lt;%=site.posts.length%&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><p>编辑 <code>themes\yilia\layout\_partial\article.ejs</code></p><p>在header下面加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=&quot;center&quot; class=&quot;post-count&quot;&gt;</span><br><span class="line">    字数：&lt;%= wordcount(post.content) %&gt;字 | 预计阅读时长：&lt;%= min2read(post.content) %&gt;分钟</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>即可显示单篇字数和预计阅读时长。</p><h3 id="210-添加来必力livere评论系统"><a class="markdownIt-Anchor" href="#210-添加来必力livere评论系统"></a> 2.10、添加来必力(livere)评论系统</h3><p>yilia 默认带了几个系统，但是没有来必力，所以可以自己加</p><p>首先是去注册来必力，然后获取到自己的 <code>id</code></p><p>新建 <code>themes\yilia\layout\_partial\comment\livere.ejs</code> 文件，输入如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 来必力City版安装代码 --&gt;</span><br><span class="line">&lt;div id=&quot;lv-container&quot; data-id=&quot;city&quot; data-uid=&quot;&lt;%=theme.livere_uid%&gt;&quot;&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    (function(d, s) &#123;</span><br><span class="line">        var j, e = d.getElementsByTagName(s)[0];</span><br><span class="line"></span><br><span class="line">        if (typeof LivereTower === &apos;function&apos;) &#123; return; &#125;</span><br><span class="line"></span><br><span class="line">        j = d.createElement(s);</span><br><span class="line">        j.src = &apos;https://cdn-city.livere.com/js/embed.dist.js&apos;;</span><br><span class="line">        j.async = true;</span><br><span class="line"></span><br><span class="line">        e.parentNode.insertBefore(j, e);</span><br><span class="line">    &#125;)(document, &apos;script&apos;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;noscript&gt;为正常使用来必力评论功能请激活JavaScript&lt;/noscript&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!-- City版安装代码已完成 --&gt;</span><br></pre></td></tr></table></figure><p>然后编辑 <code>themes\yilia\layout\_partial\article.ejs</code> 文件，找到：<code>&lt;% if (!index &amp;&amp; post.comments){ %&gt;</code> ，添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.livere)&#123; %&gt;</span><br><span class="line">&lt;%- partial(&apos;comment/livere&apos;, &#123;</span><br><span class="line">key: post.slug,</span><br><span class="line">title: post.title,</span><br><span class="line">url: config.url+url_for(post.path)</span><br><span class="line">&#125;) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>在主题配置文件 <code>themes\yilia\_config.yml</code> 中添加以下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">livere:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">livere_uid:</span> <span class="string">你的id</span></span><br></pre></td></tr></table></figure><h3 id="211-关闭信息收集自选"><a class="markdownIt-Anchor" href="#211-关闭信息收集自选"></a> 2.11、关闭信息收集（自选）</h3><p>关于访问 <code>litten.me:9005</code> 的问题，这个主题的作者之前为了更好地完善这个主题，有时候会收集用户的客户端信息，详情请见 <a href="https://github.com/litten/hexo-theme-yilia/issues/528" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia/issues/528</a> ，如果不想被统计，就将 <code>themes\yilia\source-src\js\report.js</code> 里面的内容清空。不过这个请求是异步的，不会影响博客加载速度，而且作者已经不维护了，所以关不关都行。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;yilia 主题作者已经不维护了，还有好多坑没有填完，在此记录一下&lt;/p&gt;
&lt;p&gt;主题地址：&lt;a href=&quot;https://github.com/litten/hexo-theme-yilia&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/litten/hexo-theme-yilia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文章同步更新地址：&lt;a href=&quot;https://www.cnblogs.com/zhangxiaochn/p/Hexo_Theme_Yilia.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/zhangxiaochn/p/Hexo_Theme_Yilia.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://zhangxiaocn.github.io/tags/Hexo/"/>
    
      <category term="美化" scheme="https://zhangxiaocn.github.io/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github 创建个人博客</title>
    <link href="https://zhangxiaocn.github.io/2019/10/25/create-blog/"/>
    <id>https://zhangxiaocn.github.io/2019/10/25/create-blog/</id>
    <published>2019-10-25T11:54:41.000Z</published>
    <updated>2020-02-04T07:11:28.661Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装及配置"><a class="markdownIt-Anchor" href="#1-安装及配置"></a> 1、安装及配置</h2><p>首先安装如下软件，安装过程无脑点击下一步即可。</p><ul><li><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a></p></li><li><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>：建议下载 LTS 长期支持版</p></li></ul><a id="more"></a><p>安装完成后，在 cmd 里输入 <code>git version</code> 即可查看 git 当前版本。输入 <code>node -v</code> 即可查看 node.js 当前版本。</p><p>接下来，新建一个文件夹，创建的位置任选。该文件夹主要用来存放博客的所有文件。然后进入该文件夹（这里就是博客文件夹的根目录，后文很多地方会用到），右键选择 <code>Git Bash Here</code> 选项。</p><p>在弹出的窗口中，输入 <code>npm config set registry https://registry.npm.taobao.org</code> 切换为淘宝源，从而加快下载速度。</p><p>接着，输入 <code>npm i -g hexo</code> 安装 hexo。</p><p>安装完成后，在当前窗口中，输入 <code>hexo -v</code> 即可查看 hexo 当前版本。</p><p>然后，我们输入命令 <code>hexo init</code>，初始化 hexo ，完成后打开我们的博客文件夹，即可看到该文件夹里有很多的文件了，这些都是我们搭建博客所需要的文件。</p><h2 id="2-github-配置"><a class="markdownIt-Anchor" href="#2-github-配置"></a> 2、github 配置</h2><p>首先进入 <a href="https://github.com/" target="_blank" rel="noopener">github</a> 官网，注册新账号，账号名称一定要想好了再填，不然你会后悔的。。。</p><p>注册成功后点击右上角的 New repository，在 Reposotory name 栏中填入 <code>yourname.github.io</code> （yourname 改为你账号的名称），然后点击 Create reposutory。</p><p>接着我们回到博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，配置 github 账户的信息，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>命令中的 yourname 和 youremail 分别改为你的账户名以及你创建该账户的邮箱。</p><p>然后输入<code>cd ~/.ssh</code> 检查电脑中的 SSH Key，会出现提示： <code>No such file or directory</code> 。</p><p>接下来我们开始创建 SSH。回到博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，输入 <code>ssh-keygen -t rsa -C &quot;youremail@example.com</code>，将 <a href="mailto:youremail@example.com" target="_blank" rel="noopener">youremail@example.com</a> 改为你的账户邮箱。一路回车即可。</p><p>紧接着输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure><p>将获取的 ssh 复制下来，打开 github 首页，点击页面右上角的头像，选择 Settings，在下面的选项中找到 SSH and GPG keys 。点击 New SSH key ，Title 里的内容可以自定义，Key 里粘贴刚才复制的内容。点击 add key。</p><p>返回到博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，输入 <code>ssh -T git@github.com</code> 。</p><p>若弹出 <code>Are you sure you want to continue connecting (yes/no)?</code>  时输入 <code>yes</code> 并回车。</p><p>接着出现 <code>Hi xxx! You've successfully authenticated, but GitHub does not provide shell access.</code></p><p>则操作成功。</p><h2 id="3-博客配置"><a class="markdownIt-Anchor" href="#3-博客配置"></a> 3、博客配置</h2><p>打开你的博客文件夹，找到 <code>_config.yml</code> 文件并打开，在最后修改并添加如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>将 YourgithubName 改为你的 github 账号名。保存文件。</p><p>回到博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，分别执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>接着打开浏览器，在浏览器中输入 <code>http://localhost:4000</code> 即可看到你的本地博客了。</p><h2 id="4-博客上传"><a class="markdownIt-Anchor" href="#4-博客上传"></a> 4、博客上传</h2><p>在博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，输入 <code>npm install hexo-deployer-git --save</code> 安装部署到 github 的插件。</p><p>然后执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>中途可能会出现弹窗需要输入 github 账号和密码。输入完即可。</p><p>接下来等待十分钟左右，等待 github 将博客文件配置完成。</p><p>在浏览器中输入 <code>https://yourgithubname.github.io</code> （yourgithubname 为你的 github 账号名）即可看到你的个人博客了。</p><h2 id="5-创建文章"><a class="markdownIt-Anchor" href="#5-创建文章"></a> 5、创建文章</h2><p>博客搭建完成后，在博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，输入 <code>hexo n yourtitle</code> （yourtitle 改为你自定义的文章标题）即可创建文章，文章保存的路径在  <code>博客文件夹根目录/source/_posts</code> 文件夹中，文件格式为 markdown 格式，想要写文章的朋友可以自学 markdown 语法，然后就可以打开这个文件进行写作了。</p><p>写作完成后，进入你的博客文件夹根目录，右键选择 <code>Git Bash Here</code> 选项 ，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>即可上传到 github。</p><h2 id="6-绑定域名"><a class="markdownIt-Anchor" href="#6-绑定域名"></a> 6、绑定域名</h2><p>不需要更换域名的朋友可以跳过这一节。</p><p>GitHub Pages 支持使用自己的域名，喜欢个性化的朋友可以选择一个合适的域名绑定博客。</p><p>以下用阿里云举例。</p><p>首先购买一个域名，购买完成后，如果没有进行过实名认证的话，一定要进行实名认证，也就是域名状态那里。</p><p>进行实名认证后，进行域名解析。首先进入博客文件夹根目录，右键选择 <code>Git Bash Here</code> 选项，然后输入 <code>ping @yourname.github.io</code> ，得到 IP 并复制。</p><p>进入阿里云控制台，点击域名后面的 <code>解析</code>，添加如下记录：</p><table><thead><tr><th style="text-align:center">记录类型</th><th style="text-align:center">主机记录</th><th style="text-align:center">记录值</th><th style="text-align:center">TTL</th></tr></thead><tbody><tr><td style="text-align:center">CNAME</td><td style="text-align:center">@</td><td style="text-align:center"><a href="http://yourname.github.io" target="_blank" rel="noopener">yourname.github.io</a></td><td style="text-align:center">10分钟</td></tr><tr><td style="text-align:center">A</td><td style="text-align:center">www</td><td style="text-align:center">yourIP</td><td style="text-align:center">10分钟</td></tr></tbody></table><p>将 yourname 改为你的 github 账户名，将 yourIP 改为你刚才复制的 IP。其他保持默认即可。</p><p>进入 github，打开刚刚创建的仓库，打开 <code>Setting</code> ，找到  <code>Github pages</code> ，在 <code>Custom domain</code> 里输入你购买的域名，例如: <code>www.yourname.com</code> ( <code>www.</code> 可以不写 ) ，点击 <code>save</code> ，勾选下面的 <code>Enforce HTTPS</code> 选项。</p><p>进入博客文件夹根目录，找到 <code>source</code> ，在里面创建一个文本文档，输入你购买的域名，例如： <code>www.yourname.com</code> ( <code>www.</code> 可以不写 )，保存后重命名为 <code>CNAME</code> ，并将文件后缀名删除。</p><p>然后进入博客文件夹根目录，右键选择 <code>Git Bash Here</code> 选项，输入 <code>hexo d -g</code> 即可。等待 10 分钟左右时间便可以用新域名访问博客。</p><h2 id="7-hexo-常用指令"><a class="markdownIt-Anchor" href="#7-hexo-常用指令"></a> 7、hexo 常用指令</h2><p>平常我们用到的指令如下：</p><ul><li><code>hexo clean</code>：清除缓存文件和已生成的静态文件。</li><li><code>hexo g</code>：生成静态文件。</li><li><code>hexo s</code>：启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 。</li><li><code>hexo d</code>：部署网站。</li><li><code>hexo v</code>：显示 Hexo 版本。</li></ul><p>可以进入<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">Hexo文档</a> 查看更多指令。</p><h2 id="8-博客配置文件详解"><a class="markdownIt-Anchor" href="#8-博客配置文件详解"></a> 8、博客配置文件详解</h2><blockquote><p>“配置文件” 为博客根目录的 <code>_config.yml</code> 文件</p><p>部分注释来自互联网</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"><span class="comment"># Site（标题等必填）</span></span><br><span class="line"><span class="comment">#网站标题</span></span><br><span class="line"><span class="attr">title:</span></span><br><span class="line"><span class="comment">#网站副标题</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line"><span class="comment">#网站描述</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="comment">#作者昵称</span></span><br><span class="line"><span class="attr">author:</span></span><br><span class="line"><span class="comment">#网站语言，默认英语，设置简体中文</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="comment">#时区，默认电脑时区</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">#如果网站是放在子目录中，将url设置成'http://yoursite.com/child'，将root设置成'/child/'</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="comment">#网址（输入你的GitHub Pages地址）</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">http://用户名.github.io</span></span><br><span class="line"><span class="comment">#网站根目录。如果网站是放在子目录中，将root设置成'子目录名'</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="comment">#文章链接地址格式 。即文章存放的目录。（**注意**：为方便网络爬虫抓取博客信息，一般都会把网址设置成“三段”，而Hexo默认为“域名:年:月:日:标题”五段。强烈建议修改为**:year:month:day/:title/**以便于抓取。）</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year:month:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="comment">#资源文件夹，放在里面的文件会上传到github中</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="comment">#公共文件夹，存放生成的静态文件</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="comment">#标签文件夹，默认是tags。实际存放在source/tags中。</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">rss_dir:</span> <span class="string">rss</span></span><br><span class="line"><span class="comment">#档案文件夹，默认是archives。</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="comment">#分类文件夹，默认是categories。实际存放在source/categories中。</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="comment">#代码文件夹，默认是downloads/code</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="comment">#国际化文件夹，默认跟language相同</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="comment">#不需要渲染的文件夹或文件夹,格式为[文件名]</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="comment"># 新建博文（帖子）的默认名称</span></span><br><span class="line"><span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span></span><br><span class="line"><span class="comment">#默认布局模板是post，而不是draft和page</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="comment">#是否将标题转换成标题形式（首字母大写）</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="comment">#在新标签页面中打开网页</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="comment">#是否渲染草稿</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#启动 Asset 文件夹</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#把链接改为与根目录的相对位址</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#显示未来的文章</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#代码块的设置</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 使用代码高亮</span></span><br><span class="line"><span class="attr">line_number:</span> <span class="literal">true</span> <span class="comment"># 显示行号</span></span><br><span class="line"><span class="attr">auto_detect:</span> <span class="literal">true</span> <span class="comment"># 自动检测语言</span></span><br><span class="line"><span class="attr">tab_replace:</span></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">''</span></span><br><span class="line"><span class="comment">#每页文章数量</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="comment">#排序依据</span></span><br><span class="line"><span class="attr">order_by:</span> <span class="bullet">-date</span></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="comment">#默认分类</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="comment">#分类别名</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="comment">#标签别名</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">#Hexo 使用 Moment.js 来解析和显示时间。</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"><span class="comment"># Extensions 拓展插件配置</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">#主题配置</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">#选择主题,默认为landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br><span class="line"><span class="comment"># ---------------下面选项需要对应插件的支持---------------</span></span><br><span class="line"><span class="comment"># 部署配置</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">git@github.com:用户名/用户名.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"><span class="comment"># 配置RSS</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="comment">#feed 类型 (atom/rss2)</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line"><span class="comment">#rss 路径</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="comment">#在 rss 中最多生成的文章数(0显示所有)</span></span><br><span class="line"><span class="attr">limit:</span> <span class="number">0</span></span><br><span class="line"><span class="comment"># 自定义站点内容搜索</span></span><br><span class="line"><span class="comment"># 需要先安装插件：</span></span><br><span class="line"><span class="comment"># npm install hexo-generator-search --save</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="comment"># 如只想索引文章，可设置为post</span></span><br><span class="line"><span class="attr">field:</span> <span class="string">all</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-安装及配置&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-安装及配置&quot;&gt;&lt;/a&gt; 1、安装及配置&lt;/h2&gt;
&lt;p&gt;首先安装如下软件，安装过程无脑点击下一步即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Node.js&lt;/a&gt;：建议下载 LTS 长期支持版&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://zhangxiaocn.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
