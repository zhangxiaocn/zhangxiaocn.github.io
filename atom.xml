<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZhangXiao&#39;s Blog</title>
  
  <subtitle>清风湿润，茶烟轻扬。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangxiaocn.github.io/"/>
  <updated>2019-10-27T13:25:47.916Z</updated>
  <id>https://zhangxiaocn.github.io/</id>
  
  <author>
    <name>Zhang Xiao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我初学 C 的代码保留</title>
    <link href="https://zhangxiaocn.github.io/2019/10/27/my-c-memory/"/>
    <id>https://zhangxiaocn.github.io/2019/10/27/my-c-memory/</id>
    <published>2019-10-27T13:23:55.000Z</published>
    <updated>2019-10-27T13:25:47.916Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容为本人初学 C 的时候所写的部分代码，有些程序现在看起来写的真的很烂哈哈，但是舍不得删除呐，最后还是将它们保留了下来。。。这算不算是松鼠症？？</p><h1 id="求和问题"><a href="#求和问题" class="headerlink" title="求和问题"></a>求和问题</h1><p>求 1 + 2! + 3! + … + 20! 的和：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">float</span> a = <span class="number">1</span>, b = <span class="number">0</span>, i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++) &#123;</span><br><span class="line">        a = a * i;</span><br><span class="line">        b = b + a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 + 2! + 3! ... + 20! = %.0f\n"</span>, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求 1 + 2 + … + 100 的和：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b = <span class="number">0</span>;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">loop:</span><br><span class="line">    <span class="keyword">if</span> (a &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">        b = b + a;</span><br><span class="line">        a++;</span><br><span class="line">        <span class="keyword">goto</span> loop;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1 + 2 + ... + 100 的和为：%d\n"</span>, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13 … 求出这个数列的前 20 项之和：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">float</span> a = <span class="number">2</span>, b = <span class="number">1</span>, c = <span class="number">0</span>, d;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++) &#123;</span><br><span class="line">        c = a / b + c;</span><br><span class="line">        d = a;</span><br><span class="line">        a = a + b;</span><br><span class="line">        b = d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"这个数列的前20项之和为：%f\n"</span>, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求序列 S = 2/1 + 3/2 + 5/3 + 8/5 + 13/8 + …… 前 n 项和：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">float</span> S = <span class="number">0</span>, s1 = <span class="number">2</span>, s2 = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> a, n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入 n 的值："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">0</span>; a &lt; n; a++) &#123;</span><br><span class="line">        S = (s1 / s2) + S;</span><br><span class="line">        s2 = s1;</span><br><span class="line">        s1 = (<span class="number">2</span> * s1) - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"S = 2/1 + 3/2 + 5/3 + 8/5 + 13/8 + …… 前 n 项和为：%f"</span>, S);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求 1 到 100 之间的奇数之和，偶数之和：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">2</span> != <span class="number">0</span>)</span><br><span class="line">            sum1 += i;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            sum2 += i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1~100 的奇数和为：%d\n"</span>, sum1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"1~100 的偶数和为：%d\n"</span>, sum2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="阶乘问题"><a href="#阶乘问题" class="headerlink" title="阶乘问题"></a>阶乘问题</h1><p>求 n 的阶乘 n!：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">factorial</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>, s = <span class="number">1</span>, n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要求阶乘的数字："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        s = s * i;</span><br><span class="line">        i++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (i &lt;= n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d! = %d\n"</span>, n, s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">factorial</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, s, n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要求阶乘的数字："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>, s = <span class="number">1</span>; i &lt;= n; i++) s = s * i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d! = %d\n"</span>, n, s);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">factorial</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>, s = <span class="number">1</span>, n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入需要求阶乘的数字："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= n) &#123;  <span class="comment">// 一直算到 i &gt; n 时循环结束，输出</span></span><br><span class="line">        s = s * i;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d! = %d\n"</span>, n, s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="素数问题"><a href="#素数问题" class="headerlink" title="素数问题"></a>素数问题</h1><p>判断输入的数字是否为素数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime_number</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>, i;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"输入一个整数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">            a++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d 是素数\n"</span>, n);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d 不是素数\n"</span>, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求出 100~200 之间的所有素数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime_number</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m, i, a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"100~200 之间的所有素数为："</span>);</span><br><span class="line">    <span class="keyword">for</span> (m = <span class="number">101</span>; m &lt;= <span class="number">200</span>; m++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (m % i == <span class="number">0</span>) a++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%-4d"</span>, m);</span><br><span class="line">            b++;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            a = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n这些素数一共有 %d 个"</span>, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求 100~300 之间所有素数之和：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime_number</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m, i, a = <span class="number">0</span>, b = <span class="number">0</span>, c, d = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"100 ~ 300之间所有素数之和为："</span>);</span><br><span class="line">    <span class="keyword">for</span> (m = <span class="number">101</span>; m &lt;= <span class="number">300</span>; m++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (m % i == <span class="number">0</span>) a++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">0</span>) &#123;</span><br><span class="line">            c = m;</span><br><span class="line">            d = c + d;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            a = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写一个程序，从键盘输入一个整数，输出大于且紧随该整数的素数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime_number</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>, i, n, m;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"输入一个整数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    m = n + <span class="number">1</span>;</span><br><span class="line">A:</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (m % i == <span class="number">0</span>) &#123;</span><br><span class="line">            a++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"大于且最接近输入的数的素数是：%d\n"</span>, m);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        m = m + <span class="number">1</span>;</span><br><span class="line">        a = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">goto</span> A;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prime_number</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, m, c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        m++;</span><br><span class="line">        c = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (m % i == <span class="number">0</span>) &#123;</span><br><span class="line">                c = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="排序问题"><a href="#排序问题" class="headerlink" title="排序问题"></a>排序问题</h1><p>从键盘输入 10 个整数，编程求出其中的最大值和最小值，并输出结果：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sort</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max, min, m[<span class="number">10</span>], i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输出10个数："</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m[i]);  <span class="comment">// 输入 10 个数字，保存到 m[i] 中</span></span><br><span class="line">    max = min = m[<span class="number">0</span>];        <span class="comment">// 定义最值</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (max &lt; m[i])  <span class="comment">// m[i] 依次与最值比较，得出最大值 max</span></span><br><span class="line">            max = m[i];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (min &gt; m[i])  <span class="comment">// m[i] 依次与最值比较，得出最小值 min</span></span><br><span class="line">            min = m[i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"最大值 = %d\n最小值 = %d"</span>, max, min);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将输入的五个整数按照从小到大顺序排列：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sort</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">int</span> i, j, t;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入5个数："</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)          <span class="comment">// 进行 4 次循环，实现 4 趟比较</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span> - j; i++)  <span class="comment">// 在每一趟比较中进行 4－1 次比较</span></span><br><span class="line">            <span class="keyword">if</span> (a[i] &gt; a[i + <span class="number">1</span>])     <span class="comment">// 相邻两个数比较</span></span><br><span class="line">            &#123;</span><br><span class="line">                t = a[i];</span><br><span class="line">                a[i] = a[i + <span class="number">1</span>];</span><br><span class="line">                a[i + <span class="number">1</span>] = t;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"排序后的数据为："</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="输出图像"><a href="#输出图像" class="headerlink" title="输出图像"></a>输出图像</h1><p>输出一个菱形：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">diamond</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c;</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">0</span>; a &lt; <span class="number">4</span>; a++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (b = <span class="number">0</span>; b &lt;= <span class="number">2</span> - a; b++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span> (c = <span class="number">0</span>; c &lt;= <span class="number">2</span> * a; c++) <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (a = <span class="number">0</span>; a &lt;= <span class="number">2</span>; a++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (b = <span class="number">0</span>; b &lt;= a; b++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span> (c = <span class="number">0</span>; c &lt;= <span class="number">4</span> - <span class="number">2</span> * a; c++) <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出一个行数可调的菱形：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">diamond</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, i, j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);  <span class="comment">// 输入一个 n，则输出 2*n+1 行</span></span><br><span class="line">    <span class="keyword">for</span> (i = -n; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="built_in">abs</span>(i); j++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * n + <span class="number">1</span> - <span class="number">2</span> * <span class="built_in">abs</span>(i); j++) <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出空心菱形：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">diamond</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, k, line, m;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入行数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;line);</span><br><span class="line">    m = (line + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; m - i; k++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span> * i - <span class="number">3</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = m - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; m - i; k++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span> * i - <span class="number">3</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出一个正方形中的空心菱形（行数可控）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">diamond</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, i, j;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入这个空心菱形的行数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = -(n / <span class="number">2</span>); i &lt;= n / <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == -(n / <span class="number">2</span>) || i == (n / <span class="number">2</span>)) &#123;  <span class="comment">//第一行和最后一行</span></span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="built_in">abs</span>(i) + <span class="number">1</span>; j++) <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= (n - <span class="number">2</span> * (<span class="built_in">abs</span>(i) + <span class="number">1</span>)); j++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="built_in">abs</span>(i) + <span class="number">1</span>; j++) <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="文字玩法"><a href="#文字玩法" class="headerlink" title="文字玩法"></a>文字玩法</h1><p>输入一个 5 位数，判断它是不是回文数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">palindrome</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;           <span class="comment">// 带输入的数</span></span><br><span class="line">    <span class="keyword">int</span> g, w, s, q;  <span class="comment">// 分别表示的是个位、万位、十位、千位</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入一个 5 位数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">99999</span> || x &lt; <span class="number">10000</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"您输入的 %d 不是一个 5 位数\n"</span>, x);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        g = x % <span class="number">10</span>;</span><br><span class="line">        w = x / <span class="number">10000</span>;</span><br><span class="line">        s = (x % <span class="number">100</span>) / <span class="number">10</span>;</span><br><span class="line">        q = (x % <span class="number">10000</span>) / <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (g == w &amp;&amp; s == q)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d 是一个回文数\n"</span>, x);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d 不是一个回文数\n"</span>, x);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出 9×9 口诀表：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">table</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, result;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">            result = i * j;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d*%d=%-3d"</span>, i, j, result);  <span class="comment">// -3d 表示左对齐，占 3 位</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);  <span class="comment">// 每一行后换行</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容为本人初学 C 的时候所写的部分代码，有些程序现在看起来写的真的很烂哈哈，但是舍不得删除呐，最后还是将它们保留了下来。。。这算不算是松鼠症？？&lt;/p&gt;
&lt;h1 id=&quot;求和问题&quot;&gt;&lt;a href=&quot;#求和问题&quot; class=&quot;headerlink&quot; title=&quot;求
      
    
    </summary>
    
    
      <category term="C" scheme="https://zhangxiaocn.github.io/categories/C/"/>
    
    
      <category term="回忆" scheme="https://zhangxiaocn.github.io/tags/%E5%9B%9E%E5%BF%86/"/>
    
      <category term="C" scheme="https://zhangxiaocn.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Hexo yilia主题的启用及设置</title>
    <link href="https://zhangxiaocn.github.io/2019/10/25/hexo-theme-yilia/"/>
    <id>https://zhangxiaocn.github.io/2019/10/25/hexo-theme-yilia/</id>
    <published>2019-10-25T13:57:17.000Z</published>
    <updated>2019-10-26T06:16:36.822Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>yilia 主题作者已经不维护了，还有好多坑没有填完，在此记录一下</p><p>主题地址：<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia</a></p><p>本文章同步更新地址：<a href="https://www.cnblogs.com/zhangxiaochn/p/Hexo_Theme_Yilia.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhangxiaochn/p/Hexo_Theme_Yilia.html</a></p></blockquote><h1 id="主题的启用"><a href="#主题的启用" class="headerlink" title="主题的启用"></a>主题的启用</h1><h2 id="下载并启用"><a href="#下载并启用" class="headerlink" title="下载并启用"></a>下载并启用</h2><p>进入命令行，下载 yilia 主题，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><p>修改站点配置文件 <code>_config.yml</code>，找到如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br></pre></td></tr></table></figure><p>将 <code>landscape</code> 修改为 <code>yilia</code> 即可。</p><h2 id="修改语言"><a href="#修改语言" class="headerlink" title="修改语言"></a>修改语言</h2><p>打开站点配置文件，搜索<code>language</code>，找到如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">author:</span></span><br><span class="line"><span class="attr">language:</span></span><br><span class="line"><span class="attr">timezone:</span></span><br></pre></td></tr></table></figure><p>在 <code>language</code> 后面输入 <code>zh-CN</code>。</p><p>注意：冒号后面必须有一个空格。</p><h1 id="主题相关设置"><a href="#主题相关设置" class="headerlink" title="主题相关设置"></a>主题相关设置</h1><h2 id="“所有文章”按钮的安装"><a href="#“所有文章”按钮的安装" class="headerlink" title="“所有文章”按钮的安装"></a>“所有文章”按钮的安装</h2><p>首先使用命令 <code>node -v</code> 检查版本是不是大于 6.2</p><p>在博客根目录执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-generator-json-content --save</span><br></pre></td></tr></table></figure><p>在博客配置文件 <code>_config.yml</code> 最下面加上：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jsonContent:</span></span><br><span class="line"><span class="attr">  meta:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  pages:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  posts:</span></span><br><span class="line"><span class="attr">    title:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    date:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    path:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    text:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    raw:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    content:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    slug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    updated:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    permalink:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    excerpt:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    categories:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    tags:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="添加图片资源文件夹"><a href="#添加图片资源文件夹" class="headerlink" title="添加图片资源文件夹"></a>添加图片资源文件夹</h2><p>路径为 <code>themes/yilia/source/</code> 下，可添加一个 <code>assets</code> 文件夹，里面存放图片资源即可</p><p>需要添加头像或者微信/支付宝二维码图片，直接引用即可。路径为 <code>themes/yilia/_config.yml</code> 。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 微信二维码图片</span></span><br><span class="line"><span class="attr">weixin:</span>  <span class="string">/assets/img/wechat.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 头像图片</span></span><br><span class="line"><span class="attr">avatar:</span>  <span class="string">/assets/img/head.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网页图标</span></span><br><span class="line"><span class="attr">favicon:</span>  <span class="string">/assets/img/head.jpg</span></span><br></pre></td></tr></table></figure><h2 id="文章显示摘要"><a href="#文章显示摘要" class="headerlink" title="文章显示摘要"></a>文章显示摘要</h2><p>在你 MD 格式文章正文插入 <code>&lt;!-- more --&gt;</code> 即可，只会显示它之前的，此后的就不显示，点击文章标题，全文阅读才可看到，同时注释掉文件 <code>themes/yilia/_config.yml</code> 里的：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># excerpt_link: more</span></span><br></pre></td></tr></table></figure><h2 id="文章显示目录"><a href="#文章显示目录" class="headerlink" title="文章显示目录"></a>文章显示目录</h2><p>增加文章目录 TOC ( table of content )，方便阅读文章，在 <code>themes/yilia/_config.yml</code> 中进行配置 <code>toc: 2</code> 即可，它会将你 Markdown 语法的标题，生成目录，目录查看在右下角。</p><h2 id="增加归档菜单"><a href="#增加归档菜单" class="headerlink" title="增加归档菜单"></a>增加归档菜单</h2><p>修改 <code>themes/yilia/_config.yml</code> 内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">    <span class="string">主页:</span>  <span class="string">/</span></span><br><span class="line">    <span class="string">归档:</span>  <span class="string">/archives/index.html</span></span><br></pre></td></tr></table></figure><h2 id="修复失效的微信分享二维码"><a href="#修复失效的微信分享二维码" class="headerlink" title="修复失效的微信分享二维码"></a>修复失效的微信分享二维码</h2><p> 打开 <code>themes\yilia\layout\_partial\post\share.ejs</code> 文件</p><p>把第49行中的 <code>//pan.baidu.com/share/qrcode?url=</code> 修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//api.qrserver.com/v1/create-qr-code/?size=150x150&amp;data=</span><br></pre></td></tr></table></figure><h2 id="更改左侧昵称字体"><a href="#更改左侧昵称字体" class="headerlink" title="更改左侧昵称字体"></a>更改左侧昵称字体</h2><p>在 <code>themes\yilia\source\main.0cf68a.css</code> 文件里面修改，找到 <code>header-author</code> ，修改里面的 <code>font-family</code> ，改成：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-family</span><span class="selector-pseudo">:"Times</span> <span class="selector-tag">New</span> <span class="selector-tag">Roman</span>",<span class="selector-tag">Georgia</span>,<span class="selector-tag">Serif</span></span><br></pre></td></tr></table></figure><h2 id="左侧显示总文章数"><a href="#左侧显示总文章数" class="headerlink" title="左侧显示总文章数"></a>左侧显示总文章数</h2><p>打开 <code>themes\yilia\layout\_partial\left-col.ejs</code> 文件</p><p>在：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav class=&quot;header-menu&quot;&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">    &lt;% for (var i in theme.menu)&#123; %&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href=&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;&gt;&lt;%= i %&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;%&#125;%&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><p>后面添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav&gt;</span><br><span class="line">    总文章数 &lt;%=site.posts.length%&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><h2 id="添加字数统计"><a href="#添加字数统计" class="headerlink" title="添加字数统计"></a>添加字数统计</h2><p>首先安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a></p><p>使用如下命令安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><blockquote><p>Node 版本7.6.0之前,请安装 2.x 版本 (Node.js v7.6.0 and previous)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount@2 --save</span><br></pre></td></tr></table></figure><p>然后在 <code>themes\yilia\layout\_partial\left-col.ejs</code>中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav&gt;</span><br><span class="line">总字数 &lt;span class=&quot;post-count&quot;&gt;&lt;%= totalcount(site, &apos;0,0.0a&apos;) %&gt;&lt;/span&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><p>添加位置在如下代码的下面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav&gt;</span><br><span class="line">    总文章数 &lt;%=site.posts.length%&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><p>编辑 <code>themes\yilia\layout\_partial\article.ejs</code></p><p>在header下面加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=&quot;center&quot; class=&quot;post-count&quot;&gt;</span><br><span class="line">    字数：&lt;%= wordcount(post.content) %&gt;字 | 预计阅读时长：&lt;%= min2read(post.content) %&gt;分钟</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>即可显示单篇字数和预计阅读时长。</p><h2 id="添加来必力-livere-评论系统"><a href="#添加来必力-livere-评论系统" class="headerlink" title="添加来必力(livere)评论系统"></a>添加来必力(livere)评论系统</h2><p>yilia 默认带了几个系统，但是没有来必力，所以可以自己加</p><p>首先是去注册来必力，然后获取到自己的 <code>id</code></p><p>新建 <code>themes\yilia\layout\_partial\comment\livere.ejs</code> 文件，输入如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 来必力City版安装代码 --&gt;</span><br><span class="line">&lt;div id=&quot;lv-container&quot; data-id=&quot;city&quot; data-uid=&quot;&lt;%=theme.livere_uid%&gt;&quot;&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    (function(d, s) &#123;</span><br><span class="line">        var j, e = d.getElementsByTagName(s)[0];</span><br><span class="line"></span><br><span class="line">        if (typeof LivereTower === &apos;function&apos;) &#123; return; &#125;</span><br><span class="line"></span><br><span class="line">        j = d.createElement(s);</span><br><span class="line">        j.src = &apos;https://cdn-city.livere.com/js/embed.dist.js&apos;;</span><br><span class="line">        j.async = true;</span><br><span class="line"></span><br><span class="line">        e.parentNode.insertBefore(j, e);</span><br><span class="line">    &#125;)(document, &apos;script&apos;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;noscript&gt;为正常使用来必力评论功能请激活JavaScript&lt;/noscript&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!-- City版安装代码已完成 --&gt;</span><br></pre></td></tr></table></figure><p>然后编辑 <code>themes\yilia\layout\_partial\article.ejs</code> 文件，找到：<code>&lt;% if (!index &amp;&amp; post.comments){ %&gt;</code> ，添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.livere)&#123; %&gt;</span><br><span class="line">&lt;%- partial(&apos;comment/livere&apos;, &#123;</span><br><span class="line">key: post.slug,</span><br><span class="line">title: post.title,</span><br><span class="line">url: config.url+url_for(post.path)</span><br><span class="line">&#125;) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>在主题配置文件 <code>themes\yilia\_config.yml</code> 中添加以下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">livere:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">livere_uid:</span> <span class="string">你的id</span></span><br></pre></td></tr></table></figure><h2 id="关闭信息收集（自选）"><a href="#关闭信息收集（自选）" class="headerlink" title="关闭信息收集（自选）"></a>关闭信息收集（自选）</h2><p>关于访问 <code>litten.me:9005</code> 的问题，这个主题的作者之前为了更好地完善这个主题，有时候会收集用户的客户端信息，详情请见 <a href="https://github.com/litten/hexo-theme-yilia/issues/528" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia/issues/528</a> ，如果不想被统计，就将 <code>themes\yilia\source-src\js\report.js</code> 里面的内容清空。不过这个请求是异步的，不会影响博客加载速度，而且作者已经不维护了，所以关不关都行。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;yilia 主题作者已经不维护了，还有好多坑没有填完，在此记录一下&lt;/p&gt;
&lt;p&gt;主题地址：&lt;a href=&quot;https://github.com/litten/hexo-theme-yilia&quot; target=&quot;_blank&quot; rel=&quot;noop
      
    
    </summary>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/tags/Blog/"/>
    
      <category term="美化" scheme="https://zhangxiaocn.github.io/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github 创建个人博客</title>
    <link href="https://zhangxiaocn.github.io/2019/10/25/create-blog/"/>
    <id>https://zhangxiaocn.github.io/2019/10/25/create-blog/</id>
    <published>2019-10-25T11:54:41.000Z</published>
    <updated>2019-10-26T06:16:24.661Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装及配置"><a href="#安装及配置" class="headerlink" title="安装及配置"></a>安装及配置</h1><p>首先安装如下软件，安装过程无脑点击下一步即可。</p><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>：建议下载 LTS 长期支持版</li><li><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git</a></li></ul><p>安装完成后，在 cmd 里输入 <code>git version</code> 即可查看 git 当前版本。输入 <code>node -v</code> 即可查看 node.js 当前版本。</p><p>接下来，新建一个文件夹，创建的位置任选。该文件夹主要用来存放博客的所有文件。然后进入该文件夹（这里就是博客文件夹的根目录，后文很多地方会用到），右键选择 <code>Git Bash Here</code> 选项。</p><p>在弹出的窗口中，输入 <code>npm config set registry https://registry.npm.taobao.org</code> 切换为淘宝源，从而加快下载速度。</p><p>接着，输入 <code>npm i -g hexo</code> 安装 hexo。</p><p>安装完成后，在当前窗口中，输入 <code>hexo -v</code> 即可查看 hexo 当前版本。</p><p>然后，我们输入命令 <code>hexo init</code>，初始化 hexo ，完成后打开我们的博客文件夹，即可看到该文件夹里有很多的文件了，这些都是我们搭建博客所需要的文件。</p><h1 id="github-配置"><a href="#github-配置" class="headerlink" title="github 配置"></a>github 配置</h1><p>首先进入 <a href="https://github.com/" target="_blank" rel="noopener">github</a> 官网，注册新账号，账号名称一定要想好了再填，不然你会后悔的。。。</p><p>注册成功后点击右上角的 New repository，在 Reposotory name 栏中填入 <code>yourname.github.io</code> （yourname 改为你账号的名称），然后点击 Create reposutory。</p><p>接着我们回到博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，配置 github 账户的信息，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>命令中的 yourname 和 youremail 分别改为你的账户名以及你创建该账户的邮箱。</p><p>然后输入<code>cd ~/.ssh</code> 检查电脑中的 SSH Key，会出现提示： <code>No such file or directory</code> 。</p><p>接下来我们开始创建 SSH。回到博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，输入 <code>ssh-keygen -t rsa -C &quot;youremail@example.com</code>，将 <a href="mailto:youremail@example.com" target="_blank" rel="noopener">youremail@example.com</a> 改为你的账户邮箱。一路回车即可。</p><p>紧接着输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure><p>将获取的 ssh 复制下来，打开 github 首页，点击页面右上角的头像，选择 Settings，在下面的选项中找到 SSH and GPG keys 。点击 New SSH key ，Title 里的内容可以自定义，Key 里粘贴刚才复制的内容。点击 add key。</p><p>返回到博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，输入 <code>ssh -T git@github.com</code> 。</p><p>若弹出 <code>Are you sure you want to continue connecting (yes/no)?</code>  时输入 <code>yes</code> 并回车。</p><p>接着出现 <code>Hi xxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></p><p>则操作成功。</p><h1 id="博客配置"><a href="#博客配置" class="headerlink" title="博客配置"></a>博客配置</h1><p>打开你的博客文件夹，找到 <code>_config.yml</code> 文件并打开，在最后修改并添加如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/YourgithubName/YourgithubName.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>将 YourgithubName 改为你的 github 账号名。保存文件。</p><p>回到博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，分别执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>接着打开浏览器，在浏览器中输入 <code>http://localhost:4000</code> 即可看到你的本地博客了。</p><h1 id="博客上传"><a href="#博客上传" class="headerlink" title="博客上传"></a>博客上传</h1><p>在博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，输入 <code>npm install hexo-deployer-git --save</code> 安装部署到 github 的插件。</p><p>然后执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>中途可能会出现弹窗需要输入 github 账号和密码。输入完即可。</p><p>接下来等待十分钟左右，等待 github 将博客文件配置完成。</p><p>在浏览器中输入 <code>https://yourgithubname.github.io</code> （yourgithubname 为你的 github 账号名）即可看到你的个人博客了。</p><h1 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h1><p>博客搭建完成后，在博客文件夹的根目录，右键选择 <code>Git Bash Here</code> 选项，输入 <code>hexo n yourtitle</code> （yourtitle 改为你自定义的文章标题）即可创建文章，文章保存的路径在  <code>博客文件夹根目录/source/_posts</code> 文件夹中，文件格式为 markdown 格式，想要写文章的朋友可以自学 markdown 语法，然后就可以打开这个文件进行写作了。</p><p>写作完成后，进入你的博客文件夹根目录，右键选择 <code>Git Bash Here</code> 选项 ，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>即可上传到 github。</p><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>不需要更换域名的朋友可以跳过这一节。</p><p>GitHub Pages 支持使用自己的域名，喜欢个性化的朋友可以选择一个合适的域名绑定博客。</p><p>以下用阿里云举例。</p><p>首先购买一个域名，购买完成后，如果没有进行过实名认证的话，一定要进行实名认证，也就是域名状态那里。</p><p>进行实名认证后，进行域名解析。首先进入博客文件夹根目录，右键选择 <code>Git Bash Here</code> 选项，然后输入 <code>ping @yourname.github.io</code> ，得到 IP 并复制。</p><p>进入阿里云控制台，点击域名后面的 <code>解析</code>，添加如下记录：</p><table><thead><tr><th align="center">记录类型</th><th align="center">主机记录</th><th align="center">记录值</th><th align="center">TTL</th></tr></thead><tbody><tr><td align="center">CNAME</td><td align="center">@</td><td align="center">yourname.github.io</td><td align="center">10分钟</td></tr><tr><td align="center">A</td><td align="center">www</td><td align="center">yourIP</td><td align="center">10分钟</td></tr></tbody></table><p>将 yourname 改为你的 github 账户名，将 yourIP 改为你刚才复制的 IP。其他保持默认即可。</p><p>进入 github，打开刚刚创建的仓库，打开 <code>Setting</code> ，找到  <code>Github pages</code> ，在 <code>Custom domain</code> 里输入你购买的域名，例如: <code>www.yourname.com</code> ( <code>www.</code> 可以不写 ) ，点击 <code>save</code> ，勾选下面的 <code>Enforce HTTPS</code> 选项。</p><p>进入博客文件夹根目录，找到 <code>source</code> ，在里面创建一个文本文档，输入你购买的域名，例如： <code>www.yourname.com</code> ( <code>www.</code> 可以不写 )，保存后重命名为 <code>CNAME</code> ，并将文件后缀名删除。</p><p>然后进入博客文件夹根目录，右键选择 <code>Git Bash Here</code> 选项，输入 <code>hexo d -g</code> 即可。等待 10 分钟左右时间便可以用新域名访问博客。</p><h1 id="hexo-常用指令"><a href="#hexo-常用指令" class="headerlink" title="hexo 常用指令"></a>hexo 常用指令</h1><p>平常我们用到的指令如下：</p><ul><li><code>hexo clean</code>：清除缓存文件和已生成的静态文件。</li><li><code>hexo g</code>：生成静态文件。</li><li><code>hexo s</code>：启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 。</li><li><code>hexo d</code>：部署网站。</li><li><code>hexo v</code>：显示 Hexo 版本。</li></ul><p>可以进入<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">Hexo文档</a> 查看更多指令。</p><h1 id="博客配置文件详解"><a href="#博客配置文件详解" class="headerlink" title="博客配置文件详解"></a>博客配置文件详解</h1><blockquote><p>“配置文件” 为博客根目录的 <code>_config.yml</code> 文件</p><p>部分注释来自互联网</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"><span class="comment"># Site（标题等必填）</span></span><br><span class="line"><span class="comment">#网站标题</span></span><br><span class="line"><span class="attr">title:</span></span><br><span class="line"><span class="comment">#网站副标题</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line"><span class="comment">#网站描述</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="comment">#作者昵称</span></span><br><span class="line"><span class="attr">author:</span></span><br><span class="line"><span class="comment">#网站语言，默认英语，设置简体中文</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="comment">#时区，默认电脑时区</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">#如果网站是放在子目录中，将url设置成'http://yoursite.com/child'，将root设置成'/child/'</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="comment">#网址（输入你的GitHub Pages地址）</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">http://用户名.github.io</span></span><br><span class="line"><span class="comment">#网站根目录。如果网站是放在子目录中，将root设置成'子目录名'</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="comment">#文章链接地址格式 。即文章存放的目录。（**注意**：为方便网络爬虫抓取博客信息，一般都会把网址设置成“三段”，而Hexo默认为“域名:年:月:日:标题”五段。强烈建议修改为**:year:month:day/:title/**以便于抓取。）</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year:month:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="comment">#资源文件夹，放在里面的文件会上传到github中</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="comment">#公共文件夹，存放生成的静态文件</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="comment">#标签文件夹，默认是tags。实际存放在source/tags中。</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">rss_dir:</span> <span class="string">rss</span></span><br><span class="line"><span class="comment">#档案文件夹，默认是archives。</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="comment">#分类文件夹，默认是categories。实际存放在source/categories中。</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="comment">#代码文件夹，默认是downloads/code</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="comment">#国际化文件夹，默认跟language相同</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="comment">#不需要渲染的文件夹或文件夹,格式为[文件名]</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="comment"># 新建博文（帖子）的默认名称</span></span><br><span class="line"><span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span></span><br><span class="line"><span class="comment">#默认布局模板是post，而不是draft和page</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="comment">#是否将标题转换成标题形式（首字母大写）</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="comment">#在新标签页面中打开网页</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="comment">#是否渲染草稿</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#启动 Asset 文件夹</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#把链接改为与根目录的相对位址</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#显示未来的文章</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#代码块的设置</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 使用代码高亮</span></span><br><span class="line"><span class="attr">line_number:</span> <span class="literal">true</span> <span class="comment"># 显示行号</span></span><br><span class="line"><span class="attr">auto_detect:</span> <span class="literal">true</span> <span class="comment"># 自动检测语言</span></span><br><span class="line"><span class="attr">tab_replace:</span></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">''</span></span><br><span class="line"><span class="comment">#每页文章数量</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="comment">#排序依据</span></span><br><span class="line"><span class="attr">order_by:</span> <span class="bullet">-date</span></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="comment">#默认分类</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="comment">#分类别名</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="comment">#标签别名</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">#Hexo 使用 Moment.js 来解析和显示时间。</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"><span class="comment"># Extensions 拓展插件配置</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">#主题配置</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">#选择主题,默认为landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br><span class="line"><span class="comment"># ---------------下面选项需要对应插件的支持---------------</span></span><br><span class="line"><span class="comment"># 部署配置</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">git@github.com:用户名/用户名.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"><span class="comment"># 配置RSS</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="comment">#feed 类型 (atom/rss2)</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line"><span class="comment">#rss 路径</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="comment">#在 rss 中最多生成的文章数(0显示所有)</span></span><br><span class="line"><span class="attr">limit:</span> <span class="number">0</span></span><br><span class="line"><span class="comment"># 自定义站点内容搜索</span></span><br><span class="line"><span class="comment"># 需要先安装插件：</span></span><br><span class="line"><span class="comment"># npm install hexo-generator-search --save</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="comment"># 如只想索引文章，可设置为post</span></span><br><span class="line"><span class="attr">field:</span> <span class="string">all</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装及配置&quot;&gt;&lt;a href=&quot;#安装及配置&quot; class=&quot;headerlink&quot; title=&quot;安装及配置&quot;&gt;&lt;/a&gt;安装及配置&lt;/h1&gt;&lt;p&gt;首先安装如下软件，安装过程无脑点击下一步即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://node
      
    
    </summary>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://zhangxiaocn.github.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://zhangxiaocn.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
